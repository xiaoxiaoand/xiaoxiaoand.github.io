<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Rabbitmq</title>
      <link href="/posts/1ba9caba/"/>
      <url>/posts/1ba9caba/</url>
      
        <content type="html"><![CDATA[<h1 id="Rabbitmq"><a href="#Rabbitmq" class="headerlink" title="Rabbitmq"></a>Rabbitmq</h1><p>高并发，异步解耦，流量消峰，降低耦合</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4j</title>
      <link href="/posts/a2702c10/"/>
      <url>/posts/a2702c10/</url>
      
        <content type="html"><![CDATA[<h1 id="log4j"><a href="#log4j" class="headerlink" title="log4j"></a>log4j</h1><p>日志工具<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">545</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习</title>
      <link href="/posts/ac1ae772/"/>
      <url>/posts/ac1ae772/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring框架"><a href="#Spring框架" class="headerlink" title="Spring框架"></a>Spring框架</h1><ol><li>IOC（控制反转）<br>它可以装载bean，也是一种降低对象之间耦合关系的设计思想。（比如租房子。以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。）</li><li><p>AOP（面向切面）<br>是面向对象开发的一种补充，它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。</p></li><li><p>声明事务</p></li><li>注解启动</li></ol><p>工厂模式：通过类的静态调用来new</p><p>反射</p><p>动态代理</p><p>方法解耦</p><p>Junit单元测试</p><p>springmvc springboot springcloud </p><h2 id="8大模块"><a href="#8大模块" class="headerlink" title="8大模块"></a>8大模块</h2><h3 id="核心模块4"><a href="#核心模块4" class="headerlink" title="核心模块4"></a>核心模块4</h3><h4 id="Beans"><a href="#Beans" class="headerlink" title="Beans"></a>Beans</h4><h4 id="Core"><a href="#Core" class="headerlink" title="Core"></a>Core</h4><h4 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h4><h4 id="SpEL"><a href="#SpEL" class="headerlink" title="SpEL"></a>SpEL</h4><h3 id="数据访问及集成"><a href="#数据访问及集成" class="headerlink" title="数据访问及集成"></a>数据访问及集成</h3><h4 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h4><h4 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h4><h4 id="OXM"><a href="#OXM" class="headerlink" title="OXM"></a>OXM</h4><h4 id="JMS"><a href="#JMS" class="headerlink" title="JMS"></a>JMS</h4><h4 id="Transactions"><a href="#Transactions" class="headerlink" title="Transactions"></a>Transactions</h4><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h4><h4 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h4><h4 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h4><h4 id="Portlet"><a href="#Portlet" class="headerlink" title="Portlet"></a>Portlet</h4><h3 id="其他模块"><a href="#其他模块" class="headerlink" title="其他模块"></a>其他模块</h3><h4 id="Aop"><a href="#Aop" class="headerlink" title="Aop"></a>Aop</h4><h4 id="Aspects"><a href="#Aspects" class="headerlink" title="Aspects"></a>Aspects</h4><h4 id="Instrumentation"><a href="#Instrumentation" class="headerlink" title="Instrumentation"></a>Instrumentation</h4><h4 id="Messaging"><a href="#Messaging" class="headerlink" title="Messaging"></a>Messaging</h4><h4 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h4><p>//</p><p>Struts</p><p>Hibernate</p><p>Quartz</p><p>注解</p><p>xml</p><p>对象的创建</p><p>1.new</p><p>2.工厂模式</p><p>统一管理</p><p>3.反射</p><p>SpringIOC容器：反射+工厂+xml</p><img src="/posts/undefined/image-20240727142356365.png" class="" title="image-20240727142356365"><img src="/posts/undefined/image-20240727142555920.png" class="" title="image-20240727142555920"><p>DI依赖注入：给对象属性注入值</p><ol><li>set方法</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userEntity&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;485&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>有参构造</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userEntity&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userEntity&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>p标签：调用set</li></ol><p>…</p><p>空值和特殊符号</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userEntity&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>转义</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;<span class="symbol">&amp;lt;</span>转意<span class="symbol">&amp;lt;</span>&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;![CDATA[]]&gt;</code></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;AAA&gt;]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.service.UserService&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.dao.UserDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>内部bean对象</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userEntity&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;classEntitiy&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;classEntitiy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;youi.entity.ClassEntitiy&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>级联赋值</p><p>SpringBean生命周期</p><p>bean后置处理器</p><p>反射</p><p>双亲委派机制</p><p>一个类只有一个class</p><p>代理模式</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端vue</title>
      <link href="/posts/154f45a1/"/>
      <url>/posts/154f45a1/</url>
      
        <content type="html"><![CDATA[<h1 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h1><p>jquery</p><p>React</p><p>ElementUI</p><h2 id="mvvm"><a href="#mvvm" class="headerlink" title="mvvm"></a>mvvm</h2><p>双向绑定</p><p>m     模型</p><p>v    视图</p><p>vm    绑定</p><img src="/posts/undefined/image-20240726182928745-1721989769165-1.png" class="" title="image-20240726182928745">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis学习</title>
      <link href="/posts/9dbabd25/"/>
      <url>/posts/9dbabd25/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h1><p>数据库层持久层框架（orm）</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><ol><li>读取核心配置</li><li>映射Mapper文件</li><li>创建会话工厂</li><li>创建会话对象</li><li>创建执行器</li><li>封装映射对象</li><li>操作数据库</li><li>输出结果映射</li></ol><h2 id="核心对象"><a href="#核心对象" class="headerlink" title="核心对象"></a>核心对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactoryBuilder</span><br><span class="line">SqlSessionFactory  <span class="comment">//通过SqlSessionFactoryBuilder的build方法构建</span></span><br><span class="line">SqlSession    <span class="comment">//通过SqlSessionFactory对象调用openSessionfang方法创建</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br></pre></td></tr></table></figure><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p>必须按照顺序依次配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--根目录--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置属性元素，用于读取外部配置信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--改变运动时的行为，如开启二级缓存，开启延迟加载等--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为POJO实体全限定类名设置一个别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">objectFactory</span>&gt;</span><span class="tag">&lt;/<span class="name">objectFactory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用于设置不同环境，如开发，测试，生产--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span>&gt;</span><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--引入映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="properties"><a href="#properties" class="headerlink" title="properties"></a>properties</h3><p>配置属性元素，用于读取外部配置信息。读取数据库配置文件<code>db.properties</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>读取后可动态获取连接信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="typeAliases"><a href="#typeAliases" class="headerlink" title="typeAliases"></a>typeAliases</h3><p>为POJO实体全限定类名设置一个别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.xxx.xxx.User&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置后，在映射文件中可以使用别名引用POJO实体</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByUserAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">select * from user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还可以自定义扫包，自动扫描该文件夹下面的实体类，并把该实体类的名称<code>小写</code>作为别名。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.xxx.xxx&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Mybatis中对于数据类型也提供了默认的别名</p></blockquote><h3 id="environments"><a href="#environments" class="headerlink" title="environments"></a>environments</h3><p>用于设置不同环境，如开发，测试，生产</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--数据源信息--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">environments：环境配置的根元素</span><br><span class="line">default：指定默认环境的ID</span><br><span class="line"></span><br><span class="line">environment：environments的子元素，可以有多个</span><br><span class="line">default：用于设置所定义环境的ID</span><br><span class="line"></span><br><span class="line">transactionManager：配置事务管理</span><br><span class="line">type：指定事务管理的方式，即使用的事务管理器</span><br><span class="line"></span><br><span class="line">dataSource：配置数据源</span><br><span class="line">type：指定使用的数据源</span><br></pre></td></tr></table></figure><h4 id="事务管理器"><a href="#事务管理器" class="headerlink" title="事务管理器"></a>事务管理器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JDBC</span><br><span class="line">MANAGED</span><br></pre></td></tr></table></figure><p>使用Spring+MyBatis，可以不用配置事务管理器，项目会使用Spring自带的管理器来实现事务管理。</p><h4 id="数据源类型"><a href="#数据源类型" class="headerlink" title="数据源类型"></a>数据源类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UNPOOLED  <span class="comment">//无连接池类型，数据源需要配置五种属性</span></span><br><span class="line"> <span class="comment">//driver，url，username，password，defaultTransactiionIsolationLevel(默认的连接事务隔离级别)</span></span><br><span class="line">POOLED<span class="comment">//连接池类型，除了五种属性外，还有其他属性...</span></span><br><span class="line">JNDI <span class="comment">//数据源可以在EJB或应用服务器等容器中使用</span></span><br></pre></td></tr></table></figure><h3 id="mappers"><a href="#mappers" class="headerlink" title="mappers"></a>mappers</h3><p>引入映射文件，有4种方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--类路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/userMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--本地文件路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///D:/com/xxx/mapper/userMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--接口类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.xxx.mapper.userMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--包名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">name</span>=<span class="string">&quot;com.xxx.mapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="映射文件"><a href="#映射文件" class="headerlink" title="映射文件"></a>映射文件</h2><p><code>&lt;mapper&gt;</code>根目录只有一个namespace属性，用于区分mapper，全局唯一。</p><ol><li>只有一个namespace属性，用于区分mapper，全局唯一</li><li>namespace绑定接口，可以不用写接口的实现类，必须与接口同名称</li></ol><p><code>&lt;select&gt;</code>映射查询语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxx.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByUserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;www.xxx.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">           select * from user where id = #&#123;id&#125;;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;www.youyi.entity.UserEntity&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        insert into user(username, password, email) values(#&#123;username&#125;, #&#123;password&#125;, #&#123;email&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;www.xxx.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">        update user set username=#&#123;username&#125;, password=#&#123;password&#125;, email=#&#123;email&#125; where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>id：select元素的唯一标识</p><p>parameterType：接收的数据类型</p><p>resultType：返回数据类型</p><p>其他属性…</p><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><p>keyProperty：</p><p>useGeneratedKeys：获取自动增长的主键</p><h3 id="resultMap"><a href="#resultMap" class="headerlink" title="resultMap"></a>resultMap</h3><p>结果集映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;www.youyi.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;passWord&quot;</span> <span class="attr">column</span>=<span class="string">&quot;pass_word&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>property：对应实体类</p><p>column：对应数据库数据表</p><h2 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p>如果满足if中的条件，拼接if中的语句。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;UserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="choose-when-otherwise"><a href="#choose-when-otherwise" class="headerlink" title="choose when otherwise"></a>choose when otherwise</h3><p>多选项选择一条，<code>otherwise</code>中为所以的<code>when</code>都不满足执行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;UserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">text</span>=<span class="string">&quot;jobs != null and jobs != &#x27;&#x27; &quot;</span>&gt;</span>and jobs = #&#123;jobs&#125;<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">text</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>and xxx =# &#123;xxx&#125;<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span>and phone is not null<span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><p>用来拼接sql，去掉<code>where 1=1</code>。只有在where范围内有条件成立才会添加。会自动去除多余的<code>and</code>和<code>or</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;UserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">prefix   <span class="comment">//添加前缀</span></span><br><span class="line">prefixOverrides  <span class="comment">//去掉前缀字符串</span></span><br><span class="line">suffix<span class="comment">//添加后缀</span></span><br><span class="line">suffixOverrides <span class="comment">//去掉后缀字符串</span></span><br></pre></td></tr></table></figure><p>添加<code>where</code>，并去除多余的<code>and</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;UserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">   <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;and&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;jobs != null and jobs != &#x27;&#x27; &quot;</span>&gt;</span>and jobs = #&#123;jobs&#125; <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;UpdateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;set&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name= #&#123;name&#125; , <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name= #&#123;name&#125; , <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>在语句前输出一个<code>set</code>，并去除最后一个逗号。如果set内容为空，会报错。要确保传入更新字段不为空。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;UpdateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name= #&#123;name&#125; , <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">text</span>=<span class="string">&quot;name != null and name != &#x27;&#x27; &quot;</span>&gt;</span>and name= #&#123;name&#125; , <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">item <span class="comment">//迭代别名*</span></span><br><span class="line">index  <span class="comment">//list中index map中key</span></span><br><span class="line">open  <span class="comment">//开始符号</span></span><br><span class="line">separator  <span class="comment">//分割符号</span></span><br><span class="line">close  <span class="comment">//结束符号</span></span><br><span class="line">collection <span class="comment">//传入参数类型* list array Map</span></span><br><span class="line">*为必选属性</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> web.user <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;UserAll&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Entity.User&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">   <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="迭代map"><a href="#迭代map" class="headerlink" title="迭代map"></a>迭代map</h4><p>没看懂，暂时搁置</p><h2 id="关系映射"><a href="#关系映射" class="headerlink" title="关系映射"></a>关系映射</h2><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><p><code>association</code>是<code>resultMap</code>的子元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;association&gt;</span><br><span class="line">属性</span><br><span class="line">property</span><br><span class="line">column</span><br><span class="line">javaType</span><br><span class="line">jdbcType</span><br><span class="line">fetchType</span><br><span class="line">select</span><br><span class="line">autoMapping</span><br><span class="line">typeHandler</span><br></pre></td></tr></table></figure><h4 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">表1</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;Card&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    select * from Card where id = $&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">表2</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;Card&quot;</span>&gt;</span></span><br><span class="line">    select * from user where id = $&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;&quot;</span> <span class="attr">column</span>=<span class="string">&quot;&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="嵌套结果"><a href="#嵌套结果" class="headerlink" title="嵌套结果"></a>嵌套结果</h4><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><h2 id="缓存机制"><a href="#缓存机制" class="headerlink" title="缓存机制"></a>缓存机制</h2><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p>@Select</p><h3 id="注解关联映射"><a href="#注解关联映射" class="headerlink" title="注解关联映射"></a>注解关联映射</h3><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.30<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--                JDBC 驱动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--                url数据库的 JDBC URL地址。--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入映射文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;Mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>mapper</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;www.xxx.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByUserAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;www.xxx.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">        select * from user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven学习</title>
      <link href="/posts/e5dd7f0f/"/>
      <url>/posts/e5dd7f0f/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><p>基于Java平台的项目创建，依赖管理和项目信息管理</p><h2 id="Maven命令"><a href="#Maven命令" class="headerlink" title="Maven命令"></a>Maven命令</h2><div class="table-container"><table><thead><tr><th>mvn</th><th></th></tr></thead><tbody><tr><td>mvn clean</td><td>清除target目录</td></tr><tr><td>mvn compile</td><td>编译main目录，生成target</td></tr><tr><td>mvn test</td><td>执行所有的测试方法</td></tr><tr><td>mvn package</td><td>打包当前的项目到target目录</td></tr><tr><td>mvn install</td><td>打包并且发布到本地仓库</td></tr></tbody></table></div><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>远程下载jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-src</span><br><span class="line">---main</span><br><span class="line">------java</span><br><span class="line">------resources</span><br><span class="line">---test</span><br><span class="line">-------java</span><br><span class="line">------resources</span><br><span class="line">-target</span><br><span class="line">-pom.xml </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupid--当前团队名称</span><br><span class="line">artifactid-- 项目名称</span><br><span class="line">version-- 版本号</span><br></pre></td></tr></table></figure><p>xml中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.37<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="安装配置Maven"><a href="#安装配置Maven" class="headerlink" title="安装配置Maven"></a>安装配置Maven</h2><ol><li>通过scoop安装</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install mvaen</span><br></pre></td></tr></table></figure><ol><li>配置本地环境变量</li><li>修改Maven配置文件（本地仓库路径，远程仓库地址）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//config文件中</span></span><br><span class="line"><span class="comment">//设置本地仓库位置</span></span><br><span class="line">  &lt;localRepository&gt;C:\Users\&lt;用户名&gt;\scoop\apps\maven\repository&lt;/localRepository&gt;</span><br><span class="line"><span class="comment">//设置私服仓库地址 --阿里云仓库</span></span><br><span class="line">  &lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;https:<span class="comment">//maven.aliyun.com/repository/public&lt;/url&gt;</span></span><br><span class="line">    &lt;/mirror&gt;</span><br></pre></td></tr></table></figure><ol><li>修改ij中的默认信息（使用安装的Maven，修改ij中Maven配置信息地址和仓库地址）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ij默认路径：</span></span><br><span class="line">C:\Users\&lt;用户名&gt;\.m2</span><br><span class="line"><span class="comment">//主路径</span></span><br><span class="line">C:\Users\&lt;用户名&gt;\scoop\apps\maven\<span class="number">3.9</span><span class="number">.8</span></span><br><span class="line"><span class="comment">//用户设置文件</span></span><br><span class="line">C:\Users\&lt;用户名&gt;\scoop\apps\maven\<span class="number">3.9</span><span class="number">.8</span>\conf\settings.xml</span><br><span class="line"><span class="comment">//本地仓库</span></span><br><span class="line">C:\Users\&lt;用户名&gt;\scoop\apps\maven\repository</span><br></pre></td></tr></table></figure><ol><li>ij中使用maven</li></ol><img src="/posts/e5dd7f0f/image-20240722123032953.png" class="" title="image-20240722123032953">]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql学习</title>
      <link href="/posts/f45dd5a4/"/>
      <url>/posts/f45dd5a4/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><img src="/posts/f45dd5a4/image-20240717100321899.png" class="" title="image-20240717100321899"><img src="/posts/f45dd5a4/image-20240717100350634.png" class="" title="image-20240717100350634"><h2 id="ddl"><a href="#ddl" class="headerlink" title="ddl"></a>ddl</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 登录</span></span><br><span class="line"><span class="operator">&gt;</span>mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"><span class="operator">&gt;</span>输入密码</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注释 ：--</span></span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="comment">-- 创建和删除</span></span><br><span class="line"><span class="keyword">create</span> database web; </span><br><span class="line"><span class="keyword">drop</span> database if <span class="keyword">exists</span> web; <span class="comment">-- 判断是否有在删除</span></span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line">use web;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> name(</span><br><span class="line">id <span class="type">Int</span>,</span><br><span class="line">                    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">                    datas <span class="type">date</span></span><br><span class="line">                    </span><br><span class="line">                    );</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> rename <span class="keyword">to</span> <span class="keyword">new</span>; <span class="comment">-- 修改表名字</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据类型</span></span><br><span class="line"><span class="comment">//数值字符串日期</span></span><br></pre></td></tr></table></figure><h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">大小</th><th style="text-align:left">范围（有符号）</th><th style="text-align:left">范围（无符号）</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">TINYINT</td><td style="text-align:left">1 Bytes</td><td style="text-align:left">(-128，127)</td><td style="text-align:left">(0，255)</td><td style="text-align:left">小整数值</td></tr><tr><td style="text-align:left">SMALLINT</td><td style="text-align:left">2 Bytes</td><td style="text-align:left">(-32 768，32 767)</td><td style="text-align:left">(0，65 535)</td><td style="text-align:left">大整数值</td></tr><tr><td style="text-align:left">MEDIUMINT</td><td style="text-align:left">3 Bytes</td><td style="text-align:left">(-8 388 608，8 388 607)</td><td style="text-align:left">(0，16 777 215)</td><td style="text-align:left">大整数值</td></tr><tr><td style="text-align:left">INT或INTEGER</td><td style="text-align:left">4 Bytes</td><td style="text-align:left">(-2 147 483 648，2 147 483 647)</td><td style="text-align:left">(0，4 294 967 295)</td><td style="text-align:left">大整数值</td></tr><tr><td style="text-align:left">BIGINT</td><td style="text-align:left">8 Bytes</td><td style="text-align:left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td style="text-align:left">(0，18 446 744 073 709 551 615)</td><td style="text-align:left">极大整数值</td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">4 Bytes</td><td style="text-align:left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td style="text-align:left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td style="text-align:left">单精度 浮点数值</td></tr><tr><td style="text-align:left">DOUBLE</td><td style="text-align:left">8 Bytes</td><td style="text-align:left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:left">双精度 浮点数值</td></tr><tr><td style="text-align:left">DECIMAL</td><td style="text-align:left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td style="text-align:left">依赖于M和D的值</td><td style="text-align:left">依赖于M和D的</td></tr></tbody></table></div><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">大小 ( bytes)</th><th style="text-align:left">范围</th><th style="text-align:left">格式</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">DATE</td><td style="text-align:left">3</td><td style="text-align:left">1000-01-01/9999-12-31</td><td style="text-align:left">YYYY-MM-DD</td><td style="text-align:left">日期值</td></tr><tr><td style="text-align:left">TIME</td><td style="text-align:left">3</td><td style="text-align:left">‘-838:59:59’/‘838:59:59’</td><td style="text-align:left">HH:MM:SS</td><td style="text-align:left">时间值或持续时间</td></tr><tr><td style="text-align:left">YEAR</td><td style="text-align:left">1</td><td style="text-align:left">1901/2155</td><td style="text-align:left">YYYY</td><td style="text-align:left">年份值</td></tr><tr><td style="text-align:left">DATETIME</td><td style="text-align:left">8</td><td style="text-align:left">‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td><td style="text-align:left">YYYY-MM-DD hh:mm:ss</td><td style="text-align:left">混合日期和时间值</td></tr><tr><td style="text-align:left">TIMESTAMP</td><td style="text-align:left">4</td><td style="text-align:left">‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-19 03:14:07’ UTC结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td style="text-align:left">YYYY-MM-DD hh:mm:ss</td><td style="text-align:left">混合日期和时间值，时间戳</td></tr></tbody></table></div><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">大小</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">CHAR</td><td style="text-align:left">0-255 bytes</td><td style="text-align:left">定长字符串</td></tr><tr><td style="text-align:left">VARCHAR</td><td style="text-align:left">0-65535 bytes</td><td style="text-align:left">变长字符串</td></tr><tr><td style="text-align:left">TINYBLOB</td><td style="text-align:left">0-255 bytes</td><td style="text-align:left">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:left">TINYTEXT</td><td style="text-align:left">0-255 bytes</td><td style="text-align:left">短文本字符串</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">0-65 535 bytes</td><td style="text-align:left">二进制形式的长文本数据</td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:left">0-65 535 bytes</td><td style="text-align:left">长文本数据</td></tr><tr><td style="text-align:left">MEDIUMBLOB</td><td style="text-align:left">0-16 777 215 bytes</td><td style="text-align:left">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:left">MEDIUMTEXT</td><td style="text-align:left">0-16 777 215 bytes</td><td style="text-align:left">中等长度文本数据</td></tr><tr><td style="text-align:left">LONGBLOB</td><td style="text-align:left">0-4 294 967 295 bytes</td><td style="text-align:left">二进制形式的极大文本数据</td></tr><tr><td style="text-align:left">LONGTEXT</td><td style="text-align:left">0-4 294 967 295 bytes</td><td style="text-align:left">极大文本数据</td></tr></tbody></table></div><h2 id="dml-增删查改"><a href="#dml-增删查改" class="headerlink" title="dml -增删查改"></a>dml -增删查改</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> web.user; <span class="comment">-- 查表</span></span><br><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> web.user;  <span class="comment">-- 查部分</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> web.user <span class="keyword">where</span> id<span class="operator">&lt;=</span><span class="number">3</span>; <span class="comment">-- 条件查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;2024-7-17 11:35:15&#x27;</span>); <span class="comment">-- 增加一条全部填写的数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(id,name,datas) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;2024-7-17 11:35:00&#x27;</span>); <span class="comment">-- 修改一条部分填写的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 改</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;bc&#x27;</span>; <span class="comment">-- 改全部</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;bc&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2</span>;  <span class="comment">-- 改满足条件的一项数据</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;tc&#x27;</span>,datas<span class="operator">=</span><span class="string">&#x27;2022-7-25 02.03.15&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span>;  <span class="comment">-- 改满足条件的多项数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删</span></span><br><span class="line"><span class="comment">-- 单条删除，可日志回滚,删除后自增不会清除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span>;  <span class="comment">-- 表全部数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>; <span class="comment">-- 条件删除</span></span><br><span class="line"><span class="comment">-- truncate 删除</span></span><br><span class="line"><span class="comment">-- 直接删除表，在重生成表，效率高，但是无法回滚</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> <span class="keyword">null</span>   <span class="comment">-- 非空</span></span><br><span class="line"><span class="keyword">default</span><span class="comment">-- 默认值</span></span><br><span class="line"><span class="keyword">primary</span> key<span class="comment">-- 主键</span></span><br><span class="line"><span class="keyword">unique</span>      <span class="comment">-- 唯一</span></span><br><span class="line"><span class="keyword">foreign</span> key <span class="comment">-- 外键</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 单列主键 </span></span><br><span class="line"><span class="comment">-- primary key</span></span><br><span class="line"><span class="comment">-- 主键唯一，不允许为空</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telen varcher(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 多列主键/复合主键</span></span><br><span class="line"><span class="comment">-- 主键联合起来唯一，不允许为空</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telen varcher(<span class="number">11</span>),</span><br><span class="line"><span class="keyword">primary</span> key (id,telen)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自增 </span></span><br><span class="line"><span class="comment">-- auto_increment</span></span><br><span class="line"><span class="comment">-- 单表唯一，配合主键，为整数类型</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telen varcher(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 创建修改自增初始值,第一条开始的值1000</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telen varcher(<span class="number">11</span>),</span><br><span class="line">)auto_increment <span class="number">1000</span>;</span><br><span class="line"><span class="comment">-- 修改自增初始值</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> auto_increment <span class="number">1000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 非空约束</span></span><br><span class="line"><span class="comment">-- not null</span></span><br><span class="line"><span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">telen varcher(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 修改</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> modify name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一约束</span></span><br><span class="line"><span class="comment">-- unique key</span></span><br><span class="line"><span class="comment">-- 可以为null</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">telen varcher(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">unique</span> key unique_telen(telen) <span class="comment">-- 约束名称（约束字段）</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认约束</span></span><br><span class="line"><span class="comment">-- default</span></span><br><span class="line"><span class="comment">-- 没有插入才会有默认值。如果插入null，默认值不会生效，会插入null</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">telen varcher(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 零填充约束</span></span><br><span class="line"><span class="comment">--  zerofill</span></span><br><span class="line"><span class="comment">-- 位数不够，在左边添加0</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>(<span class="number">10</span>) zerofill,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telen varcher(<span class="number">11</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="dql-查询"><a href="#dql-查询" class="headerlink" title="dql 查询"></a>dql 查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> <span class="keyword">user</span>;  <span class="comment">-- 查询name和age列</span></span><br><span class="line"><span class="keyword">select</span> s.naem <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">as</span> s; <span class="comment">-- 别名查询</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> 姓名 <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> class form <span class="keyword">user</span>; <span class="comment">-- 按条件去重复</span></span><br><span class="line"><span class="keyword">select</span> name,age<span class="operator">+</span><span class="number">5</span> <span class="keyword">as</span> age form <span class="keyword">user</span>; <span class="comment">-- 年龄+5</span></span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 系统时间</span></span><br><span class="line">newdate;</span><br></pre></td></tr></table></figure><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">加法</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减法</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘法</td></tr><tr><td style="text-align:left">/ 或 DIV</td><td style="text-align:left">除法</td></tr><tr><td style="text-align:left">% 或 MOD</td><td style="text-align:left">取余</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,age<span class="operator">+</span><span class="number">5</span> <span class="keyword">as</span> age form <span class="keyword">user</span>; <span class="comment">-- 年龄+5</span></span><br></pre></td></tr></table></figure><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">符号</th><th style="text-align:left">描述</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">=</td><td style="text-align:left">等于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&lt;&gt;, !=</td><td style="text-align:left">不等于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&gt;</td><td style="text-align:left">大于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&lt;</td><td style="text-align:left">小于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&lt;=</td><td style="text-align:left">小于等于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&gt;=</td><td style="text-align:left">大于等于</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BETWEEN</td><td style="text-align:left">在两值之间</td><td style="text-align:left">&gt;=min&amp;&amp;&lt;=max</td></tr><tr><td style="text-align:left">NOT BETWEEN</td><td style="text-align:left">不在两值之间</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">IN</td><td style="text-align:left">在集合中</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">NOT IN</td><td style="text-align:left">不在集合中</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&lt;=&gt;</td><td style="text-align:left">严格比较两个NULL值是否相等</td><td style="text-align:left">两个操作码均为NULL时，其所得值为1；而当一个操作码为NULL时，其所得值为0</td></tr><tr><td style="text-align:left">LIKE</td><td style="text-align:left">模糊匹配</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">REGEXP 或 RLIKE</td><td style="text-align:left">正则式匹配</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">IS NULL</td><td style="text-align:left">为空</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">IS NOT NULL</td><td style="text-align:left">不为空</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>; <span class="comment">-- a</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">!=</span> <span class="string">&#x27;a&#x27;</span>; <span class="comment">-- 非a</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">&lt;&gt;</span> <span class="string">&#x27;a&#x27;</span>; <span class="comment">-- 非a</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age <span class="operator">&gt;=</span><span class="number">12</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span><span class="number">28</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">12</span> <span class="keyword">and</span> <span class="number">28</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age <span class="operator">&gt;=</span><span class="number">12</span> <span class="keyword">or</span> age <span class="operator">&lt;=</span><span class="number">17</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age <span class="keyword">in</span>(<span class="number">12</span>,<span class="number">17</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- like 模糊查询</span></span><br><span class="line"><span class="comment">-- % 匹配n个字符</span></span><br><span class="line"><span class="comment">-- * 任意多字符</span></span><br><span class="line"><span class="comment">-- _ 模糊匹配一个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> name <span class="keyword">like</span><span class="string">&#x27;%a%&#x27;</span>; <span class="comment">-- 在中间</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> name <span class="keyword">like</span><span class="string">&#x27;a*&#x27;</span>; <span class="comment">-- 在开头</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> name <span class="keyword">like</span> <span class="string">&#x27;%a%&#x27;</span> <span class="keyword">and</span> age <span class="operator">&gt;</span><span class="number">30</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> address <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><div class="table-container"><table><thead><tr><th style="text-align:left">运算符号</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">NOT 或 !</td><td style="text-align:left">逻辑非</td></tr><tr><td style="text-align:left">AND</td><td style="text-align:left">逻辑与</td></tr><tr><td style="text-align:left">OR</td><td style="text-align:left">逻辑或</td></tr><tr><td style="text-align:left">XOR</td><td style="text-align:left">逻辑异或</td></tr></tbody></table></div><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><p>位运算符是在二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><div class="table-container"><table><thead><tr><th style="text-align:left">运算符号</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">&amp;</td><td style="text-align:left">按位与</td></tr><tr><td style="text-align:left">替代</td><td style="text-align:left">按位或</td></tr><tr><td style="text-align:left">^</td><td style="text-align:left">按位异或</td></tr><tr><td style="text-align:left">!</td><td style="text-align:left">取反</td></tr><tr><td style="text-align:left">&lt;&lt;</td><td style="text-align:left">左移</td></tr><tr><td style="text-align:left">&gt;&gt;</td><td style="text-align:left">右移</td></tr></tbody></table></div><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认按照主键升序排序</span></span><br><span class="line"><span class="comment">-- 升序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>;</span><br><span class="line"><span class="comment">-- 降序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age<span class="operator">&gt;</span><span class="number">18</span> <span class="keyword">order</span> <span class="keyword">by</span> age ;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>,id <span class="keyword">desc</span> ; <span class="comment">-- 一级排序相同时候，二级排序的效果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符排序按照拼音排序</span></span><br></pre></td></tr></table></figure><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- limit</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit <span class="number">5</span>; <span class="comment">-- 查询前5条</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit m,n; <span class="comment">-- 从第m条数据开始取n条</span></span><br><span class="line"><span class="comment">-- m=（第几页-1）*每页想要展示的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit <span class="number">0</span>,<span class="number">5</span>;  <span class="comment">-- 第一页</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit <span class="number">5</span>,<span class="number">5</span>; <span class="comment">-- 第二页</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit <span class="number">10</span>,<span class="number">5</span>; <span class="comment">-- 第三页</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 排序后分页</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">desc</span> limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 聚合函数不计算null的行</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) form <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(age) form <span class="keyword">user</span>; <span class="comment">-- 查询 年龄不为null的行数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) form <span class="keyword">user</span> <span class="keyword">where</span> age<span class="operator">&gt;</span><span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(age) form <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(age) form <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(age) form <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(age) form <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 返回列只能是，分组字段和聚合函数</span></span><br><span class="line"><span class="keyword">select</span> class,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> class;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- having</span></span><br><span class="line"><span class="comment">-- 分组查询的条件查询只能用having,是对过滤后的数据做的条件查询</span></span><br><span class="line"><span class="keyword">select</span> class,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> class <span class="keyword">having</span> class<span class="operator">&gt;</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h2><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### 联表查询</span><br><span class="line"></span><br><span class="line">交叉（笛卡尔积），一一匹配，相乘</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">select * from user,user1;</span><br></pre></td></tr></table></figure><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>,user1 <span class="keyword">where</span> user.id<span class="operator">=</span>user1.id;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">inner</span> <span class="keyword">join</span> user1 <span class="keyword">on</span> user.id<span class="operator">=</span>user1.id;</span><br></pre></td></tr></table></figure><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line"><span class="comment">-- 右外</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span></span><br><span class="line"><span class="comment">-- 全外</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">union</span>  <span class="keyword">right</span> <span class="keyword">join</span>    </span><br></pre></td></tr></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- all</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">!=</span><span class="keyword">all</span>(<span class="keyword">select</span> id <span class="keyword">from</span> class);</span><br><span class="line"><span class="comment">-- any == or</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- in / not in</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="keyword">in</span>(<span class="keyword">select</span> id <span class="keyword">from</span> class <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;xxx&#x27;</span> <span class="keyword">and</span> name<span class="operator">=</span><span class="string">&#x27;aaa&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- exists  返回ture和false</span></span><br></pre></td></tr></table></figure><p>自关联查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">as</span> a,<span class="keyword">user</span> <span class="keyword">as</span> b <span class="keyword">where</span> a.id<span class="operator">=</span>b.uid;</span><br></pre></td></tr></table></figure><p>索引</p><p>优化</p><p>explain</p><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 原子性</span></span><br><span class="line"><span class="comment">-- 一致性</span></span><br><span class="line"><span class="comment">-- 隔离性</span></span><br><span class="line"><span class="comment">-- 持久性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自动 （默认）</span></span><br><span class="line"><span class="keyword">set</span> autocommit<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="comment">-- 手动</span></span><br><span class="line"><span class="keyword">set</span> autocommit<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启</span></span><br><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="comment">-- 提交</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">-- 回滚</span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="行锁"><a href="#行锁" class="headerlink" title="行锁"></a>行锁</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 事务对数据进行操作的时候会触发行锁，在数据未提交或回滚之前其他线程无法对事务处理中的数据进行操作。</span></span><br><span class="line"><span class="comment">-- 多个线程修改同一行数据</span></span><br><span class="line"><span class="comment">-- 提交或者回滚后释放行锁</span></span><br><span class="line"><span class="comment">-- 线程安全</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看行锁</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.innodb_trx</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 释放行锁 kill xx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>追番</title>
      <link href="/posts/a0c2c342/"/>
      <url>/posts/a0c2c342/</url>
      
        <content type="html"><![CDATA[<p>依靠药水活下去<br>谭雅战记<br>锁锁美同学@提不起干劲<br>凹凸魔女的母女故事<br>干物妹小埋<br>冰菓<br>神的笔记本<br>我推的孩子<br>梦想成为魔法少女<br>孤独摇滚<br>异世界舅舅<br>GIRLS BAND CRY<br>mygo<br>前辈是男孩子<br>这个医师超麻烦<br>轮回七次的反派大小姐，在前敌国享受随心所欲的新婚生活<br>轻音少女<br>某科学的超电磁炮<br>邪神与厨二病少女<br>小林家的龙女仆<br>吹响吧！上低音号<br>摇曳露营<br>迷宫饭<br>会长是女仆大人<br>为美好的世界献上祝福<br>间谍过家家<br>葬送的芙莉莲<br>反派大小姐等级99～我是隐藏BOSS但不是魔王～<br>家里蹲吸血姬的苦闷<br>赛马娘<br>邪神与厨二病少女<br>盾之勇者成名录<br>我推是反派大小姐<br>新人炼金术师的店铺经营<br>更衣人偶坠入爱河<br>街角魔族<br>恋爱小行星<br>请问您今天要来点兔子吗<br>开挂药师的异世界悠闲生活～在异世界开药店吧～<br>滑头鬼之孙<br>GJ部<br>元气少女缘结神<br>幸运星<br>荒川爆笑团<br>碧蓝之海<br>萝球社<br>与变成了异世界美少女的好友一起冒险<br>打工吧！魔王大人<br>风灵玉秀<br>辉夜大小姐想让我告白<br>伍六七之暗影宿命<br>凸变英雄<br>异世界迷宫黑心企业<br>转生成为了只有乙女游戏破灭Flag的邪恶大小姐<br>反派大小姐莉泽洛特与实况解说<br>龙先生，想要买个家<br>结城友奈是勇者<br>宇崎学妹想要玩<br>在魔王城说晚安<br>没出息的阴阳师一家<br>邻家索菲<br>一起一起这里那里<br>只要贝尔哲布布大小姐喜欢就好<br>熊熊勇闯异世界<br>龙与虎<br>野良神<br>水果篮子<br>22/7<br>仙王的日常生活<br>中二病也要谈恋爱<br>地狱少女<br>ENDRO~!<br>狗与剪刀的正确用法<br>一个人的〇〇小日子<br>滑头鬼之孙<br>笨蛋，测验，召唤兽<br>花开伊吕波<br>恋爱随意链接<br>川柳少女<br>电波女与青春男<br>我们仍未知道那天所看见的花的名字<br>境界的彼方<br>邻座的怪同学<br>属性咖啡厅<br>如果能写小说就好了<br>此花亭奇谭<br>GAMERS电玩咖！<br>NEW GAME!<br>学生会的一己之见<br>徒然喜欢你<br>珈百璃的堕落<br>埃罗芒阿老师<br>雏子的笔记<br>URARA迷路帖<br>玉子市场<br>镇魂街<br>Anne Happy<br>线上游戏的队友不可能是女生？<br>天体的秩序<br>银仙<br>女高中生的虚度日常<br>男子高中生的日常<br>我的妹妹不可能那么可爱<br>稻荷恋之歌<br>Charlotte<br>0号宿舍<br>Comic Girls<br>姐姐来了<br>踏切时间<br>龙王的工作！<br>一周的朋友。<br>罪恶王冠<br>我们大家的河合庄<br>我家有个狐仙大人<br>狼与香辛料<br>某科学的一方通行<br>重来吧，魔王大人！<br>天使降临到我身边<br>一人之下<br>终将成为你<br>在下坂本，有何贵干？<br>笨女孩</p>]]></content>
      
      
      <categories>
          
          <category> 动漫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/posts/e255a10a/"/>
      <url>/posts/e255a10a/</url>
      
        <content type="html"><![CDATA[<h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><p>比特</p><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p>帧</p><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><p>数据报</p><h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><h1 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h1><h1 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h1><h1 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h1>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E1</title>
      <link href="/posts/9d09a985/"/>
      <url>/posts/9d09a985/</url>
      
        <content type="html"><![CDATA[<p>这是一个开始<br>不想看视频，感觉那样很没效率，学了不久就会忘记。想找一本合适的教程。从语法造句开始学。感觉在互联网如同大海捞针。没有利益谁愿意帮你。<br>总之把自己记得的先汇总：<br>句子结构<br>时态<br>词性<br>先从英语兔的视频开始吧：</p><h2 id="句子结构"><a href="#句子结构" class="headerlink" title="句子结构"></a>句子结构</h2><p>句子成分：<br>主语  谓语动词  宾语  宾语补语  主语补语<br>定语：修饰主语或者宾语<br>状语：修饰谓语动词<br>同位语：和主语相同的重复语</p><p>词类：<br>名词  动词  冠词  代词  形容词  数词  副词  介词  叹词  连词 =10</p><p>谓语动词有五种：<br>  主语+谓语（不及物动词）<br>  主语+谓语（及物动词）+宾语<br>  主语+谓语（双及物动词）+直接宾语+间接宾语<br>  主语+谓语（复杂及物动词）+宾语+宾语（补语）<br>  主语+谓语（系动词）+主语补语（表语）<br>组成最基本的句子。</p><p>谓语动词+助动词可以表示：<br>  1动作的时间<br>    现在  过去 将来 过去将来<br>  2动作的状态<br>    一般  完成  进行  完成进行<br>  3动作的假设，情感：语气 </p><p>实义动词/情态动词</p><p>非谓语动词可以充当除谓语动词外几乎所有句子成分。非谓语动词分为：<br>  动词不定式  现在分词  动名词  过去分词</p><p>主句  从句</p><p>时态</p><h2 id="主语"><a href="#主语" class="headerlink" title="主语"></a>主语</h2><p>什么是主语：<br>在句子中的部分：<br>时态变种：</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网卡配置</title>
      <link href="/posts/80136526/"/>
      <url>/posts/80136526/</url>
      
        <content type="html"><![CDATA[<h1 id="nmcli命令"><a href="#nmcli命令" class="headerlink" title="nmcli命令"></a>nmcli命令</h1><p>nmcli 是 NetworkManager 的命令行工具。<br>nm 代表 NetworkManager，cli 代表 Command-Line 命令行。</p><h2 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h2><p>使用 nmcli 时，NetworkManager 必须保持开启。</p><h3 id="NetworkManager状态"><a href="#NetworkManager状态" class="headerlink" title="NetworkManager状态"></a>NetworkManager状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查看运行状态</span><br><span class="line">systemctl status NetworkManager</span><br><span class="line">启动</span><br><span class="line">systemctl start NetworkManager</span><br><span class="line">重启</span><br><span class="line">systemctl restart NetworkManager</span><br><span class="line">查看是否开机启动</span><br><span class="line">systemctl is-enabled NetworkManager</span><br><span class="line">开机启动</span><br><span class="line">systemctl enable NetworkManager</span><br><span class="line">禁止开机启动</span><br><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><h3 id="显示-NetworkManager-是否接管网络设置"><a href="#显示-NetworkManager-是否接管网络设置" class="headerlink" title="显示 NetworkManager 是否接管网络设置"></a>显示 NetworkManager 是否接管网络设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli networking</span><br><span class="line">nmcli n</span><br></pre></td></tr></table></figure><h3 id="查看网络连接状态："><a href="#查看网络连接状态：" class="headerlink" title="查看网络连接状态："></a>查看网络连接状态：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli networking connectivity</span><br><span class="line">nmcli n c</span><br></pre></td></tr></table></figure><p>网络连接状态共有五种：full、limited（连网，但无法上网）、portal（连网，但需要认证登录后才能上网）、none（没连网）和 unknown。</p><h3 id="显示系统网络状态"><a href="#显示系统网络状态" class="headerlink" title="显示系统网络状态"></a>显示系统网络状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli general</span><br></pre></td></tr></table></figure><img src="/posts/80136526/image.png" class="" title="alt text"><p>STATE 显示网络是否连接<br>CONNECTIVITY 与前面介绍的 nmcli networking connectivity 相同<br>WIFI-HW 表示 WIFI 硬件开关、WIFI 表示 WIFI 软件开关<br>WWAN-HW 表示 WWAN 硬件开关、WWAN 表示 WWAN 软件开关<br>HW 代表 HardWare，WWAN 代表 Wireless Wide Area Network</p><h2 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h2><h3 id="查看网卡连接"><a href="#查看网卡连接" class="headerlink" title="查看网卡连接"></a>查看网卡连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看所有网卡连接</span><br><span class="line">nmcli connection show</span><br><span class="line">查看具体网卡连接</span><br><span class="line">nmcli connection show 名称</span><br></pre></td></tr></table></figure><h3 id="删除网卡连接"><a href="#删除网卡连接" class="headerlink" title="删除网卡连接"></a>删除网卡连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection delete 名称</span><br></pre></td></tr></table></figure><h3 id="新建网卡连接"><a href="#新建网卡连接" class="headerlink" title="新建网卡连接"></a>新建网卡连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection add type ethernet con-name text ifname ens33 autoconnect yes ipv4.addresses 172.23.1.10/24 ipv4.gateway 172.23.1.1 ipv4.dns 10.11.10.1</span><br></pre></td></tr></table></figure><p>type        //连接类型<br>con-name    //连接名称<br>ifname      //网卡名称<br>autoconnect //开机自启</p><h3 id="启动-关闭指定网卡连接"><a href="#启动-关闭指定网卡连接" class="headerlink" title="启动/关闭指定网卡连接"></a>启动/关闭指定网卡连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection up text</span><br><span class="line">nmcli connection down text</span><br></pre></td></tr></table></figure><h3 id="修改网卡连接"><a href="#修改网卡连接" class="headerlink" title="修改网卡连接"></a>修改网卡连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection modify ens33 ipv4.address 192.168.80.10/24  # 修改 IP 地址和子网掩码</span><br><span class="line">nmcli connection modify ens33 ipv4.method manual             # 修改为静态配置，默认是 auto</span><br><span class="line">nmcli connection modify ens33 ipv4.gateway 192.168.80.2      # 修改默认网关</span><br><span class="line">nmcli connection modify ens33 ipv4.dns 192.168.80.2          # 修改 DNS</span><br><span class="line">nmcli connection modify ens33 +ipv4.dns 114.114.114.114      # 添加一个 DNS</span><br><span class="line">nmcli connection modify ens33 ipv6.method disabled           # 将 IPv6 禁用</span><br><span class="line">nmcli connection modify ens33 connection.autoconnect yes     # 开机启动</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IP路由"><a href="#IP路由" class="headerlink" title="IP路由"></a>IP路由</h2><p>查看当前路由表<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route -n</span><br></pre></td></tr></table></figure></p><h1 id=""><a href="#" class="headerlink" title="#"></a>#</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br><span class="line">pathping</span><br><span class="line">tracert</span><br><span class="line">tracert 工具可以查看数据包的整条传输路径，包括途中经过的中间设备。</span><br><span class="line">traceroute</span><br><span class="line">netstat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙</title>
      <link href="/posts/e26546c7/"/>
      <url>/posts/e26546c7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=http</span><br><span class="line">firewall-cmd --add-port=80/tcp</span><br><span class="line">firewall-cmd --remove-port=80/tcp</span><br><span class="line"></span><br><span class="line">开启图像化界面</span><br><span class="line">firewall-config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘/文件系统</title>
      <link href="/posts/2dce9be6/"/>
      <url>/posts/2dce9be6/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘分区、管理文件系统、文件系统挂载与卸载、交换空间"><a href="#磁盘分区、管理文件系统、文件系统挂载与卸载、交换空间" class="headerlink" title="磁盘分区、管理文件系统、文件系统挂载与卸载、交换空间"></a>磁盘分区、管理文件系统、文件系统挂载与卸载、交换空间</h1><img src="/posts/2dce9be6/image-20240414172535882.png" class="" title="image-20240414172535882"><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><h3 id="磁盘分类"><a href="#磁盘分类" class="headerlink" title="磁盘分类"></a>磁盘分类</h3><img src="/posts/2dce9be6/image-20240414163642131.png" class="" title="image-20240414163642131"><img src="/posts/2dce9be6/image-20240414163739496.png" class="" title="image-20240414163739496"><img src="/posts/2dce9be6/image-20240414172029465.png" class="" title="image-20240414172029465"><img src="/posts/2dce9be6/image-20240414164013424.png" class="" title="image-20240414164013424"><h3 id="分区管理"><a href="#分区管理" class="headerlink" title="分区管理"></a>分区管理</h3><ol><li><p>MBR分区（就是DOS分区）命令为<code>fdisk</code></p></li><li><p>GPT分区,命令为<code>gdisk</code></p></li></ol><p>查看系统当前磁盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l /dev/sdb</span><br></pre></td></tr></table></figure><p>进入管理分区工具 </p><p><strong>*</strong>如果有新的分区操作，用W保存+退出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414164252762.png" class="" title="image-20240414164252762"><p>新建分区：n</p><img src="/posts/2dce9be6/image-20240414210443507.png" class="" title="image-20240414210443507"><p>查看分区信息：p</p><img src="/posts/2dce9be6/image-20240414210530685.png" class="" title="image-20240414210530685"><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><h3 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h3><p>查看文件类型<code>df -hT</code>，-h以适当单位显示，默认“已用”一列是KB。-T显示文件类型。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hT</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414171034179.png" class="" title="image-20240414171034179"><img src="/posts/2dce9be6/image-20240414165342292.png" class="" title="image-20240414165342292"><img src="/posts/2dce9be6/image-20240414165454934.png" class="" title="image-20240414165454934"><h3 id="文件系统结构"><a href="#文件系统结构" class="headerlink" title="文件系统结构"></a>文件系统结构</h3><img src="/posts/2dce9be6/image-20240414165540298.png" class="" title="image-20240414165540298"><img src="/posts/2dce9be6/image-20240414165649527.png" class="" title="image-20240414165649527"><h3 id="制作文件系统"><a href="#制作文件系统" class="headerlink" title="制作文件系统"></a>制作文件系统</h3><img src="/posts/2dce9be6/image-20240414165941151.png" class="" title="image-20240414165941151"><p>把一个分区建立成文件系统，用法：<code>mkfs -t 文件类型 目录</code>,文件类型如下图</p><img src="/posts/2dce9be6/image-20240414170142746.png" class="" title="image-20240414170142746"><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs -t ext2 /dev/sdb1</span><br></pre></td></tr></table></figure><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>建立文件系统后，挂载。就是把建立了文件系统的分区目录用mount命令挂载都一个已经存在的目录下面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb1 /mnt/aaa</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414170247622.png" class="" title="image-20240414170247622"><img src="/posts/2dce9be6/image-20240414170415646.png" class="" title="image-20240414170415646"><img src="/posts/2dce9be6/image-20240414171349333.png" class="" title="image-20240414171349333"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414204751339.png" class="" title="image-20240414204751339"><img src="/posts/2dce9be6/image-20240414171420584.png" class="" title="image-20240414171420584"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure><h2 id="交换内存"><a href="#交换内存" class="headerlink" title="交换内存"></a>交换内存</h2><img src="/posts/2dce9be6/image-20240414171610387.png" class="" title="image-20240414171610387"><img src="/posts/2dce9be6/image-20240414171629500.png" class="" title="image-20240414171629500"><p>命令t，修改磁盘类型。</p><img src="/posts/2dce9be6/image-20240414211259238.png" class="" title="image-20240414211259238"><h2 id="磁盘配额"><a href="#磁盘配额" class="headerlink" title="磁盘配额"></a>磁盘配额</h2><img src="/posts/2dce9be6/image-20240414172109972.png" class="" title="image-20240414172109972"><img src="/posts/2dce9be6/image-20240414172220141.png" class="" title="image-20240414172220141"><img src="/posts/2dce9be6/image-20240414172247622.png" class="" title="image-20240414172247622"><p>查询当前挂载磁盘的quota信息(因为是最后截的图片，所以和下面修改后的图片一样)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount |grep quota</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414211933602.png" class="" title="image-20240414211933602"><p>修改<code>/etc/fstab</code>文件支持quota</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414212156393.png" class="" title="image-20240414212156393"><p>卸载在重新装载，使更改生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/aaa</span><br><span class="line">mount -a</span><br><span class="line">mount | grep quota</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414211933602.png" class="" title="image-20240414211933602"><p>生成配额文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quotacheck -cmugv /mnt/aaa/</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414212912216.png" class="" title="image-20240414212912216"><p>给用户添加配额限制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edquota -u xiaoming</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414213821620.png" class="" title="image-20240414213821620"><p>激活配额</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quotaon -vug /mnt/aaa</span><br></pre></td></tr></table></figure><img src="/posts/2dce9be6/image-20240414205642937.png" class="" title="image-20240414205642937"><h2 id="VDO"><a href="#VDO" class="headerlink" title="VDO"></a>VDO</h2><img src="/posts/2dce9be6/image-20240414173222472.png" class="" title="image-20240414173222472"><img src="/posts/2dce9be6/image-20240414173403419.png" class="" title="image-20240414173403419"><img src="/posts/2dce9be6/image-20240414173409317.png" class="" title="image-20240414173409317"><img src="/posts/2dce9be6/image-20240414173430820.png" class="" title="image-20240414173430820">]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>premiere</title>
      <link href="/posts/a3fd9d0f/"/>
      <url>/posts/a3fd9d0f/</url>
      
        <content type="html"><![CDATA[<h1 id="pr剪辑"><a href="#pr剪辑" class="headerlink" title="pr剪辑"></a>pr剪辑</h1><p>4/9-5点</p><p>远景：宏大<br>全景：人与环境，人的整体特征和心理</p><img src="/posts/a3fd9d0f/image-20240409182512342.png" class="" title="image-20240409182512342"><img src="/posts/a3fd9d0f/image-20240409182826037.png" class="" title="image-20240409182826037"><img src="/posts/a3fd9d0f/image-20240409182835286.png" class="" title="image-20240409182835286"><p>嵌套，多机位<br>调整图层<br>变换，镜像，遮罩，ProcAmp,轨道遮罩键</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> premiere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读英语单词</title>
      <link href="/posts/7b2e5cff/"/>
      <url>/posts/7b2e5cff/</url>
      
        <content type="html"><![CDATA[<h2 id="音标"><a href="#音标" class="headerlink" title="音标"></a>音标</h2><img src="/posts/7b2e5cff/image-20240406112119215.png" class="" title="image-20240406112119215"><img src="/posts/7b2e5cff/image-20240406112432387.png" class="" title="image-20240406112432387"><p>48个英语音标表：20个元音+28个辅音</p><p><strong>一、单元音12个</strong></p><p>短元音： [i] [ə] [ɒ] [u] [Λ] [æ] [e]</p><p>长元音： [i:] [ə:] [ɔ:] [u:] [ɑ:]</p><p><strong>二、双元音8个</strong></p><p>[ai] [ei] [ɔi] [au] [əu] [iə] [eə] [uə]</p><p><strong>三、清浊成对的辅音10对</strong></p><p>清辅音：[p] [t] [k] [f] [θ] [s] [tr] [ts] [∫] [t∫]</p><p>浊辅音：[b] [d] [g] [v] [ð] [z] [dr] [dz] [ʒ] [dʒ]</p><p><strong>四、其他辅音8个</strong></p><p>[h] [m ] [n] [ŋ] [l] [r] [w] [j]</p><p>the在元音前读[ði],在辅音前读[ðə]，而元辅音的判断不是第一个单词，而是第一个音素，或说发音。</p><p>如：</p><p>the United States的第一个音素是[j],半元音，按辅音读[ðə]</p><p>五、音节</p><h3 id="1-划分音节的方法"><a href="#1-划分音节的方法" class="headerlink" title="1.划分音节的方法"></a>1.划分音节的方法</h3><h4 id="元音是构成音节的主体，辅音是音节的分界线。两辅音之间不管有多少个元音，一般都是一个音节。"><a href="#元音是构成音节的主体，辅音是音节的分界线。两辅音之间不管有多少个元音，一般都是一个音节。" class="headerlink" title="元音是构成音节的主体，辅音是音节的分界线。两辅音之间不管有多少个元音，一般都是一个音节。"></a>元音是构成音节的主体，辅音是音节的分界线。两辅音之间不管有多少个元音，一般都是一个音节。</h4><p>如：</p><p>bed 床；bet 打赌；seat 坐位；</p><p>beat 毒打；beaut 极好的；beau ty 美；</p><h4 id="两元音字母之间有一个辅音字母时，辅音字母归后一音节，"><a href="#两元音字母之间有一个辅音字母时，辅音字母归后一音节，" class="headerlink" title="两元音字母之间有一个辅音字母时，辅音字母归后一音节，"></a>两元音字母之间有一个辅音字母时，辅音字母归后一音节，</h4><p>如：</p><p>stu dent 学生；la bour 劳动；</p><h4 id="有两个辅音字母时，一个辅音字母归前一音节，一个归后一音节，"><a href="#有两个辅音字母时，一个辅音字母归前一音节，一个归后一音节，" class="headerlink" title="有两个辅音字母时，一个辅音字母归前一音节，一个归后一音节，"></a>有两个辅音字母时，一个辅音字母归前一音节，一个归后一音节，</h4><p>如：</p><p>let ter 信；win ter 冬天；</p><h4 id="不能拆分的字母组合按字母组合划分音节。"><a href="#不能拆分的字母组合按字母组合划分音节。" class="headerlink" title="不能拆分的字母组合按字母组合划分音节。"></a>不能拆分的字母组合按字母组合划分音节。</h4><p>如：</p><p>fa ther 父亲；tea cher 教师；</p><p>单词的发音灵魂是元音，掌握这一点就不难了</p><h3 id="2-开音节-amp-闭音节"><a href="#2-开音节-amp-闭音节" class="headerlink" title="2.开音节&amp;闭音节"></a>2.开音节&amp;闭音节</h3><p><strong>①开音节</strong></p><h4 id="绝对开音节：单个元音字母后面没有辅字组的重读音节。"><a href="#绝对开音节：单个元音字母后面没有辅字组的重读音节。" class="headerlink" title="绝对开音节：单个元音字母后面没有辅字组的重读音节。"></a>绝对开音节：单个元音字母后面没有辅字组的重读音节。</h4><p>如：no she he we ……..</p><h4 id="相对开音节：单个元音字母后面加单个辅音字母，再加一个不发音字母e构成的重读音节。"><a href="#相对开音节：单个元音字母后面加单个辅音字母，再加一个不发音字母e构成的重读音节。" class="headerlink" title="相对开音节：单个元音字母后面加单个辅音字母，再加一个不发音字母e构成的重读音节。"></a>相对开音节：单个元音字母后面加单个辅音字母，再加一个不发音字母e构成的重读音节。</h4><p>如：name these bike home excuse like …….</p><p>也可以这么说：</p><ol><li>以一个元音字母结尾的重读音节。这个元音字母在单词中发它在字母表中的音，即它本身的读音。</li></ol><p>如：no, he, table。</p><ol><li>在含有一个元音字母的重读音节中，在元音字母后有一个辅音字母(r除外)与一个不发音的字母e，也是开音节。这个元音字母发它本身的音。</li></ol><p>如：name, fine。闭音节含有一个元音字母，并以辅音字母(r, w除外)结尾的重读音节为闭音节。</p><p>一般开音节后面有不发音的“e”</p><p><strong>②闭音节</strong></p><h4 id="元音字母之后有一个或几个辅音字母（r-w-y-除外），这样的音节叫闭音节。重读闭音节即两个辅音中间夹一个元音，在英语重读闭音节中元音字母不是发它本身的字母音。"><a href="#元音字母之后有一个或几个辅音字母（r-w-y-除外），这样的音节叫闭音节。重读闭音节即两个辅音中间夹一个元音，在英语重读闭音节中元音字母不是发它本身的字母音。" class="headerlink" title="元音字母之后有一个或几个辅音字母（r w y 除外），这样的音节叫闭音节。重读闭音节即两个辅音中间夹一个元音，在英语重读闭音节中元音字母不是发它本身的字母音。"></a>元音字母之后有一个或几个辅音字母（r w y 除外），这样的音节叫闭音节。重读闭音节即两个辅音中间夹一个元音，在英语重读闭音节中元音字母不是发它本身的字母音。</h4><p>以辅音字母结尾，重读部分在后面的音节。</p><p>如：</p><p>bag draw begin fish not cup</p><h4 id="闭音节可以分为："><a href="#闭音节可以分为：" class="headerlink" title="闭音节可以分为："></a>闭音节可以分为：</h4><h4 id="元音-辅音或元音-辅音-辅音"><a href="#元音-辅音或元音-辅音-辅音" class="headerlink" title="元音+辅音或元音+辅音+辅音"></a>元音+辅音或元音+辅音+辅音</h4><h4 id="重读闭音节要双写"><a href="#重读闭音节要双写" class="headerlink" title="重读闭音节要双写"></a>重读闭音节要双写</h4><p>如:</p><p>sit—-sitting</p><p>begin—-beginning</p><p>put—-putting</p><p>swim—-swimming</p><p>举两个很经典的例子：</p><p>forbid—-forbidding (重读闭音节，双写)</p><p>prohibit—-prohibiting （重读在第二音节，非重读闭音节，不双写）</p><p>像travel这种重读不在的vel，可以为travelled，也可以是traveled</p><p>元音：a e i o u</p><p>辅音：b d g v r z n p m t c （k g) f l s h j x</p><p>半元音：r y w</p><p><strong>重读闭音节三要素：</strong></p><p><strong>1. 必须是重读音节；</strong></p><p><strong>2. 最后只有一个辅音字母；</strong></p><p><strong>3.元音字母发短元音</strong></p><h3 id="3-如何识别开音节和闭音节"><a href="#3-如何识别开音节和闭音节" class="headerlink" title="3.如何识别开音节和闭音节"></a>3.如何识别开音节和闭音节</h3><p>1．开音节</p><p>1）以发音的元音字母结尾的音节。</p><p>例：</p><p>be，he。</p><p>公式：辅音+一个元音</p><p>2）以辅音字母（r 除外）+不发音的e结尾的音节。</p><p>例：</p><p>make，like。</p><p>公式：一个元音+一个或几个辅音+不发音的e</p><p>2．闭音节</p><p>以一个或几个辅音字母（r 除外）结尾而中间只有一个元音字母的音节，称为闭音节。</p><p>例：</p><p>map，desk，is。在重读的闭音节中元音字母读做短元音.</p><p>六、连读</p><p><strong>1、“辅音+元音”型连读（异性相吸）</strong></p><p>如：</p><p>I’d li(ke a)nother bow(l o)f rice.</p><p>I’m~an~English boy.</p><p>It~is~an~old book.</p><p>Let me have~a look~at~it.</p><p>Ms Black worked in~an~office last~yesterday.</p><p>I called~you half~an~hour~ago.</p><p>Put~it~on, please.</p><p>Not~at~all.</p><p>Please pick~it~up.</p><p>这里like / laik / 以辅音结尾，another 以元音开头，所以连读</p><p>注意：</p><p>以辅音结尾 指的是音标中的最后一个音是辅音，而不是单词的结尾，这如同u[ju:.]niversity前面的定冠词必须用a 一样。</p><p><strong>2、“辅音+ h”型连读</strong></p><p>h不发音</p><p>what wil(l he) [wili]do?</p><p>Ha(s he) done it before?</p><p>Mus(t he) [ti] go?</p><p>Can he do it?</p><p>Should he….?</p><p>Tell him to ask her….</p><p>Lea(ve him) [vim].</p><p>For him (连读这个词，会发现和forum 很相似)</p><p><strong>3、“辅音+半元音”型连读</strong></p><p>英语语音中的/j/和/w/是半元音，如果前一个词是以辅音结尾，后一个词是以半元音，特别是/j/开头，此时也要连读。</p><p>Thank~you</p><p>Nice to meet~you.</p><p>Did~you get there late~again?</p><p>Would~you like~a cup~of tea？</p><p>Could~you help me, please?</p><p><strong>4、“元音+元音”型连读</strong></p><p>如果前一个词以元音结尾，后一个词以元音开头，这两个音往往也要自然而不间断地连读到一起。</p><p>I~am Chinese</p><p>She wants to study~English</p><p>How~and why did you come here?</p><p>She can’t carry~it.</p><p>It’ll take you three~hours to walk there.</p><p>The question is too~easy for him to answer.</p><p><strong>5、当短语或从句之间按意群进行停顿时，意群与意群之间即使有两个相邻的辅音与元音出现，也不可连读。</strong></p><p>Is~it a~hat or a cat?</p><p>（hat与or之间不可以连读）</p><p>There~is~a good book in my desk.</p><p>（book与in之间不可以连读）</p><p>Can you speak~English or French?</p><p>（English与or之间不可以连读）</p><p>Shall we meet at~eight or ten tomorrow morning?</p><p>（meet与 at，eight与or之间不可以连读）</p><p>She opened the door and walked~in.</p><p>（door与and之间不可以连读）</p><p><strong>6、“r/re+元音”型连读</strong></p><p>如果前一个词是以-r或者-re结尾，后一个词是以元音开头，这时的r或re不但要发/r/，而且还要与后面的元音拼起来连读。</p><p>They’re my father~and mother.</p><p>I looked for~it here~and there.</p><p>There~is a football under~it.</p><p>There~are some books on the desk.</p><p>Here~is a letter for you.</p><p>Here~are four~eggs.</p><p>But where~is my cup?</p><p>Where~are your brother~and sister?</p><p>但是，如果一个音节的前后都有字母r，即使后面的词以元音开头，也不能连读。</p><p>如The black clouds are coming nearer and nearer.（nearer与and不可连读）</p><p>七、音的同化</p><p>音的同化也是一种连读的现象，两个词之间非常平滑的过渡，导致一个音受临音影响而变化。</p><p>主要是以下三种方式：</p><p>1、 辅音[d]与[j]相邻时，被同化为[dʒ]：Would you….?</p><p>2、 辅音[t]与[j]相邻时，被同化为[t∫]：Can’t you？</p><p>3、 辅音[s]与[j]相邻时, 被同化为[∫]：Miss you</p><p><strong>失音(省音现象)</strong></p><p>由于失去爆破是失音的一种现象，摩擦音也会被失去，所以统称为失音。</p><p>注意：</p><p>爆破音并不是完全失去，仍然形成阻碍，把气流堵在里面，但不爆破，直接发出相邻的辅音。</p><p>爆破音是指发音器官在口腔中形成阻碍,然后气流冲破阻碍而发出的音。这些音有6个,即/p/, /b/, /t/, /d/, /k/和/g/。</p><p>但在某些情况下,发爆破音时,气流不必冲破阻碍,而只是发音器官在口腔中形成阻碍,并稍做停顿,(也就是说,做好要发出这个爆破音的准备,但不要发出音来),这样的发音过程叫作”不完全爆破”</p><p><strong>1）爆破音/b/ /p/ /d/ /t/ /g/ /k/</strong></p><p>1.以上任何一个爆破音后面如果紧接着是一个辅音或者半元音，那么这个爆破音将不再发音，仅空半拍就行。</p><p>如：</p><p>Good morning!可以发为/gu_ mɔ:niŋ/，/d/这个音并没有发出来，而只是空半拍。</p><p>doctor这个单词，本来应该发音为[dɔktə]，但/k/音后面是辅音/t/，故/k/不再发音，即/dɔ_tə/。</p><p>2.以上任何一个爆破音在句尾时，这个爆破音不再发音。</p><p>如：</p><p>Good night!最后的/t/音便不再发，整句话可读作/gu<em>nai</em>/。</p><p>3.两个连续的爆破音在词尾，后面紧接着是辅音或半元音时，这两个爆破音均不发音。</p><p>如：</p><p>Picked me up.这句话中picked本来应该发音为/pikd/，但/k/和/d/均为爆破音，而且后面紧接辅音/m/，故这两个爆破音都不再发音。这句话可以发音为：/pi_mi ʌp/。</p><p><strong>2）不完全爆破</strong></p><p>① 爆破音中的任何两个爆破音相邻时，前一爆破音失去爆破。</p><p>如：a bi(g) car等。</p><p>② 爆破音中的任何一个后接摩擦音f,h,x,sh,s,r时，前面的爆破音失去爆破。</p><p>如：I didn (t) say so.</p><p>③ 爆破音后接/t/， /d/， /tr/， /dr /时，前面的爆破音失去爆破。</p><p>如：a grea(t) change等。</p><p>④ 爆破音后接/m/, /n/, /l/, /s/时，前面的爆破音失去爆破。</p><p>如：a bi(t) more expensive等。</p><p><strong>3）/s/-/z/ /ts/-/dz/ /∫/-/ ʒ / /t∫/-/ dʒ / /θ/-/ ð /</strong></p><p>ds发/dz/(类似于汉语的“子”）</p><p>ts发/ts/(类似于汉语的“此”）</p><p>以上任何两个音相遇，只读后面的那个音，而前面的音则省略不发。如：Who is Stone?可把前面一个/z/省掉，只读作/hu i stəun /。</p><p><strong>4）/h/</strong></p><p>任何一个辅音，若后面紧跟着/h/音，那么此时/h/不发音。</p><p>如：</p><p>Come here!可以发作/ kʌm iə;/；</p><p>I love her.可以发作/ai lʌv ə /。</p><p><strong>5）/v/</strong></p><p>1.此音后面若紧跟辅音，此时/v/不发音。</p><p>如：Give me可以发音为/gi_mi:/</p><p>2./v/+/w/时，/v/不发音。</p><p>如：</p><p>of water=a water</p><p>ds发/dz/(类似于汉语的“子”）</p><p>ts发/ts/(类似于汉语的“此”）</p><p><strong>失音归纳：</strong></p><p>（1）辅音+辅音——同性相斥</p><p>I don’t-know what-to do.</p><p>I need-some-more money.</p><p>I’d like-to try on that-shirt.</p><p>What-time is our flight-tomorrow</p><p>（2）同类爆破+同类爆破</p><p>相同的两个爆破音相邻时，第一个爆破音省略，只读后面的一个爆破音。</p><p>She’s looking for a part-time job</p><p>I’ll take-care-of the problem.</p><p>&lt;略音和连音同时出现&gt;</p><p>（3）异类爆破+异类爆破</p><p>类似的辅音</p><p>如：[t] –[d]；[d]—[t]；[k]— [g]；[p]—出现时，同样省前读后。</p><p>What do you think?</p><p>Sorry, I wasn’t listening.</p><p>The boss has always been very good to her.</p><p>We had a good time together.</p><p>You’d better get up a little earlier.</p><p>（4）略音 在以[t][d][k][g][p]和+以辅音开始的单词时，前面的辅音发音顿息，舌头达到发音部位“点到为止”，但不送气！在正常速度或快速的对话中，字尾有[t][d]时通常不会把[t][d]的发音清楚地念出来，而是快要念出来时，马上憋气顿息，因此字尾[d][t]的发音常常是听不到的。</p><p>Let me try it</p><p>Maybe he’d like to be alone now</p><p>I might be getting a big raise this month.</p><p>Not a chance</p><p>Is it going to rain tomorrow?</p><p>I hope not. I want to go to the beach.</p><p><strong>九、浊化</strong></p><p><strong>1、[S] 后面的清辅音要浊化</strong></p><p>Discussion：[k] 浊化成 [g]</p><p>Stand：[t] 浊化成[d]</p><p>Expression：[p]浊化成[b]</p><p>S后面的清辅音浊化现象归纳：</p><p>清辅音跟着一个元音，前面又有一个 s ，无论是在单词的最前面还是中间，只要是在重读音节或次重读音节里，一般都读成对应浊辅音，</p><p>如：</p><p>stand, strike, speak, sky 等等，值得一提的是strike，要变成“dr”所发的那个音 (如dream中的“dr”所发的音)。</p><p>这种组合如果后面没有元音，就不存在浊化的问题。</p><p>如：grasp，test，desk等，仍发清辅音。</p><p><strong>2、美音中：[t] 在单词的中间被浊化成[d]</strong></p><p>如：</p><p>Writer— rider</p><p>letter—ladder</p><p>美国人和加拿大人发音为了省事，习惯清音浊化，尤其是[t]在单词的中间一定会浊化成[d]， 但英国人发音不会这样，这也是英音和美音的一大区别。了解这一浊化原则，会给听力带来一些帮助。</p><p><strong>十、弱读</strong></p><p>一般来说：</p><p>实词重读，如动词、名词、副词等；</p><p>虚词弱读，如介词、代词等</p><p>弱读的规则一般是：元音音节弱化成 [ə] 或 [i]</p><p>如：</p><p>extract做名词时读[ ekstrækt]，做动词时读[ik strækt]，</p><p>conduct做名词时读[kən dʌkt]，做动词时读[ kɔndʌkt]。</p><h2 id="自然拼读"><a href="#自然拼读" class="headerlink" title="自然拼读"></a>自然拼读</h2><p>会读</p><p>会认</p><p>会写</p><p>语法结构</p><p>词</p><p>动词</p><p>be 是</p><p>go 去</p><p>come 来</p><p>get  获得</p><p>give 给予</p><p>take 拿</p><h3 id="四季"><a href="#四季" class="headerlink" title="四季"></a>四季</h3><p>春天    spring</p><p>夏天    summer</p><p>秋天    autumn</p><p>冬天    winter</p><p>fall    秋天/落下</p><p>数字</p><img src="/posts/7b2e5cff/image-20240406133129133.png" class="" title="image-20240406133129133"><img src="/posts/7b2e5cff/image-20240406133150215.png" class="" title="image-20240406133150215"><p>dark    黑暗，暗的</p><p>leaf    叶子</p><p>the fall leaf down</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb</title>
      <link href="/posts/99720b1c/"/>
      <url>/posts/99720b1c/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h1><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><p>请求行：请求方法，请求路径，请求协议版本</p><p>请求头：</p><img src="/posts/99720b1c/image-20240710114919983.png" class="" title="image-20240710114919983"><p>请求体：传递数据</p><h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><p>响应行：响应码</p><p>响应头：</p><p>request reponse</p><h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><p>java通过API获取IP地址，</p><img src="/posts/99720b1c/image-20240710125438032.png" class="" title="image-20240710125438032"><h3 id="UDP发送包"><a href="#UDP发送包" class="headerlink" title="UDP发送包"></a>UDP发送包</h3><p>创建socket</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DatagramSocket datagramSocket=<span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br></pre></td></tr></table></figure><p>创建数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str=<span class="string">&quot;abc&quot;</span>;</span><br></pre></td></tr></table></figure><p>封装数据包</p><p>1.数据包byte 2.包长度  3.IP地址 4.端口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span>[] msg=str.getBytes();</span><br><span class="line">InetAddress=inetAddress=InetAddress.getByName(<span class="string">&quot;www.xxx.com&quot;</span>);<span class="comment">//获取对应域名解析</span></span><br><span class="line">DatagramPacket datagramPacket=<span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(msg,msg.length,inetAddress,<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><p>发送</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">datagramSocket.send(datagramPacket);</span><br><span class="line">datagramSocket.close();<span class="comment">//释放资源</span></span><br></pre></td></tr></table></figure><h3 id="UDP接收包"><a href="#UDP接收包" class="headerlink" title="UDP接收包"></a>UDP接收包</h3><p>创建socket</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DatagramSocket datagramSocket=<span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><p>接收数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span>[] bytes=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">DatagramPacket datagramPacket=<span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(bytes,bytes.length);</span><br><span class="line"><span class="comment">//监听开始，没收到数据则一直堵塞等待</span></span><br><span class="line">datagramPacket.receive(datagramSocket);</span><br><span class="line"><span class="type">byte</span>[] msg=datagramPacket.getData();</span><br><span class="line">String str=<span class="keyword">new</span> <span class="title class_">String</span>(msg);</span><br></pre></td></tr></table></figure><h3 id="TCP发送包"><a href="#TCP发送包" class="headerlink" title="TCP发送包"></a>TCP发送包</h3><blockquote><p>客户端连接不上服务器端,当前没有服务器端</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Socket socket=<span class="keyword">new</span> <span class="title class_">Socket</span>(InetAssress.getByName(<span class="string">&quot;www.xxx.com&quot;</span>),<span class="number">8080</span>);</span><br><span class="line">OutputStream outPutStream=socket.getOutputStream();</span><br><span class="line">outputStream.write(<span class="string">&quot;aaabb&quot;</span>.getBytes());</span><br><span class="line">outputStream.close();</span><br><span class="line">socket.close();</span><br></pre></td></tr></table></figure><h3 id="TCP接收包"><a href="#TCP接收包" class="headerlink" title="TCP接收包"></a>TCP接收包</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ServerSocket serverSocket=<span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">8080</span>);</span><br><span class="line"><span class="comment">//无数据，阻塞等待</span></span><br><span class="line">Socket socket=serverSocket.accept();</span><br><span class="line">InputStream inputStream=socket.getInputStream();</span><br><span class="line"><span class="type">byte</span>[] bytes=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="type">int</span> len=inputStream.read(bytes);</span><br><span class="line">String str=<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len);</span><br><span class="line">inputStream.close();</span><br><span class="line">socket.close();</span><br><span class="line">serverSocket.close();</span><br></pre></td></tr></table></figure><h3 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bin：放置tomcat一些相关命令，如启动（startup）和关闭（shutdown）等</span><br><span class="line">conf：（configure）配置文件，通常修改端口就是在conf目录下的server.xml</span><br><span class="line">lib：（library）库，依赖的jar包</span><br><span class="line">logs：存放启动运行日志</span><br><span class="line">temp：存放tomcat在运行过程中产生的临时文件</span><br><span class="line">webapps：可执行的项目，默认作为存放开发项目的目录</span><br><span class="line">work：存放tomcat在运行时的编译后文件</span><br></pre></td></tr></table></figure><p>.bat    win</p><p>.sh    linux</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改控制台乱码问题，删除config文件夹下的logging.properties中的这一句。tomcat就会使用控制台默认编码（GBK）</span></span><br><span class="line">java.util.logging.ConsoleHandler.encoding = UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure><p>.war .jar</p><h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><p>添加 <code>libs</code>文件夹添加<code>servlet-api.jar</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javax.servlet =&gt; jakarta.servlet</span><br><span class="line">tomcat10以后才支持jakarta</span><br><span class="line">tomcat9=&gt;java8</span><br><span class="line">tomcat10=&gt;java11以上</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Servlet=&gt;HttpServlet</span><br><span class="line">HttpServlet 在实现 Servlet 接口时，覆写了 service 方法，该方法体内的代码会自动判断用户的请求方式，如为 GET 请求，则调用 HttpServlet 的 doGet 方法，如为 Post 请求，则调用 doPost 方法。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">servlet类的生命周期</span><br><span class="line">1.创建servlet类对象（分为访问创建和提前创建）（loadOnStartup=-1）默认，访问时候创建；等于1时，提前创建，就是启动就创建。</span><br><span class="line">2.init()-初始化，只执行一次</span><br><span class="line">3.service()-执行业务逻辑请求，多次请求都会走到这一个service对象，单例</span><br><span class="line">4.destroy()-关闭时，销毁servlet类对象</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">线程安全性问题：多个线程同时访问一个变量，获取到的值相同，然后同时操作，会导致有一个操作消失。</span><br></pre></td></tr></table></figure><h3 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HttpServletRequest req, HttpServletResponse resp</span><br><span class="line">String str=req.getParameter(<span class="string">&quot;userName&quot;</span>);<span class="comment">//获取用户传递的</span></span><br><span class="line">xxx?userName=aaa&amp;userPwd=bbb</span><br><span class="line">    </span><br><span class="line">tomcat封装RequestFacade=&gt;HttpServletRequest=&gt;ServletRequest</span><br></pre></td></tr></table></figure><h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">req.getMethod(); <span class="comment">//获取请求方法 get/post</span></span><br><span class="line">req.getContextPath(); <span class="comment">//获取访问路径 /web</span></span><br><span class="line">req.getRequestURL(); <span class="comment">//获取全部url www.xx.com/html</span></span><br><span class="line">req.getQueryString(); <span class="comment">//获取get请求的参数  user=x?pass=x</span></span><br><span class="line"><span class="comment">//请求头</span></span><br><span class="line">req.getHeader(<span class="string">&quot;....&quot;</span>);</span><br><span class="line"><span class="comment">//请求体 post方法才有</span></span><br><span class="line"><span class="comment">//表单提交input需要有name形成键值对</span></span><br><span class="line">BufferedReader reader=req.getReader();</span><br><span class="line">String str=reader.readLine();</span><br><span class="line">reader.close();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取值</span></span><br><span class="line"><span class="comment">//底层通过Map封装  &lt;String,String[]&gt; ,可能传递多个同name的值，所以一个key，对应一个数组。</span></span><br><span class="line">req.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">req.getParameter(<span class="string">&quot;userPwd&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="请求转发-服务器内部跳转，地址不会变化"><a href="#请求转发-服务器内部跳转，地址不会变化" class="headerlink" title="请求转发(服务器内部跳转，地址不会变化)"></a>请求转发(服务器内部跳转，地址不会变化)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同一个tomcat服务器</span></span><br><span class="line"><span class="comment">//第一个服务</span></span><br><span class="line">req.getRequestDispatcher(<span class="string">&quot;/服务器名称&quot;</span>).forward(req,resq);</span><br><span class="line"><span class="comment">//第二个服务</span></span><br><span class="line">resp.getWrite();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数据共享"><a href="#数据共享" class="headerlink" title="数据共享"></a>数据共享</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一个服务</span></span><br><span class="line">req.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"><span class="comment">//第二个服务</span></span><br><span class="line">String name=(String)req.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">resp.setStatus(<span class="number">200</span>); <span class="comment">//设置响应状态码</span></span><br><span class="line">resp.setError(<span class="number">404.</span><span class="string">&quot;xx&quot;</span>);</span><br><span class="line">resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);<span class="comment">//返回字符编码</span></span><br><span class="line"><span class="comment">//响应体为字符</span></span><br><span class="line">PrintWriter writer=resp.getWriter();</span><br><span class="line">writer.println(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">writer.close();</span><br><span class="line"><span class="comment">//响应体为字节，如下载</span></span><br><span class="line">resp.getOutputStream();</span><br></pre></td></tr></table></figure><h4 id="重定向-302-2次请求，地址栏会发生变化"><a href="#重定向-302-2次请求，地址栏会发生变化" class="headerlink" title="重定向 302  (2次请求，地址栏会发生变化)"></a>重定向 302  (2次请求，地址栏会发生变化)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resp.setStatus(<span class="number">302</span>);</span><br><span class="line">resp.setHeader(<span class="string">&quot;Location&quot;</span>,<span class="string">&quot;http://wwww.xxx.com&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//封装后直接使用</span></span><br><span class="line">resp.sendRedirect(<span class="string">&quot;http://www.xxx.com&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="jdbc"><a href="#jdbc" class="headerlink" title="jdbc"></a>jdbc</h3><h4 id="添加java包"><a href="#添加java包" class="headerlink" title="添加java包"></a>添加java包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">commons-lang3-3.4.jar</span><br><span class="line">mysql-connector-java-8.0.13.jar</span><br><span class="line">servlet-api.jar</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">entity -- 实体</span><br><span class="line">dao -- 数据库访问</span><br><span class="line">service  -- 业务逻辑层</span><br><span class="line">controller</span><br></pre></td></tr></table></figure><h4 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String  driverClass<span class="operator">=</span>&quot;com.mysql.cj.jdbc.Driver&quot;;</span><br><span class="line">String url<span class="operator">=</span>&quot;jdbc:mysql://localhost:3306/web?serverTimezone=UTC&quot;;</span><br><span class="line">String  <span class="keyword">user</span><span class="operator">=</span>&quot;root&quot;;</span><br><span class="line">String  pwd<span class="operator">=</span>&quot;xxx&quot;;</span><br><span class="line">Class.forName(driverClass);</span><br><span class="line">Connection connection <span class="operator">=</span> DriverManager.getConnection(url,<span class="keyword">user</span>,pwd);</span><br><span class="line">Statement statement<span class="operator">=</span> connection.createStatement()</span><br><span class="line">String <span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM user&quot;;</span><br><span class="line">ResultSet resultSet<span class="operator">=</span> statement.executeQuery(<span class="keyword">sql</span>);</span><br><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h4 id="Connection类的API详解"><a href="#Connection类的API详解" class="headerlink" title="Connection类的API详解"></a>Connection类的API详解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">createStatement()：<span class="comment">//创建向数据库发送sql的statement对象。</span></span><br><span class="line">prepareStatement(sql) ：<span class="comment">//创建向数据库发送预编译sql的PrepareSatement对象。</span></span><br><span class="line">prepareCall(sql)：<span class="comment">//创建执行存储过程的callableStatement对象。</span></span><br><span class="line">setAutoCommit(<span class="type">boolean</span> autoCommit)：<span class="comment">//设置事务是否自动提交。</span></span><br><span class="line">commit() ：<span class="comment">//在链接上提交事务。</span></span><br><span class="line">rollback() ：<span class="comment">//在此链接上回滚事务。</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">statement执行sql</span><br><span class="line"><span class="number">1</span>、运行静态SQL语句。通常通过<span class="comment">//Statement实例实现。</span></span><br><span class="line"><span class="number">2</span>、运行动态SQL语句。通常通过<span class="comment">//PreparedStatement实例实现。</span></span><br><span class="line"><span class="number">3</span>、运行数据库存储过程。通常通过<span class="comment">//CallableStatement实例实现。</span></span><br></pre></td></tr></table></figure><h4 id="静态SQL：Statement"><a href="#静态SQL：Statement" class="headerlink" title="静态SQL：Statement"></a>静态SQL：Statement</h4><p>Statement接口提供了三种运行SQL语句的方法：executeQuery、executeUpdate 和execute。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ResultSet <span class="title function_">executeQuery</span><span class="params">(String sqlString)</span></span><br><span class="line"><span class="comment">//运行查询数据库的SQL语句。返回一个结果集（ResultSet）对象。</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">executeUpdate</span><span class="params">(String sqlString)</span></span><br><span class="line"><span class="comment">//用于运行INSERT、UPDATE或DELETE语句以及SQL DDL语句，如：CREATETABLE和DROP TABLE等。返回影响作用的行数。</span></span><br><span class="line">    </span><br><span class="line"><span class="type">boolean</span> <span class="title function_">execute</span><span class="params">(sqlString)</span></span><br><span class="line"><span class="comment">//用于运行返回多个结果集、多个更新计数或二者组合的语句。</span></span><br><span class="line">    </span><br><span class="line">ddBatch(String sql)</span><br><span class="line"><span class="comment">//把多条sql语句放到一个批处理中。</span></span><br><span class="line">    </span><br><span class="line">executeBatch()</span><br><span class="line"><span class="comment">//向数据库发送一批sql语句执行。</span></span><br></pre></td></tr></table></figure><h4 id="动态SQL：PreparedStatement"><a href="#动态SQL：PreparedStatement" class="headerlink" title="动态SQL：PreparedStatement"></a>动态SQL：PreparedStatement</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">executeUpdate</span><span class="params">()</span>; </span><br><span class="line"><span class="comment">//执行PreparedStatement对象中预编译的SQL语句。返回执行成功的行数。 适用执行：insert、update、delete类的SQL语句；</span></span><br><span class="line"></span><br><span class="line">executeQuery方法，</span><br><span class="line"><span class="comment">//适用于执行有返回结果集的SQL语句，例如select。</span></span><br></pre></td></tr></table></figure><h4 id="处理结果获取方法："><a href="#处理结果获取方法：" class="headerlink" title="处理结果获取方法："></a>处理结果获取方法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Object <span class="title function_">getObject</span><span class="params">(<span class="type">int</span> index)</span> / Object <span class="title function_">getObject</span><span class="params">(String name)</span> <span class="comment">//获得任意对象</span></span><br><span class="line">String <span class="title function_">getString</span><span class="params">(<span class="type">int</span> index)</span> / Object <span class="title function_">getObject</span><span class="params">(String name)</span> <span class="comment">//获得字符串</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getInt</span><span class="params">(<span class="type">int</span> index)</span> / Object <span class="title function_">getObject</span><span class="params">(String name)</span> <span class="comment">//获得整形</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">getDouble</span><span class="params">(<span class="type">int</span> index)</span> / Object <span class="title function_">getObject</span><span class="params">(String name)</span> <span class="comment">//获得双精度浮点型</span></span><br></pre></td></tr></table></figure><h4 id="遍历方法："><a href="#遍历方法：" class="headerlink" title="遍历方法："></a>遍历方法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">next</span><span class="params">()</span>; <span class="comment">//将光标移动至下一行。当光标返回最后一行之后一行，或者为空，返回false。</span></span><br><span class="line">Previous()：<span class="comment">//移动到前一行</span></span><br><span class="line">absolute(<span class="type">int</span> row)：<span class="comment">//移动到指定行</span></span><br><span class="line">beforeFirst()：<span class="comment">//移动resultSet的最前面。</span></span><br><span class="line">afterLast() ：<span class="comment">//移动到resultSet的最后面。</span></span><br></pre></td></tr></table></figure><h4 id="数据库连接类"><a href="#数据库连接类" class="headerlink" title="数据库连接类"></a>数据库连接类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtils</span> &#123;</span><br><span class="line">   <span class="keyword">private</span>   <span class="title function_">JdbcUtils</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  driverClass=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  url=<span class="string">&quot;jdbc:mysql://localhost:3306/web?serverTimezone=UTC&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  pwd=<span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverClass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>  Connection <span class="title function_">sqlConnection</span><span class="params">()</span>&#123;</span><br><span class="line">        Connection connection= <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = DriverManager.getConnection(url,user,pwd);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">closeConnection</span><span class="params">(ResultSet resultSet,Statement statement,Connection connection)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement!=<span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(connection!=<span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启手动事务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">closeConnection</span><span class="params">(Statement statement,Connection connection)</span>&#123;</span><br><span class="line">        closeConnection(<span class="literal">null</span>,statement,connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setAutoCommit</span><span class="params">(Connection connection)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交事务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">gocommit</span><span class="params">(Connection connection)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">backcommit</span><span class="params">(Connection connection)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="预编译拼接-PreparedStatemnet"><a href="#预编译拼接-PreparedStatemnet" class="headerlink" title="预编译拼接 PreparedStatemnet"></a>预编译拼接 PreparedStatemnet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">con= JdbcUtils.sqlConnection();</span><br><span class="line">String   sql=<span class="string">&quot;SELECT * FROM user where name=?&quot;</span>;</span><br><span class="line">statement= con.prepareStatement(sql);</span><br><span class="line">statement.setString(<span class="number">1</span>,userEntity.getName());</span><br><span class="line">resultSet= statement.executeQuery();</span><br></pre></td></tr></table></figure><h4 id="jabc中的事务"><a href="#jabc中的事务" class="headerlink" title="jabc中的事务"></a>jabc中的事务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启手动事务</span></span><br><span class="line">con.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//提交事务</span></span><br><span class="line">con.commit();</span><br><span class="line"><span class="comment">//回滚事务</span></span><br><span class="line">con.rollback();</span><br></pre></td></tr></table></figure><h3 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h3><h4 id="c3po"><a href="#c3po" class="headerlink" title="c3po"></a>c3po</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入jar</span></span><br><span class="line">c3p0-xxx.jar</span><br><span class="line">mchange-commons-java.jar</span><br><span class="line">mysql-connector-java-xxx.jar</span><br></pre></td></tr></table></figure><h3 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h3><p>jsp脚本</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="type">int</span> i=<span class="number">10</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>el 表达式 </p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;userList&#125;</span><br></pre></td></tr></table></figure><p>jstl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if</span><br><span class="line">foreach</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h3><img src="/posts/99720b1c/image-20240723213214543.png" class="" title="image-20240723213214543"><h4 id="Cookie-客户端"><a href="#Cookie-客户端" class="headerlink" title="Cookie -客户端"></a>Cookie -客户端</h4><p>包含一个key,value</p><p>服务器创建cookie，存放在客户端，下一次发送请求浏览器就会在请求头带上cookie。</p><p>服务器端重启不会丢失，因为存放在客户端。</p><p>客户端清除缓存数据会丢失。</p><p>生成Cookie </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie=<span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">resp.addCookie(cookie);</span><br></pre></td></tr></table></figure><p>获取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cookie[] cookies=req.getCookies();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;cookies.length;i++)&#123;</span><br><span class="line">Cookie cookie1=cookies[i];</span><br><span class="line">System.out.println(cookie1.getValue());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cookie过期时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setMaxAge(60);//秒为单位</span><br><span class="line">正数：到期删除</span><br><span class="line">负数：默认值，关闭浏览器，过期销毁。</span><br><span class="line">零：删除对应Cookie</span><br></pre></td></tr></table></figure><h4 id="Session-服务端"><a href="#Session-服务端" class="headerlink" title="Session -服务端"></a>Session -服务端</h4><p>基于Cookie封装</p><p>客户端有一个sessionId，对应服务端的session</p><p>Cookie保存sessionId</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session=req.getSession();</span><br><span class="line"></span><br><span class="line"><span class="comment">//HttpSession session=req.getSession(true);</span></span><br><span class="line"><span class="comment">//找到覆盖，找不到新建</span></span><br><span class="line"><span class="comment">//HttpSession session=req.getSession(false);</span></span><br><span class="line"><span class="comment">//找到覆盖，找不到保存</span></span><br><span class="line"><span class="comment">//session.invalidate();销毁session</span></span><br><span class="line">session.setAttribute(k,y);</span><br><span class="line">session.getAttribute(k);</span><br><span class="line">session.removeAttribute(k);</span><br></pre></td></tr></table></figure><img src="/posts/99720b1c/image-20240726123530144.png" class="" title="image-20240726123530144"><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><img src="/posts/99720b1c/image-20240724122620019.png" class="" title="image-20240724122620019"><h4 id="拦截器类"><a href="#拦截器类" class="headerlink" title="拦截器类"></a>拦截器类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        HttpServletRequest req=(HttpServletRequest)servletRequest;</span><br><span class="line">        HttpServletResponse resp=(HttpServletResponse)servletResponse;</span><br><span class="line">        req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;aaa&quot;</span>.equals(<span class="string">&quot;name&quot;</span>))&#123;</span><br><span class="line">            filterChain.doFilter(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤器链"><a href="#过滤器链" class="headerlink" title="过滤器链"></a>过滤器链</h4><p>多个过滤器按照首字母排序，只要满足条件就会依次执行。</p><p>放行后不会立即执行页面，会进入下一个满足条件的过滤器。</p><p>过滤器原理<br>        当我们使用过滤器时，过滤器会对游览器的请求进行过滤，过滤器可以动态的分为3个部分，1.放行之前的代码，2.放行，3.放行后的代码，这3个部分分别会发挥不同作用。</p><p>第一部分代码会对游览器请求进行第一次过滤，然后继续执行<br>第二部分代码就是将游览器请求放行，如果还有过滤器，那么就继续交给下一个过滤器<br>第三部分代码就是对返回的Web资源再次进行过滤处理</p><h3 id="json"><a href="#json" class="headerlink" title="json"></a>json</h3><h4 id="json对象"><a href="#json对象" class="headerlink" title="json对象"></a>json对象</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    name<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    age<span class="punctuation">:</span><span class="number">22</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="json数组"><a href="#json数组" class="headerlink" title="json数组"></a>json数组</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        name<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        age<span class="punctuation">:</span><span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        name<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        age<span class="punctuation">:</span><span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h4 id="json嵌套"><a href="#json嵌套" class="headerlink" title="json嵌套"></a>json嵌套</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    code<span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    msg<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    data<span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        id<span class="punctuation">:</span><span class="number">1</span></span><br><span class="line">        name<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        pwd<span class="punctuation">:</span><span class="string">&quot;4114&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        id<span class="punctuation">:</span><span class="number">1</span></span><br><span class="line">        name<span class="punctuation">:</span><span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        pwd<span class="punctuation">:</span><span class="string">&quot;4114&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="json解析"><a href="#json解析" class="headerlink" title="json解析"></a>json解析</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JsonLib</span><br><span class="line">Gson(谷歌)</span><br><span class="line">fastjson(阿里)</span><br><span class="line">jackson(Sping Mvc内置解析器)</span><br></pre></td></tr></table></figure><p>fastjson</p><p>下载jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">         &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">         &lt;version&gt;2.0.45&lt;/version&gt;</span><br><span class="line">     &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>转换json</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">UserEntity user= <span class="keyword">new</span> <span class="title class_">UserEntity</span>(<span class="number">1</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;XX&quot;</span>);</span><br><span class="line">String json= JSONObject.toJSONString(user);</span><br><span class="line"></span><br><span class="line">JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">jsonObject.put(<span class="string">&quot;code&quot;</span>,<span class="number">200</span>);</span><br><span class="line">jsonObject.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">ArrayList&lt;UserEntity&gt; arrayList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">jsonObject.put(<span class="string">&quot;data&quot;</span>,arrayList);</span><br></pre></td></tr></table></figure><p>解析json</p><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left"><code>JSON.parseObject()</code></td><td style="text-align:left">从字符串解析 JSON 对象</td></tr><tr><td style="text-align:left"><code>JSON.parseArray()</code></td><td style="text-align:left">从字符串解析 JSON 数组</td></tr><tr><td style="text-align:left"><code>JSON.toJSONString(obj/array)</code></td><td style="text-align:left">将 JSON 对象或 JSON 数组转化为字符串</td></tr></tbody></table></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">JSONObject jsonObject=JSONObject.parseObject(str);</span><br><span class="line">      Integer code=jsonObject.getInteger(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">      String msg=jsonObject.getString(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">      JSONArray data=jsonObject.getJSONArray(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;data.size();i++)&#123;</span><br><span class="line">          JSONObject jsonObject1=(JSONObject)data.get(i);</span><br><span class="line">          Integer id=jsonObject1.getInteger(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">          String name=jsonObject1.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">          String pwd=jsonObject1.getString(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">UserEntity</span>(id,name,pwd);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JSONObject jsonObject=JSONObject.parseObject(str);</span><br><span class="line">        Result result= JSONObject.parseObject(str,Result.class);</span><br><span class="line"><span class="comment">//Result类</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>  code;</span><br><span class="line"><span class="keyword">private</span> String msg;</span><br><span class="line"><span class="keyword">private</span> List&lt;UserEntity&gt; data;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;http:localhost:8080$&#123;pageContext.request.contextPath&#125;/xxx&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">            <span class="attr">userName</span>:xx,</span><br><span class="line">            <span class="attr">userPwd</span>:xx,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span><br><span class="line">        result.<span class="property">data</span></span><br><span class="line">        <span class="comment">//服务器返回的数据</span></span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="/posts/99720b1c/image-20240717095343663.png" class="" title="image-20240717095343663"><p>类加载，反射 spi</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习</title>
      <link href="/posts/8df0ec14/"/>
      <url>/posts/8df0ec14/</url>
      
        <content type="html"><![CDATA[<p>tomcat 对应jdk版本   11-17 10-11 安装方式 exe 和zip</p><p>ctrl+alt+u 查看类继承图片</p><p>IDEA删除已经废弃不用的jdk选项</p><img src="/posts/8df0ec14/image-20240910173429353.png" class="" title="image-20240910173429353"><p>C:\Users\用户\AppData\Roaming\JetBrains\IntelliJIdea2024.1\options</p><p>jdk.table.xml文件删除文件内容</p><h2 id="Java概述"><a href="#Java概述" class="headerlink" title="Java概述"></a>Java概述</h2><p>JDK（开发工具包）-&gt;JRE（运行环境）-&gt;JVM(Java虚拟机)+类库</p><p>通过JVM虚拟机实现跨平台</p><h3 id="Java版本问题"><a href="#Java版本问题" class="headerlink" title="Java版本问题"></a>Java版本问题</h3><p>1.JavaSE   Java标准版</p><p>Java基础核心功能（语法，面向对象，集合，IO，多线程，网络，反射等），适用于桌面端的开发。</p><p>2.JavaME   Java微型版</p><p>多用于嵌入式，移动端开发</p><p>3.JavaEE   JAVA企业版</p><p>用于Web开发，包含Web请求接口规范等等。</p><p>B/S体系 -&gt;浏览器/服务器</p><p>C/S体系 -&gt;客户端/服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jdk1.8=&gt;java8</span><br><span class="line"></span><br><span class="line">jdk10=&gt;java10</span><br><span class="line"></span><br><span class="line">自从java10开始统一用jdk+版本号命名</span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240714170554566.png" class="" title="image-20240714170554566"><h3 id="JDK组成"><a href="#JDK组成" class="headerlink" title="JDK组成"></a>JDK组成</h3><img src="/posts/8df0ec14/image-20240416162842968.png" class="" title="image-20240416162842968"><h3 id="Java基础问题"><a href="#Java基础问题" class="headerlink" title="Java基础问题"></a>Java基础问题</h3><p>Java跨平台实现：</p><p>Java是半编译半解释型语言</p><p> .java编译成.class字节码，在解释运行</p><h3 id="Java框架-按照时间线"><a href="#Java框架-按照时间线" class="headerlink" title="Java框架(按照时间线)"></a>Java框架(按照时间线)</h3><ol><li><strong>无框架</strong></li><li><strong>Servlet+JSP + JDBC</strong></li><li><strong>MVC思想</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Servlet -&gt;c</span><br><span class="line">JDBC -&gt;m</span><br><span class="line">JSP-&gt;v</span><br></pre></td></tr></table></figure><p>继MVC后不同层又有新技术迭代相继被替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spring :ioc容器，控制反转</span><br><span class="line">Struts -&gt;Servet</span><br><span class="line">Mybatis/Hibernate-&gt;JDBC</span><br></pre></td></tr></table></figure><ol><li><strong>SSM框架</strong></li></ol><p>SSM框架是spring、spring MVC 、和mybatis框架的整合，是标准的MVC模式。标准的SSM框架有四层，分别是dao层（mapper），service层，controller层和View层。使用spring实现业务对象管理，使用spring MVC负责请求的转发和视图管理，mybatis作为数据对象的持久化引擎。</p><p><a href="https://blog.csdn.net/weixin_45650003/article/details/121623824">SSM框架讲解（史上最详细的文章）_ssm架构-CSDN博客</a></p><ol><li>前后端分离</li></ol><h2 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 文档注释</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> 传入</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>数字，字母，下划线组成，不能数字开头</p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>48个关键字及2个保留字,全部小写</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="Java有8种基础数据类型"><a href="#Java有8种基础数据类型" class="headerlink" title="Java有8种基础数据类型"></a>Java有8种基础数据类型</h4><div class="table-container"><table><thead><tr><th>数据类型</th><th>默认值</th><th>大小</th></tr></thead><tbody><tr><td>boolean</td><td>false</td><td>不确定</td></tr><tr><td>char</td><td>‘\u0000’</td><td>2 字节</td></tr><tr><td>byte</td><td>0</td><td>1 字节</td></tr><tr><td>short</td><td>0</td><td>2 字节</td></tr><tr><td>int</td><td>0</td><td>4 字节</td></tr><tr><td>long</td><td>0L</td><td>8 字节</td></tr><tr><td>float</td><td>0.0f</td><td>4 字节</td></tr><tr><td>double</td><td>0.0</td><td>8 字节</td></tr></tbody></table></div><h4 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h4><ul><li>Byte（对应 byte）</li><li>Short（对应 short）</li><li>Integer（对应 int）</li><li>Long（对应 long）</li><li>Float（对应 float）</li><li>Double（对应 double）</li><li>Character（对应 char）</li><li>Boolean（对应 boolean）</li></ul><h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><p>分为隐式和显式</p><p>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double<br>char -&gt; int -&gt; long -&gt; float -&gt; double</p><p>对于小数类型，默认为double类型。所以在赋值的时候可能会有问题。</p><p>对于字符类型和int类型相加，会返回int类型。</p><h4 id="java的封装和拆封"><a href="#java的封装和拆封" class="headerlink" title="java的封装和拆封"></a>java的封装和拆封</h4><p>对于一个普通数据类型都有对应的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">10</span>;</span><br><span class="line">Integer I=<span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">10</span>); </span><br><span class="line">String fontText=<span class="string">&quot;777&quot;</span>;</span><br><span class="line"><span class="type">int</span> fontSize=Integer.paresInt(fontText);<span class="comment">//字符串转换整型</span></span><br><span class="line"><span class="type">float</span> f=<span class="number">10.2f</span>;</span><br><span class="line">Float F=<span class="keyword">new</span> <span class="title class_">Float</span>(<span class="number">10.2f</span>);</span><br></pre></td></tr></table></figure><h4 id="基本数据类型缓存池"><a href="#基本数据类型缓存池" class="headerlink" title="基本数据类型缓存池"></a>基本数据类型缓存池</h4><p>基本数据类型的包装类除了 Float 和 Double 之外，其他六个包装器类（Byte、Short、Integer、Long、Character、Boolean）都有常量缓存池。</p><p>Integer 类内部中内置了 256 个 Integer 类型的缓存数据，当使用的数据范围在 -128~127 之间时，会直接返回常量池中数据的引用，而不是创建对象，超过这个范围时会创建新的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">x</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">18</span>);</span><br><span class="line"><span class="type">Integer</span> <span class="variable">y</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">18</span>);</span><br><span class="line">System.out.println(x == y);</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">z</span> <span class="operator">=</span> Integer.valueOf(<span class="number">18</span>);</span><br><span class="line"><span class="type">Integer</span> <span class="variable">k</span> <span class="operator">=</span> Integer.valueOf(<span class="number">18</span>);</span><br><span class="line">System.out.println(z == k);</span><br><span class="line"></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">m</span> <span class="operator">=</span> Integer.valueOf(<span class="number">300</span>);</span><br><span class="line"><span class="type">Integer</span> <span class="variable">p</span> <span class="operator">=</span> Integer.valueOf(<span class="number">300</span>);</span><br><span class="line">System.out.println(m == p);</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h4><p>引用数据类型的默认值为 null，包括数组和接口</p><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><p>基本数据类型：</p><ul><li>1、变量名指向具体的数值。</li><li>2、基本数据类型存储在栈上。</li></ul><p>引用数据类型：</p><ul><li>1、变量名指向的是存储对象的内存地址，在栈上。</li><li>2、内存地址指向的对象存储在堆上。</li></ul><h3 id="标识符-1"><a href="#标识符-1" class="headerlink" title="标识符"></a>标识符</h3><p>方法和变量命名：首字符小写，其他首字符大写</p><p>类命名：每个首字母大写</p><h3 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> array[];</span><br><span class="line"><span class="type">int</span>[] array;</span><br><span class="line"><span class="type">int</span>[] array=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">array.lenth;</span><br><span class="line"><span class="type">int</span>[][] array=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>][];</span><br></pre></td></tr></table></figure><ol><li>数组元素是有默认值的</li><li>对于二维数组，定义时候可以只给定行的数量，</li><li>对二维数组（n行，m列）直接求lenth：<code>array.lenth</code> 得到的是n，即行的数量，在通过：<code>array[0].lenth</code>可以求当当前行的列数量，即二维数组可以看做多个一维数组组成。</li></ol><h3 id="成员方法和成员属性的访问级别：4种"><a href="#成员方法和成员属性的访问级别：4种" class="headerlink" title="成员方法和成员属性的访问级别：4种"></a>成员方法和成员属性的访问级别：4种</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span><span class="comment">//公开的</span></span><br><span class="line"><span class="keyword">protected</span> <span class="comment">//子类和本包</span></span><br><span class="line"><span class="keyword">default</span>    <span class="comment">//默认的,本包</span></span><br><span class="line"><span class="keyword">private</span>  <span class="comment">//只能本类</span></span><br></pre></td></tr></table></figure><p>静态</p><p>静态方法只能访问有静态修饰的成员,属性,方法.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span></span><br></pre></td></tr></table></figure><p>最终态:无法被继承,必须有初始值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span></span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240420143237025.png" class="" title="image-20240420143237025"><p>java中一个文件，只能存在一个public类，并且名字要与文件名一致。</p><img src="/posts/8df0ec14/image-20240420133705840.png" class="" title="image-20240420133705840"><h3 id="封装继承多态-oop"><a href="#封装继承多态-oop" class="headerlink" title="封装继承多态(oop)"></a>封装继承多态(oop)</h3><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><p>通过对成员变量的私有化，实现外部无法轻易获取和修改该成员变量。然后用get和set方法来放行。</p><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><ol><li>在类实例化对象的时候调用</li><li>构造方法通过重载可以有多个</li><li>类至少有一个构造方法，如果没有显式写构造方法，那么类会自动生成一个默认的无参构造方法。</li><li>自己显式写了构造方法，系统就不会提供默认构造方法</li><li>构造方法链：对于继承，系统会隐式的在构造方法第一句加上<code>super()</code>调用父类构造方法,如果上层还有继承则会继续调用更上层的父类构造方法。即为会实现最上层构造方法后，在一层层向下实现，直到本类最后。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="this-成员变量"><a href="#this-成员变量" class="headerlink" title="this.成员变量"></a>this.成员变量</h4><p>this.可以访问构造函数，可以用一个构造函数访问另一个构造函数,但是只能在第一句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.a=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>(a);</span><br><span class="line"><span class="built_in">this</span>.b=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="extends-继承"><a href="#extends-继承" class="headerlink" title="extends 继承"></a>extends 继承</h4><p>super.父类中的成员</p><p>子类构造方法会默认访问父类无参构造方法,且先执行父类构造方法</p><p>每个子类默认第一句都是调用父类构造方法.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">P</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line"><span class="built_in">super</span>(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="final-最终"><a href="#final-最终" class="headerlink" title="final 最终"></a>final 最终</h4><p>无法修改和被继承</p><h4 id="方法重载与重写"><a href="#方法重载与重写" class="headerlink" title="方法重载与重写"></a>方法重载与重写</h4><p>重载指的是：方法名称相同，但是方法的参数列表数量不同或者参数接收数据类型不同。</p><p>重写指的是：通过@Override重写这个方法的实现。</p><p>私有方法无法重写</p><h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><p>子转父</p><p>父类对象引用给到子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal a=<span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br></pre></td></tr></table></figure><p>调用的方法为子类中实现的父类的方法，无法调用子类有父类没有的方法。</p><p>父转子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Animal a=<span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">Dog b=(Dog)A;</span><br></pre></td></tr></table></figure><h4 id="抽象类-abstract"><a href="#抽象类-abstract" class="headerlink" title="抽象类 abstract"></a>抽象类 abstract</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">abstract</span> A&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>抽象方法没有方法体,并且抽象方法只能在抽像类中</p><p>抽象类无法实例化,继承的方法一定要重新父类的抽象方法.</p><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><p>可以访问外部类全部成员</p><p>局部内部类，方法中的类</p><p>静态内部类</p><p>匿名内部类</p><h3 id="包-package"><a href="#包-package" class="headerlink" title="包(package)"></a>包(package)</h3><p>src目录下,没有包名称</p><p>package 打包</p><p>import  导入</p><h3 id="接口-interface-implement"><a href="#接口-interface-implement" class="headerlink" title="接口 interface  implement"></a>接口 interface  implement</h3><p>继承接口的类必须实现接口所有的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> implement B&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口中的成员变量:都是常量并且都是静态的(public static final a=10;)</p><p>接口中的方法:都是抽象方法</p><p>jdk8之后的接口中定义非抽象方法:default</p><p>接口没有构造方法</p><p>抽象类:对事物抽象</p><p>接口:对行为抽象</p><h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><p>普通代码块</p><p>构造块：优先级大于构造方法</p><p>静态代码块：static{} 优先级大于构造块，只执行一次。</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>Object类中的方法:</p><img src="/posts/8df0ec14/image-20240420163934166.png" class="" title="image-20240420163934166"><h4 id="equals方法"><a href="#equals方法" class="headerlink" title="equals方法"></a>equals方法</h4><ol><li>字符串的equals，比较两个字符串是否相等</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">&quot;111&quot;</span>;</span><br><span class="line">String b=<span class="string">&quot;111&quot;</span>;</span><br><span class="line">a.equals(b);</span><br></pre></td></tr></table></figure><ol><li>Object的equals，比较对象的地址是否相等</li></ol><h4 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h4><p>判断A对象是否是B类型的实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a instanceof B</span><br></pre></td></tr></table></figure><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>indexOf()</p><h4 id="charAt"><a href="#charAt" class="headerlink" title="charAt"></a>charAt</h4><p>获取字符串的单个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">&quot;aa&quot;</span>;</span><br><span class="line">a.charAt(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="StringBuffer-字符串缓冲区"><a href="#StringBuffer-字符串缓冲区" class="headerlink" title="StringBuffer    字符串缓冲区"></a>StringBuffer    字符串缓冲区</h3><p>非线程安全，不能同步访问</p><h3 id="StringBuilder-字符串缓冲区"><a href="#StringBuilder-字符串缓冲区" class="headerlink" title="StringBuilder    字符串缓冲区"></a>StringBuilder    字符串缓冲区</h3><h4 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line">    Scanner s=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span> a=s.nextInt();</span><br></pre></td></tr></table></figure><h4 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line">Random r=<span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">r.nextInt(<span class="number">10</span>);<span class="comment">//0-9</span></span><br></pre></td></tr></table></figure><h4 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h4><p>字符串替换,把什么替换成什么</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">&quot;112233&quot;</span>;</span><br><span class="line">String b=a.replace(<span class="string">&quot;2233&quot;</span>,<span class="string">&quot;1111&quot;</span>);</span><br><span class="line"><span class="comment">//把第一个遇到的字符替换成指定字符</span></span><br><span class="line">String c.replaceFirst(<span class="string">&quot;2233&quot;</span>,<span class="string">&quot;1111&quot;</span>);</span><br><span class="line"><span class="comment">//替换全部的符合要求的字符为指定字符</span></span><br><span class="line">String d.replaceAll(<span class="string">&quot;2233&quot;</span>,<span class="string">&quot;1111&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="splist"><a href="#splist" class="headerlink" title="splist"></a>splist</h4><p>分割字符串，分割特定格式的字符串存入数组中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">&quot;aaa|bbb|ccc&quot;</span>;</span><br><span class="line"><span class="comment">//特殊字符如*|^需要用//来转义</span></span><br><span class="line">Sring[] b=a.splist(<span class="string">&quot;\\|&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h4><p>查找字符串中字符的位置，不存在返回-1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">&quot;aabbcc&quot;</span>;</span><br><span class="line">a.indexOf(<span class="string">&quot;bb&quot;</span>);</span><br><span class="line">a.indexOf(<span class="string">&quot;bb&quot;</span>,<span class="number">3</span>); <span class="comment">//添加起始位置</span></span><br><span class="line">a.indexOf(<span class="number">65</span>); <span class="comment">//查找A位置</span></span><br></pre></td></tr></table></figure><p>JDK9开始String的底层从<code>char[ ]</code>改变为<code>byte[ ]</code></p><p>元空间/方法池/常量池/字符串常量池</p><h4 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Math.abs(-<span class="number">6</span>);</span><br><span class="line">Math.ceil(<span class="number">6.6</span>); <span class="comment">//有小数无论多少，取整数+1</span></span><br><span class="line">Math.floor(<span class="number">6.6</span>); <span class="comment">//有小数无论多少，取整</span></span><br><span class="line">Math.round(<span class="number">6.6</span>); <span class="comment">//四舍五入</span></span><br></pre></td></tr></table></figure><h4 id="System"><a href="#System" class="headerlink" title="System"></a>System</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.exit(<span class="number">0</span>);<span class="comment">//退出java虚拟机 0为正常退出，非0为异常退出</span></span><br><span class="line">System.currentTimeMillis();<span class="comment">//返回系统当前时间，毫秒为单位</span></span><br></pre></td></tr></table></figure><h4 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Arrays.sort(arr);<span class="comment">//数组排序</span></span><br><span class="line">Arrays.toString(arr);<span class="comment">//数组转换字符串</span></span><br></pre></td></tr></table></figure><h4 id="包装类-1"><a href="#包装类-1" class="headerlink" title="包装类"></a>包装类</h4><p>对基本数据类型的包装</p><img src="/posts/8df0ec14/image-20240527173115949.png" class="" title="image-20240527173115949"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer i=Integer.valueOf(<span class="number">55</span>);</span><br><span class="line">Integer i=Integer.valueOf(<span class="string">&quot;55&quot;</span>);<span class="comment">//字符串转换为int</span></span><br><span class="line"><span class="type">int</span> ii=Integer.parseInt(str)<span class="comment">//字符串转换为int</span></span><br></pre></td></tr></table></figure><p>int,long,double,char,blloean 转换为字符串类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str=String.valueOf(aa)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串转换成int数组</span></span><br><span class="line">String str=<span class="string">&quot;16,18,32,57&quot;</span>;</span><br><span class="line">String[] arr=str.split(,);</span><br><span class="line"><span class="type">int</span>[] iarr=<span class="keyword">new</span> <span class="title class_">int</span>[arr.lenth];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;arr.lenth;i++)</span><br><span class="line">&#123;</span><br><span class="line">    iarr[i]=Integer.parseInt(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">Array.sort(iarr);</span><br></pre></td></tr></table></figure><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Date date=<span class="keyword">new</span> <span class="title class_">date</span>();</span><br><span class="line">date.getTime();<span class="comment">//获取时间戳</span></span><br><span class="line">SimpleDateFormat s=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>();</span><br><span class="line">s.format(date);</span><br><span class="line">SimpleDateFormat s=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy年MM月dd日HH小时mm分钟ss秒&quot;</span>);</span><br><span class="line">s.format(date);</span><br></pre></td></tr></table></figure><h4 id="Calendar日历-抽象类"><a href="#Calendar日历-抽象类" class="headerlink" title="Calendar日历(抽象类)"></a>Calendar日历(抽象类)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Calendar a=Calendar.getInstance();</span><br><span class="line"><span class="type">int</span> year=a.get(Calendar.YEAR);</span><br><span class="line"><span class="type">int</span> month=a.get(Calendar.MONTH)+<span class="number">1</span>;<span class="comment">//月份从0开始需要加一</span></span><br><span class="line"><span class="type">int</span> date=a.get(Calendar.DATE);</span><br><span class="line">c.add(Calendar.YEAR,-<span class="number">10</span>);<span class="comment">//修改年</span></span><br><span class="line">c.add(Calendar.MONTH,<span class="number">5</span>);<span class="comment">//修改月</span></span><br><span class="line">c.set(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>);<span class="comment">//修改时间</span></span><br></pre></td></tr></table></figure><p>通过Calendar查询二月份多少天</p><img src="/posts/8df0ec14/image-20240527185633421.png" class="" title="image-20240527185633421"><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><img src="/posts/8df0ec14/image-20240915160108226.png" class="" title="image-20240915160108226"><p> (1)  所有的异常类都直接或间接地继承于java.lang.Throwable类，在Throwable类有几个非常 重要的方法:<br>String getMessage():获得发生异常的详细消息。<br>void printStackTrace():打印异常堆栈跟踪信息。<br>String toString():获得异常对象的描述。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e.printStackTrace();//输出详细异常信息</span><br><span class="line">e.getMessage();</span><br><span class="line">e.toString();</span><br></pre></td></tr></table></figure><p>（2）Error和Exception<br>从图可见，Throwable有两个直接子类:Error和Exception。</p><p>Error Error：是程序无法恢复的严重错误，程序员根本无能为力，只能让程序终止。例如:JVM内部错误、内存溢出和资源耗尽等严重情况。<br>Exception：是程序可以恢复的异常，它是程序员所能掌控的。例如:除零异常、空指针访问、网 络连接中断和读取不存在的文件等。本章所讨论的异常处理就是对Exception及其子类的异常处理。<br>（3）受检查异常和运行时异常<br>从图可见，Exception类可以分为:受检查异常和运行时异常。</p><p>受检查异常：受检查异常是除RuntimeException以外的异常类。它们的共同特点是:编译器会 检查这类异常是否进行了处理，即要么捕获(try-catch语句)，要么不抛出(通过在方法后声明 throws)，否则会发生编译错误。它们种类很多，前面遇到过的日期解析异常ParseException。<br>运行时异常：运行时异常是继承RuntimeException类的直接或间接子类。运行时异常往往是程序员所犯错误导 致的，健壮的程序不应该发生运行时异常。它们的共同特点是:编译器不检查这类异常是否进 行了处理，也就是对于这类异常不捕获也不抛出，程序也可以编译通过。由于没有进行异常处理，一旦运行时异常发生就会导致程序的终止，这是用户不希望看到的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用final，来抛出详细错误</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">final</span> Exception e)&#123;</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//throws</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginExcepton</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoginException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        Scanner s=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    String u=s.nextLine();</span><br><span class="line">   <span class="keyword">try</span>&#123;</span><br><span class="line">            a(u);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(LoginExcepton e)&#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">(u)</span> <span class="keyword">throws</span> LoginExcepton&#123; <span class="comment">//向上抛出异常</span></span><br><span class="line">        <span class="keyword">if</span>(!(<span class="string">&quot;11&quot;</span>.equals(u)))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LoginExcepton</span>(<span class="string">&quot;错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Collection</span><br><span class="line">List</span><br><span class="line">ArrayList</span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240528160938944.png" class="" title="image-20240528160938944"><h4 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Collection&lt;String&gt; collection=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">Iterator&lt;String&gt; iterator=collection.iterator;</span><br><span class="line">iterator.next();<span class="comment">//调用集合中的第一个元素</span></span><br><span class="line"><span class="comment">//每次iterator.next();都会调用一个元素。即有一个计数器</span></span><br><span class="line">iterator.hashNext();<span class="comment">//返回一个布尔，判断是否可以取出元素，可以取出返回true</span></span><br><span class="line"><span class="comment">//用法</span></span><br><span class="line"><span class="keyword">if</span>(iterator.hashNext())&#123;</span><br><span class="line">    iterator.next();</span><br><span class="line">&#125;</span><br><span class="line">ArrayList&lt;String&gt; arrayList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">ListIterator&lt;String&gt; listIterator=arrayList.listIterator;</span><br><span class="line">listIterator.next();<span class="comment">//从头开始取一个元素</span></span><br><span class="line">listIterator.previous();</span><br></pre></td></tr></table></figure><h4 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">foreach(<span class="type">int</span>  a:arr)&#123;</span><br><span class="line">    system.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">ArrayList&lt;String&gt; arrayList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">foreach(String  str:arrayList)&#123;</span><br><span class="line">    system.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">ctrl+alt+v 类型</span><br><span class="line"><span class="comment">//泛型接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">itest</span>&lt;G&gt;&#123;</span><br><span class="line">G <span class="title function_">show</span><span class="params">(G g)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tess</span>&lt;G&gt; <span class="keyword">implements</span> <span class="title class_">itest</span>&lt;G&gt;&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> G <span class="title function_">show</span><span class="params">(G o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">    </span><br><span class="line"><span class="comment">//泛型类-&gt;在new的时候给定数据类型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&lt;T&gt; &#123;</span><br><span class="line"><span class="keyword">private</span> T t;</span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getT</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setT</span><span class="params">(T t)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.t = t;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//泛型方法-&gt;按照传递的值的数据类型</span></span><br><span class="line">    <span class="keyword">public</span> &lt;M&gt; M <span class="title function_">a</span><span class="params">(M m)</span>&#123;</span><br><span class="line">        retrun m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Test&lt;String&gt; test= <span class="keyword">new</span> <span class="title class_">Test</span>&lt;String&gt;();</span><br><span class="line">        String c= test.getT();</span><br><span class="line">        test.a(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对于集合中的泛型？代表可以添加任意类型。但是只能用于接受值。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(ArrayList&lt;?&gt; list)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Test test= <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">        ArrayList&lt;String&gt; slist = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//字符串集合</span></span><br><span class="line">        ArrayList&lt;Integer&gt; ilist = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//int集合</span></span><br><span class="line">        test.m(slist);</span><br><span class="line">        test.m(ilist);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上限extends  接收本类和子类</span></span><br><span class="line"><span class="comment">//下限super 接收本类和父类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>&#123;</span><br><span class="line">    <span class="comment">//接收本类和子类</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title function_">show</span><span class="params">(List&lt;? extends A&gt; list)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">D</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;A&gt; aList=<span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;A&gt;();<span class="comment">//父</span></span><br><span class="line">        List&lt;B&gt; bList=<span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;B&gt;();<span class="comment">//子</span></span><br><span class="line">        <span class="type">C</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line">        c.show(aList);<span class="comment">//接收父</span></span><br><span class="line">        c.show(bList);<span class="comment">//接收子</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">E</span>&#123;</span><br><span class="line">    <span class="comment">//...a 本质是一个a数组，可以传递多个参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">(<span class="type">int</span> ...a)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.lenth;i++)&#123;</span><br><span class="line">            a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">E</span>();</span><br><span class="line">        <span class="comment">//传递不同数量参数</span></span><br><span class="line">        e.a(<span class="number">1</span>);</span><br><span class="line">        e.a(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        e.a(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可变参数后面不可以有其他参数,如果有其他参数，加在可变参数前面</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">(<span class="type">int</span> b,<span class="type">int</span> ...a)</span>&#123;</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//采用Arrays无法添加和删除参数</span></span><br><span class="line"> List&lt;String&gt; list= Arrays.asList(<span class="string">&quot;rfg&quot;</span>,<span class="string">&quot;dfd&quot;</span>,<span class="string">&quot;dfds&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; arrayList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">Vector&lt;String&gt; strings=<span class="keyword">new</span> <span class="title class_">Vector</span>&lt;String&gt;();</span><br><span class="line">ArrayList与Vector集合的区别</span><br><span class="line">相同</span><br><span class="line">初始容量相同为<span class="number">10</span></span><br><span class="line">底层都是基于数组实现</span><br><span class="line">同样继承自List</span><br><span class="line">不同</span><br><span class="line">ArrayList 线程集合不安全，Vector 线程集合安全</span><br><span class="line">ArrayList 集合每次扩容是原来的一点五倍，Vector 每次扩容是原来的两倍</span><br><span class="line">Vector 可以设置扩容的容量</span><br><span class="line">ArrayList 懒加载形式初始化，Vector 构造函数初始化</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">双向链表集合</span><br><span class="line">LinkedList&lt;&gt; linkedList=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br></pre></td></tr></table></figure><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><p>Map接口-&gt;HashMap LiskedHashMap</p><p>HashMap无序的    </p><p>LiskedHashMap有序的</p><p>key value</p><p>key唯一 </p><p>Map集合 散列存储</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,String&gt; hashMap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">hashMap.put(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240707225329614.png" class="" title="image-20240707225329614"><img src="/posts/8df0ec14/image-20240707231106756.png" class="" title="image-20240707231106756"><p>HashMap -&gt;HashSet</p><p>HashSet集合实现了Set集合，基于HashMap 集合实现</p><p>元素不允许重复(用的是HashMap中的key),可以为null</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HashSet&lt;String&gt; hashSet=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">hashSet.put(<span class="string">&quot;a&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="遍历-HashMap"><a href="#遍历-HashMap" class="headerlink" title="遍历  HashMap"></a>遍历  HashMap</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;String&gt; hashMap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">hashMap.put(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">hashMap.put(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">方法一</span><br><span class="line">Set&lt;String&gt; keys=hashMap.keySet();</span><br><span class="line"><span class="keyword">for</span>(String key:keys)&#123;</span><br><span class="line">System.out.printin(key+<span class="string">&quot;,&quot;</span>+hashSet.get(key));</span><br><span class="line">&#125;</span><br><span class="line">方法二</span><br><span class="line">Set&lt;Map.Entry&lt;String,String&gt;&gt; set=hashMap.entrySet();</span><br><span class="line"> <span class="keyword">for</span>(Map.Entry&lt;String,String&gt; entry:set)&#123;</span><br><span class="line">     System.out.printin(entry.getKey()+<span class="string">&quot;,&quot;</span>+entry.getValue());</span><br><span class="line"> &#125;</span><br><span class="line">方式三</span><br><span class="line">Set&lt;Map.Entry&lt;String,String&gt;&gt; set=hashMap.entrySet();  </span><br><span class="line"><span class="comment">//使用迭代器</span></span><br></pre></td></tr></table></figure><p>对于去重，hashset基于hashmap集合实现，map集合去重使用equals方法，基础的equals方法比较的是内存地址。所以需要重新equals方法，而重写了equals方法就一定要重写hashcode方法。String类底层源码就实现了equals方法的重写。</p><h3 id="读写文件-——-IO流"><a href="#读写文件-——-IO流" class="headerlink" title="读写文件 ——- IO流"></a>读写文件 ——- IO流</h3><h4 id="File"><a href="#File" class="headerlink" title="File"></a>File</h4><p>构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  java.io.File;</span><br><span class="line">File file=<span class="keyword">new</span> <span class="title class_">File</span>();</span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240708111645713.png" class="" title="image-20240708111645713"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File file=new File();</span><br><span class="line">System.out.printin(file.createNewFile());</span><br></pre></td></tr></table></figure><p>文件/文件夹创建方法</p><img src="/posts/8df0ec14/image-20240708112452789.png" class="" title="image-20240708112452789"><p>判断方法</p><img src="/posts/8df0ec14/image-20240708112601973.png" class="" title="image-20240708112601973"><img src="/posts/8df0ec14/image-20240708113035975.png" class="" title="image-20240708113035975"><img src="/posts/8df0ec14/image-20240708113947942.png" class="" title="image-20240708113947942"><h4 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h4><p>字节流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream file=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line">file.write(<span class="number">97</span>);</span><br><span class="line"><span class="type">byte</span>[] a=&#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>&#125;;</span><br><span class="line">file.write(a);</span><br><span class="line">String str=<span class="string">&quot;ssdfe&quot;</span>;</span><br><span class="line">file.write(str.getBytes());</span><br><span class="line"><span class="comment">//第二个传递true，代表追加数据</span></span><br><span class="line">FileOutputStream file=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;a.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240708115116590.png" class="" title="image-20240708115116590"><img src="/posts/8df0ec14/image-20240708120005261.png" class="" title="image-20240708120005261"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream file=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;FD.TXT&quot;</span>);</span><br><span class="line">file.read();<span class="comment">//读取单个字符，结束为-1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240708122652773.png" class="" title="image-20240708122652773"><img src="/posts/8df0ec14/image-20240708123008621.png" class="" title="image-20240708123008621"><p>缓冲区</p><p>大小：8192字节=8kb=1024*8</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写入</span></span><br><span class="line">FileOutputStream file=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;FD.TXT&quot;</span>);</span><br><span class="line">BufferedOutputStream a=<span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(file);</span><br><span class="line">String str=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line">a.write(str.toByte());</span><br><span class="line">file.close();</span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line">FileInputStream file=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;FD.TXT&quot;</span>);</span><br><span class="line">BufferedInputStream a=<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(file);</span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="type">byte</span>[] bytes=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span>((len=a.read(bytes))!=-<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.printf(<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240708130237154.png" class="" title="image-20240708130237154"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len,<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><p>字符流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写入</span></span><br><span class="line">OutputStreamWrite str=<span class="keyword">new</span> <span class="title class_">OutputSteamWrite</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;a.txt&quot;</span>));</span><br><span class="line">str.write(<span class="string">&quot;aaabbb&quot;</span>);</span><br><span class="line">str.close();</span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line">InputStreamWrite str=<span class="keyword">new</span> <span class="title class_">InputStreamWrite</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;a.txt&quot;</span>));</span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="type">byte</span>[] bytes=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span>((len=str.read(bytes))!=-<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.printf(<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len));</span><br><span class="line">&#125;</span><br><span class="line">str.close();</span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240708134049402.png" class="" title="image-20240708134049402"><img src="/posts/8df0ec14/image-20240708134101643.png" class="" title="image-20240708134101643"><p>字节流读取-&gt;字符流-&gt;</p><p>FileOutputStream -&gt;OutputStreamWrite-&gt;FileReader</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileReader file1=<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line">FileWrite file2=<span class="keyword">new</span> <span class="title class_">FileWrite</span>(<span class="string">&quot;a.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p>字符缓存流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BufferedWriter buff2=<span class="keyword">new</span> <span class="title class_">BufferedWrite</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;a.txt&quot;</span>));</span><br><span class="line">BufferedReader buff2=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;a.txt&quot;</span>));</span><br></pre></td></tr></table></figure><p>换行</p><img src="/posts/8df0ec14/image-20240708135905743.png" class="" title="image-20240708135905743"><h3 id="函数接口"><a href="#函数接口" class="headerlink" title="函数接口"></a>函数接口</h3><p>使用<code>@FunctionaInterface</code>标识</p><p>仅有一个抽象方法，但是可以有多个非抽象方法的接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TestIngerface</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数接口的实现有3种</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用通过类的继承实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test0</span> <span class="keyword">implements</span> <span class="title class_">TestIngerface</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是实现类方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Test0 test0=<span class="keyword">new</span> <span class="title class_">Test0</span>();</span><br><span class="line">        test0.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用匿名内部类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestIngerface testIngerface=<span class="keyword">new</span> <span class="title class_">TestIngerface</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span> <span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        testIngerface.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用lambda 表达式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestIngerface testIngerface= () -&gt; System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        testIngerface.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内置的函数接口</p><ul><li><strong>Consumer</strong>（消费者）：接收一个输入参数并且不返回任何结果的操作。</li><li><strong>Supplier</strong>（供应者）：提供一个输出结果而不接受任何输入参数的操作。</li><li><strong>Function</strong>（函数）：接收一个输入参数，返回一个结果。</li><li><strong>Predicate</strong>（断言）：接收一个输入参数，返回一个布尔值结果。</li></ul><h3 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h3><p>匿名内部类在类和接口中起到简化代码的作用。省去创建子类和实现类的过程。当一个接口或抽象类不想单独定义一个类时，可以使用匿名内部类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对于类</span></span><br><span class="line"><span class="keyword">public</span><span class="keyword">class</span> <span class="title class_">Test02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">Method</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Test01</span> <span class="variable">test01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test01</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Method</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        test01.testMethod();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对于接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Method</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">default</span> <span class="keyword">void</span> <span class="title function_">Method2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is Method2&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">//可以有默认方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Method3</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is Method3&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">//可以有静态方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Test02</span> <span class="variable">test02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test02</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Method</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        test02.testMethod();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="lambda-表达式"><a href="#lambda-表达式" class="headerlink" title="lambda 表达式"></a>lambda 表达式</h3><p>函数式接口可以被隐式转换为 lambda 表达式。</p><p>也就是lambda 表达式用来简化匿名内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匿名内部类</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"><span class="comment">//lambda 表达式</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(</span><br><span class="line">    ()-&gt;&#123;...&#125;</span><br><span class="line">).start();</span><br></pre></td></tr></table></figure><h3 id="方法引入"><a href="#方法引入" class="headerlink" title="方法引入"></a>方法引入</h3><h3 id="Optional"><a href="#Optional" class="headerlink" title="Optional"></a>Optional</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Optional.empty()： 创建一个空的 Optional 实例</span><br><span class="line"></span><br><span class="line">Optional.of(T t)：创建一个 Optional 实例，当 t为null时抛出异常      </span><br><span class="line"></span><br><span class="line">Optional.ofNullable(T t)：创建一个 Optional 实例，但当 t为null时不会抛出异常，而是返回一个空的实例</span><br></pre></td></tr></table></figure><h4 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get()：获取optional实例中的对象，当optional 容器为空时报错</span><br></pre></td></tr></table></figure><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">isPresent()：判断optional是否为空，如果空则返回false，否则返回true</span><br><span class="line"></span><br><span class="line">ifPresent(Consumer c)：如果optional不为空，则将optional中的对象传给Comsumer函数</span><br><span class="line"></span><br><span class="line">orElse(T other)：如果optional不为空，则返回optional中的对象；如果为null，则返回 other 这个默认值</span><br><span class="line"></span><br><span class="line">orElseGet(Supplier&lt;T&gt; other)：如果optional不为空，则返回optional中的对象；如果为null，则使用Supplier函数生成默认值other</span><br><span class="line"></span><br><span class="line">orElseThrow(Supplier&lt;X&gt; exception)：如果optional不为空，则返回optional中的对象；如果为null，则抛出Supplier函数生成的异常</span><br></pre></td></tr></table></figure><h4 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter(Predicate&lt;T&gt; p)：如果optional不为空，则执行断言函数p，如果p的结果为true，则返回原本的optional，否则返回空的optional  </span><br></pre></td></tr></table></figure><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">map(Function&lt;T, U&gt; mapper)：如果optional不为空，则将optional中的对象 t 映射成另外一个对象 u，并将 u 存放到一个新的optional容器中。</span><br><span class="line"></span><br><span class="line">flatMap(Function&lt; T,Optional&lt;U&gt;&gt; mapper)：跟上面一样，在optional不为空的情况下，将对象t映射成另外一个optional</span><br></pre></td></tr></table></figure><p>区别：map会自动将u放到optional中，而flatMap则需要手动给u创建一个optional</p><p>原文链接：<a href="https://blog.csdn.net/luckykapok918/article/details/106239526">https://blog.csdn.net/luckykapok918/article/details/106239526</a></p><h3 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h3><p>对传统数据集合处理的一种简化。可以用来遍历集合，过滤，排序</p><p>串行流//单线程 Stream</p><p>并行流//多 parallelStream</p><p>Stream List转换Map集合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% asset_img image-20240714144555804.png image-20240714144555804 %&#125;</span><br><span class="line"></span><br><span class="line">中间操作 : 每次返回一个新的流，可以有多个。</span><br><span class="line"></span><br><span class="line">（筛选filter、映射map、排序sorted、去重组合skip—limit）</span><br><span class="line"></span><br><span class="line">终端操作 : 每个流只能进行一次终端操作，终端操作结束后流无法再次使用。终端操作会产生一个新的集合或值。</span><br><span class="line"></span><br><span class="line">（遍历foreach、匹配find–match、规约reduce、聚合max–min–count、收集collect）</span><br><span class="line">```java</span><br><span class="line">//筛选 filter</span><br><span class="line">//函数接口</span><br><span class="line"> list.stream().filter(new Predicate&lt;Student&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public boolean test(Student student) &#123;</span><br><span class="line">                return student.getAge()&gt;=15&amp;&amp;student.getAge()&lt;=18;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;).forEach(System.out::println);</span><br><span class="line">//lamda表达式形式</span><br><span class="line">list.stream().filter(i-&gt;i.getAge()&gt;=15).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">//取最大 max</span><br><span class="line">//函数接口</span><br><span class="line"> list.stream().max(new Comparator&lt;Student&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public int compare(Student o1, Student o2) &#123;</span><br><span class="line">                return o1.getAge()-o2.getAge();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).ifPresent(System.out::println);</span><br><span class="line">//函数接口</span><br><span class="line"> list.stream().max((o1, o2) -&gt; o1.getAge()-o2.getAge()).ifPresent(System.out::println);</span><br><span class="line">//方法引入</span><br><span class="line">list.stream().max(Comparator.comparingInt(Student::getAge)).ifPresent(System.out::println);</span><br><span class="line"></span><br><span class="line">//min</span><br><span class="line"> list.stream().min(Comparator.comparingInt(Student::getAge)).ifPresent(System.out::println);</span><br><span class="line"></span><br><span class="line">//count</span><br><span class="line"> long count= list.stream().count();</span><br><span class="line"></span><br><span class="line">//映射（map、flatMap）</span><br><span class="line">  list.stream().map(new Function&lt;Student, Object&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Object apply(Student student) &#123;</span><br><span class="line">                student.setAge(student.getAge()+1);</span><br><span class="line">                return student;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">//lamda表达式形式</span><br><span class="line"> list.stream().map(student -&gt; &#123; </span><br><span class="line">            student.setAge(student.getAge()+1);</span><br><span class="line">            return student;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">//规约（reduce）</span><br><span class="line">//收集（collect）</span><br><span class="line">//归集（toList、toSet、toMap）</span><br><span class="line">//统计（count、averaging）</span><br><span class="line">//分组（partitioningBy、groupingBy）</span><br><span class="line">//接合（joining）</span><br><span class="line">//规约（reducing）</span><br><span class="line">//排序（sorted）</span><br><span class="line">//去重、合并（distinct、skip、limit）</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_43410878/article/details/123716629">【java基础】吐血总结Stream流操作_java stream流操作-CSDN博客</a></p><h3 id="多线程-Thread"><a href="#多线程-Thread" class="headerlink" title="多线程     Thread"></a>多线程     Thread</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thread.sheep(<span class="number">5000</span>);<span class="comment">//线程休眠</span></span><br></pre></td></tr></table></figure><img src="/posts/8df0ec14/image-20240710140122926.png" class="" title="image-20240710140122926"><p>创建线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过继承Thread</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello from Thread01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Main</span>().start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过继承Runnable</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Hello from ThreadRunnable&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Main</span>()).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过匿名内部类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过lamba表达式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; System.out.println(<span class="string">&quot;Hello World&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Callable / Future</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线程池</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="并发-异步-多线程"><a href="#并发-异步-多线程" class="headerlink" title="并发/异步/多线程"></a>并发/异步/多线程</h3><blockquote><p>并发（Concurrency）： 并发是指在同一时间段内，多个任务或者多个操作同时处于运行状态。在单核CPU系统中，实际上CPU会在极短的时间内切换执行多个任务，给人感觉像是多个任务同时进行。而在多核CPU系统中，确实可以同时执行多个任务。并发的核心思想是让计算机系统充分利用资源，提高执行效率。</p><p>多线程（Multi-Threading）： 多线程是实现并发的一种手段。在一个进程中，如果有两个或以上的执行线程同时运行，我们称之为多线程。每个线程都有自己的程序计数器、栈空间以及局部变量等资源，可以独立执行任务，但多个线程共享相同的堆内存区域。在Java中，可以通过Thread类或者Runnable接口创建线程，从而实现并发处理。</p><p>异步（Asynchronous）： 异步指的是任务之间不互相阻塞等待，当一个任务执行完毕不依赖其他任务时，就可以立即返回结果，而不需要等待整个流程完成。在Java中，异步编程通常通过回调、Future和CompletableFuture、ExecutorService等方式实现，也可以结合Reactor、RxJava等响应式编程库。异步编程的目标是提高系统的响应速度和吞吐量，避免长时间的阻塞等待。</p><p>原文链接：<a href="https://blog.csdn.net/damoluomu/article/details/136566089">https://blog.csdn.net/damoluomu/article/details/136566089</a></p></blockquote><h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。<br>要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象</p><p><a href="https://blog.csdn.net/sinat_38259539/article/details/71799078">Java基础之—反射（非常重要）-CSDN博客</a></p><h3 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h3><p>1</p><h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><p>1</p><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><p>1</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Linux</title>
      <link href="/posts/4465ef4c/"/>
      <url>/posts/4465ef4c/</url>
      
        <content type="html"><![CDATA[<h2 id="开源许可证（开源许可协议）"><a href="#开源许可证（开源许可协议）" class="headerlink" title="开源许可证（开源许可协议）"></a>开源许可证（开源许可协议）</h2><p>GNU，LGPL，BSD，Apache，MIT，MPL</p><blockquote><p>GCC编译器，bash解释器，</p></blockquote><h2 id="Linux系统版本"><a href="#Linux系统版本" class="headerlink" title="Linux系统版本"></a>Linux系统版本</h2><h3 id="Linux系统版本-1"><a href="#Linux系统版本-1" class="headerlink" title="Linux系统版本"></a>Linux系统版本</h3><p>红帽企业版Linux(yum,dnf工具安装软件)</p><p>CentOS(社区企业操作系统)</p><p>Fedora(测试新功能，带桌面)</p><p>Debian(apt工具安装和红帽公司产品差异)</p><p>Ubuntu(桌面版)</p><p>openSUSE</p><p>Kali(带攻击性，数据鉴识，渗透测试)</p><p>Gentoo(随意自定义化，Portage工具)</p><p>深度操作系统（Deepin）：国产</p><h3 id="Linux内核版本号"><a href="#Linux内核版本号" class="headerlink" title="Linux内核版本号"></a>Linux内核版本号</h3><img src="/posts/4465ef4c/image-20240513152516946.png" class="" title="image-20240513152516946"><h2 id="字符界面命令提示符号"><a href="#字符界面命令提示符号" class="headerlink" title="字符界面命令提示符号"></a>字符界面命令提示符号</h2><img src="/posts/4465ef4c/image-20240513152912263.png" class="" title="image-20240513152912263"><h2 id="关机-重启"><a href="#关机-重启" class="headerlink" title="关机/重启"></a>关机/重启</h2><img src="/posts/4465ef4c/image-20240513153005620.png" class="" title="image-20240513153005620"><h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><h3 id="X-Window图形化界面"><a href="#X-Window图形化界面" class="headerlink" title="X Window图形化界面"></a>X Window图形化界面</h3><h3 id="GNOME桌面环境"><a href="#GNOME桌面环境" class="headerlink" title="GNOME桌面环境"></a>GNOME桌面环境</h3><img src="/posts/4465ef4c/image-20240513153529443.png" class="" title="image-20240513153529443"><h3 id="Nautilus文件管理器"><a href="#Nautilus文件管理器" class="headerlink" title="Nautilus文件管理器"></a>Nautilus文件管理器</h3><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><img src="/posts/4465ef4c/image-20240513153634603.png" class="" title="image-20240513153634603"><h3 id="Cockpit管理"><a href="#Cockpit管理" class="headerlink" title="Cockpit管理"></a>Cockpit管理</h3><p>Cockpit：一款强大的Linux图形化监控工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --new cockpit.socket</span><br></pre></td></tr></table></figure><h2 id="目录编辑命令"><a href="#目录编辑命令" class="headerlink" title="目录编辑命令"></a>目录编辑命令</h2><h3 id="mkdir-创建新目录"><a href="#mkdir-创建新目录" class="headerlink" title="mkdir 创建新目录"></a>mkdir 创建新目录</h3><p>-p 创建多级目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> 名称</span><br><span class="line"><span class="built_in">mkdir</span> -p 名称</span><br></pre></td></tr></table></figure><h3 id="rmdir-删除目录"><a href="#rmdir-删除目录" class="headerlink" title="rmdir 删除目录"></a>rmdir 删除目录</h3><p>-p 递归删除目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rmdir</span> 名称</span><br><span class="line"><span class="built_in">rmdir</span> -p 名称</span><br></pre></td></tr></table></figure><h3 id="cd-改变工作目录"><a href="#cd-改变工作目录" class="headerlink" title="cd 改变工作目录"></a>cd 改变工作目录</h3><p>相对目录：从当前目录开始</p><p>绝对目录：从根目录开始 /</p><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><p>查看当前目录</p><h3 id="ls-查看目录内容"><a href="#ls-查看目录内容" class="headerlink" title="ls 查看目录内容"></a>ls 查看目录内容</h3><p>-l 显示详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br><span class="line">ll</span><br></pre></td></tr></table></figure><h2 id="文件内容操作命令"><a href="#文件内容操作命令" class="headerlink" title="文件内容操作命令"></a>文件内容操作命令</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p>cat 查看文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> 文件名</span><br></pre></td></tr></table></figure><p>cat 新建文件,ctrl+D保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span>&gt;文件名</span><br></pre></td></tr></table></figure><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p>分屏显示文件的内容</p><h3 id="head-显示文件前几行内容"><a href="#head-显示文件前几行内容" class="headerlink" title="head 显示文件前几行内容"></a>head 显示文件前几行内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">head</span> -行数 文件名称</span><br></pre></td></tr></table></figure><h3 id="tail-显示文件尾部几行内容"><a href="#tail-显示文件尾部几行内容" class="headerlink" title="tail 显示文件尾部几行内容"></a>tail 显示文件尾部几行内容</h3><p>+n 从第几行开始显示</p><p>-n 从文件尾n行开始显示</p><p>省略n，默认为10</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> 文件名称</span><br></pre></td></tr></table></figure><h3 id="grep-查找显示包含指定字符串的行"><a href="#grep-查找显示包含指定字符串的行" class="headerlink" title="grep 查找显示包含指定字符串的行"></a>grep 查找显示包含指定字符串的行</h3><img src="/posts/4465ef4c/image-20240513155937680.png" class="" title="image-20240513155937680"><h3 id="统计字节数，字数，行数"><a href="#统计字节数，字数，行数" class="headerlink" title="统计字节数，字数，行数"></a>统计字节数，字数，行数</h3><img src="/posts/4465ef4c/image-20240513160016145.png" class="" title="image-20240513160016145"><h2 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h2><h3 id="touch-新建空文件"><a href="#touch-新建空文件" class="headerlink" title="touch 新建空文件"></a>touch 新建空文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> 文件名称</span><br></pre></td></tr></table></figure><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><img src="/posts/4465ef4c/image-20240513160140633.png" class="" title="image-20240513160140633"><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><img src="/posts/4465ef4c/image-20240513160151404.png" class="" title="image-20240513160151404"><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><img src="/posts/4465ef4c/image-20240513160356934.png" class="" title="image-20240513160356934"><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><img src="/posts/4465ef4c/image-20240513160223627.png" class="" title="image-20240513160223627"><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?<span class="comment">#匹配单个字符</span></span><br><span class="line">*<span class="comment">#匹配任意数量的字符（不能与点开头的文件匹配）</span></span><br><span class="line">[]<span class="comment">#可以匹配括号中的字符或字符范围</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> f?</span><br><span class="line"><span class="built_in">ls</span> f*</span><br><span class="line"><span class="built_in">ls</span> [amf]??<span class="comment">#查询a/m/f开头的三个字符的所有文件</span></span><br><span class="line"><span class="built_in">ls</span> [a-c]*<span class="comment">#查询a-c开头的所有文件</span></span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><img src="/posts/4465ef4c/image-20240513162030006.png" class="" title="image-20240513162030006"><img src="/posts/4465ef4c/image-20240513162049096.png" class="" title="image-20240513162049096"><img src="/posts/4465ef4c/image-20240513162102425.png" class="" title="image-20240513162102425"><img src="/posts/4465ef4c/image-20240513162124324.png" class="" title="image-20240513162124324"><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><img src="/posts/4465ef4c/image-20240513162207207.png" class="" title="image-20240513162207207"><img src="/posts/4465ef4c/image-20240513162220657.png" class="" title="image-20240513162220657"><img src="/posts/4465ef4c/image-20240513162233008.png" class="" title="image-20240513162233008"><img src="/posts/4465ef4c/image-20240513162244527.png" class="" title="image-20240513162244527"><img src="/posts/4465ef4c/image-20240513162258780.png" class="" title="image-20240513162258780"><img src="/posts/4465ef4c/image-20240513162323237.png" class="" title="image-20240513162323237"><h2 id="shell-脚本"><a href="#shell-脚本" class="headerlink" title="shell 脚本"></a>shell 脚本</h2><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><img src="/posts/4465ef4c/image-20240513162419069.png" class="" title="image-20240513162419069"><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><img src="/posts/4465ef4c/image-20240513162520004.png" class="" title="image-20240513162520004"><h2 id="用户和组"><a href="#用户和组" class="headerlink" title="用户和组"></a>用户和组</h2><img src="/posts/4465ef4c/image-20240516115122010.png" class="" title="image-20240516115122010"><img src="/posts/4465ef4c/image-20240516114206107.png" class="" title="image-20240516114206107"><h3 id="用户账号文件"><a href="#用户账号文件" class="headerlink" title="用户账号文件"></a>用户账号文件</h3><img src="/posts/4465ef4c/image-20240516114232094.png" class="" title="image-20240516114232094"><img src="/posts/4465ef4c/image-20240516114311881.png" class="" title="image-20240516114311881"><h3 id="用户密码文件"><a href="#用户密码文件" class="headerlink" title="用户密码文件"></a>用户密码文件</h3><img src="/posts/4465ef4c/image-20240516114417884.png" class="" title="image-20240516114417884"><h3 id="组账号文件"><a href="#组账号文件" class="headerlink" title="组账号文件"></a>组账号文件</h3><img src="/posts/4465ef4c/image-20240516114446313.png" class="" title="image-20240516114446313"><h3 id="用户的添加和删除"><a href="#用户的添加和删除" class="headerlink" title="用户的添加和删除"></a>用户的添加和删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd 用户名<span class="comment">#添加用户</span></span><br><span class="line">passwd 用户名<span class="comment">#用户密码</span></span><br><span class="line">usermod 用户名<span class="comment">#编辑用户账号属性</span></span><br><span class="line">userdel 用户名<span class="comment">#删除用户</span></span><br></pre></td></tr></table></figure><h3 id="组管理命令"><a href="#组管理命令" class="headerlink" title="组管理命令"></a>组管理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd 组账号名 <span class="comment">#添加组账号</span></span><br><span class="line">gpasswd 组账号名<span class="comment">#组成员管理</span></span><br><span class="line">groupdel 组账号名<span class="comment">#删除组账号</span></span><br></pre></td></tr></table></figure><h3 id="用户和组查询"><a href="#用户和组查询" class="headerlink" title="用户和组查询"></a>用户和组查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> 用户名<span class="comment">#查询用户身份标识</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询登录到主机的用户信息</span></span><br><span class="line"><span class="built_in">users</span> </span><br><span class="line">w</span><br><span class="line"><span class="built_in">who</span></span><br></pre></td></tr></table></figure><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><img src="/posts/4465ef4c/image-20240516121527475.png" class="" title="image-20240516121527475"><h3 id="文件权限查询"><a href="#文件权限查询" class="headerlink" title="文件权限查询"></a>文件权限查询</h3><img src="/posts/4465ef4c/image-20240516115451643.png" class="" title="image-20240516115451643"><div class="table-container"><table><thead><tr><th>文件类型</th><th>所有者权限</th><th>组用户权限</th><th>其他用户权限</th><th>普通文件：链接数/目录文件：第一级子目录数</th><th>用户名</th><th>组名</th><th>文件大小（字节）</th><th>最后修改时间</th><th>文件名称</th></tr></thead><tbody><tr><td>d</td><td>r-x</td><td>r-x</td><td>r-x.</td><td>2</td><td>root</td><td>root</td><td>36864</td><td>Aug 9 19:37</td><td>bin</td></tr><tr><td>d</td><td>rwx</td><td>r-x</td><td>r-x.</td><td>2</td><td>root</td><td>root</td><td>4096</td><td>Jun 28 20:11</td><td>etc</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">文件类型</span><br><span class="line">-普通文件</span><br><span class="line">d目录文件</span><br><span class="line">p管理文件</span><br><span class="line">l链接文件</span><br><span class="line">b块设备文件</span><br><span class="line">c字符设备文件</span><br><span class="line">s套接字文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件权限</span><br><span class="line">r4读权限</span><br><span class="line">w2写权限</span><br><span class="line">x1可执行权限</span><br><span class="line">-0无权限</span><br></pre></td></tr></table></figure><h3 id="数字表示"><a href="#数字表示" class="headerlink" title="数字表示"></a>数字表示</h3><p>通过4、2、1的组合：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">54+1读取+执行</span><br><span class="line">64+2读取+写入</span><br><span class="line">74+2+1读取+写入+执行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数字分别对应User、Group、及Other的权限。</span><br><span class="line">以 755 为例：</span><br><span class="line">所有者    rwx，具有读取、写入、执行权限</span><br><span class="line">同组用户r-x，具有读取、执行权限但没有写入权限</span><br><span class="line">其他用户r-x，具有读取、执行权限但没有写入权限</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">常用的linux文件权限：</span><br><span class="line">444 r–r–r–</span><br><span class="line">600 rw——-</span><br><span class="line">644 rw-r–r–</span><br><span class="line">666 rw-rw-rw-</span><br><span class="line">700 rwx——</span><br><span class="line">744 rwxr–r–</span><br><span class="line">755 rwxr-xr-x</span><br><span class="line">777 rwxrwxrwx</span><br></pre></td></tr></table></figure><p>chmod a=rwx file<br>和<br>chmod 777 file<br>效果相同<br>chmod ug=rwx,o=x file<br>和<br>chmod 771 file<br>效果相同</p><h3 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> 用户名 文件/目录名称</span><br><span class="line"><span class="built_in">chown</span> 用户名:组 文件/目录名</span><br><span class="line"><span class="built_in">chown</span> :组 文件/目录名</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> [ugoa] [+-=] [rwn] 文件/目录 -R</span><br><span class="line">u属主</span><br><span class="line">g属组</span><br><span class="line">o其他用户</span><br><span class="line">a所有用户</span><br><span class="line">+增加</span><br><span class="line">-去除</span><br><span class="line">=设置权限</span><br><span class="line">-R递归修改目录下的所有文件和子目录的权限</span><br></pre></td></tr></table></figure><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>rpm软件包</p><div class="table-container"><table><thead><tr><th>yum软件仓库命令</th><th>用处</th></tr></thead><tbody><tr><td>yum repolist all</td><td>列出所有仓库</td></tr><tr><td>yum list all</td><td>列出仓库中所有软件包</td></tr><tr><td>yum info 软件包名称</td><td>查看软件包信息</td></tr><tr><td>yum install 软件包名称</td><td>安装软件包</td></tr><tr><td>yum reinstall 软件包名称</td><td>重新安装软件包</td></tr><tr><td>yum update 软件包名称</td><td>升级软件包</td></tr><tr><td>yum remove  软件包名称</td><td>协助软件包</td></tr><tr><td>yum clean all</td><td>清楚所有仓库缓存</td></tr><tr><td>yum check-update</td><td>检测可更新软件包</td></tr><tr><td>yum grouplist</td><td>查看系统中已经安装的软件包组</td></tr><tr><td>yum groupinstall 软件包组</td><td>安装指定的软件包组</td></tr><tr><td>yum groupremove 软件包组</td><td>移除指定的软件包组</td></tr><tr><td>yum groupinfo 软件包组</td><td>查询指定的软件包组信息</td></tr></tbody></table></div><p>DNF是yum升级，命令和yum一致，在红帽8中才有</p><h2 id="管理服务"><a href="#管理服务" class="headerlink" title="管理服务"></a>管理服务</h2><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td>systemctl start httpd</td><td>启动服务</td></tr><tr><td>systemctl restart httpd</td><td>重启服务</td></tr><tr><td>systemctl stop httpd</td><td>停止服务</td></tr><tr><td>systemctl reload httpd</td><td>重新加载配置文件（不终止服务）</td></tr><tr><td>systemctl status httpd</td><td>查看服务状态</td></tr><tr><td>systemctl enable httpd</td><td>开机自动启动</td></tr><tr><td>systemctl disable httpd</td><td>开机不自动启动</td></tr><tr><td>systemctl is-enable httpd</td><td>查看特定服务是否为开机启动</td></tr><tr><td>systemctl list-unit-files—type=httpd</td><td>查看各个级别下服务的启动与禁用情况</td></tr></tbody></table></div><h2 id="shell是终端程序的统称"><a href="#shell是终端程序的统称" class="headerlink" title="shell是终端程序的统称"></a>shell是终端程序的统称</h2><p>bash解释器</p><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td>ctrl+c</td><td>终止进程的运行</td></tr><tr><td>ctrl+d</td><td>键盘输入结束</td></tr><tr><td>ctrl+l</td><td>清屏</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td>echo 字符串      echo $变量名称</td><td>提取字符串的值或者变量的值在终端输出</td></tr><tr><td>date</td><td>查看系统时间</td></tr><tr><td>timedatectl status</td><td>显示系统时区状态信息</td></tr><tr><td>timedatectl  list-timezones</td><td>列出已知时区</td></tr><tr><td>timedatectl set-time</td><td>设置系统时间(后面加日期 2020-05-18)（后面加时间9：30）</td></tr><tr><td>timedatectl set-timezone</td><td>设置生效时区（后面加时区 Asia/Shanghai）</td></tr><tr><td>reboot</td><td>重启系统</td></tr><tr><td>poweroff</td><td>关闭系统（shutdown）</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>wget</th><th>下载网络文件</th></tr></thead><tbody><tr><td>wget -b</td><td>后台下载模式</td></tr><tr><td>wget -P</td><td>下载在指定目录</td></tr><tr><td>wget -t</td><td>最大尝试次数</td></tr><tr><td>wget -c</td><td>断点续传</td></tr><tr><td>wget -p</td><td>下载页面所有资源，包括图片视频等</td></tr><tr><td>wget -r</td><td>递归下载</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>ps</th><th></th></tr></thead><tbody><tr><td>ps -a</td><td>显示所有进程(包括其他用户的进程)</td></tr><tr><td>ps -u</td><td>用户以及其他详细信息</td></tr><tr><td>ps -x</td><td>显示没有控制终端的进程</td></tr><tr><td>pstree</td><td>用树状图显示进程关系</td></tr></tbody></table></div><p>Linux进程的五种状态：运行，中断，不可中断，僵死，停止</p><h3 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h3><img src="/posts/4465ef4c/image-20240326171057439.png" class="" title="image-20240326171057439"><p>第一行</p><div class="table-container"><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>01:10:41</td><td>系统时间</td></tr><tr><td>up 10min</td><td>系统运行时间，格式为时：分</td></tr><tr><td>2 user</td><td>登录终端数</td></tr><tr><td>load average: 0.00, 0.00, 0.00</td><td>系统负载，即任务队列的平均长度。 三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值 （数值越小意味负载越低）</td></tr></tbody></table></div><p>第二行</p><div class="table-container"><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>Tasks: 283 total</td><td>进程总数</td></tr><tr><td>1 running</td><td>运行的进程数</td></tr><tr><td>282 sleeping</td><td>睡眠的进程数</td></tr><tr><td>0 stopped</td><td>停止的进程数</td></tr><tr><td>0 zombie</td><td>僵死进程数</td></tr></tbody></table></div><p>第三行</p><div class="table-container"><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>0.1%us</td><td>用户空间占用CPU百分比</td></tr><tr><td>0.2%sy</td><td>内核空间占用CPU百分比</td></tr><tr><td>0.0%ni</td><td>用户进程空间内改变过优先级的进程占用CPU百分比</td></tr><tr><td>99.8%id</td><td>空闲CPU百分比</td></tr><tr><td>0.0%wa</td><td>等待输入输出的CPU时间百分比</td></tr><tr><td>0.0%hi</td><td>硬中断（Hardware IRQ）占用CPU的百分比</td></tr><tr><td>0.0%si</td><td>软中断（Software Interrupts）占用CPU的百分比</td></tr><tr><td>0.0 st</td><td>用于有虚拟cpu的情况，用来指示被虚拟机偷掉的cpu时间</td></tr></tbody></table></div><p>第四行</p><div class="table-container"><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>1922488k total</td><td>物理内存总量</td></tr><tr><td>406936k used</td><td>使用的物理内存总量</td></tr><tr><td>1515552k free</td><td>空闲内存总量</td></tr><tr><td>11940k buffers</td><td>用作内核缓存的内存量</td></tr></tbody></table></div><p>第五行</p><div class="table-container"><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>835576k total</td><td>交换区总量</td></tr><tr><td>0k used</td><td>使用的交换区总量</td></tr><tr><td>835576k free</td><td>空闲交换区总量</td></tr><tr><td>111596k cached</td><td>缓冲的交换区总量</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th><strong>列名</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>PID</td><td>进程id</td></tr><tr><td>USER</td><td>进程所有者的用户名</td></tr><tr><td>PR</td><td>优先级</td></tr><tr><td>NI</td><td>nice值。负值表示高优先级，正值表示低优先级</td></tr><tr><td>VIRT</td><td>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</td></tr><tr><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</td></tr><tr><td>SHR</td><td>共享内存大小，单位kb</td></tr><tr><td>S</td><td>进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</td></tr><tr><td>%CPU</td><td>上次更新到现在的CPU时间占用百分比</td></tr><tr><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>TIME+</td><td>进程使用的CPU时间总计，单位1/100秒</td></tr><tr><td>COMMAND</td><td>命令名/命令行</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>nice -n -20 bash</td><td>调整优先级（-20~19）</td></tr><tr><td>pidof sshd</td><td>查看服务进程的PID号码（进程号码PID唯一)</td></tr><tr><td>kill 2156</td><td>终止进程</td></tr><tr><td>kill -9 2156</td><td>最高级别杀死进程</td></tr><tr><td>killall httpd</td><td>杀死某个服务的所有进程</td></tr><tr><td>ifconfig</td><td>获取网卡配置与网络状态等信息</td></tr><tr><td>uname -a</td><td>查看系统内核版本与系统架构等信息</td></tr><tr><td>uptime</td><td>查看系统时间，运行时间，终端数量，平均负载</td></tr><tr><td>free / free -h</td><td>查看系统内存使用量</td></tr><tr><td>who</td><td>当前登录主机的用户终端信息</td></tr><tr><td>last</td><td>主机被访记录</td></tr><tr><td>ping 111.111.111.111</td><td>测试主机之间网络连通性</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>ping</th><th></th></tr></thead><tbody><tr><td>-c</td><td>总共发送次数</td></tr><tr><td>-l</td><td>指定网卡名称</td></tr><tr><td>-I</td><td>每次间隔时间（秒）</td></tr><tr><td>-W</td><td>最长等待时间（秒）</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx使用</title>
      <link href="/posts/f12661fd/"/>
      <url>/posts/f12661fd/</url>
      
        <content type="html"><![CDATA[<img src="/posts/f12661fd/image-20240327172308389.png" class="" title="image-20240327172308389"><img src="/posts/f12661fd/image-20240327174823949.png" class="" title="image-20240327174823949"><h2 id="本机域名解析"><a href="#本机域名解析" class="headerlink" title="本机域名解析"></a>本机域名解析</h2><img src="/posts/f12661fd/image-20240327175300598.png" class="" title="image-20240327175300598"><p>域名泛解析指的是：*.域名.com</p><h2 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h2><p>（提供人不同）</p><img src="/posts/f12661fd/image-20240327195519231.png" class="" title="image-20240327195519231"><p>erp crm crs  QPS 并发量</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><img src="/posts/f12661fd/image-20240327202102895.png" class="" title="image-20240327202102895"><p>服务器集群（一模一样的服务器）</p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><img src="/posts/f12661fd/image-20240327204909198.png" class="" title="image-20240327204909198"><p>负载均衡轮询</p><img src="/posts/f12661fd/image-20240327205531778.png" class="" title="image-20240327205531778"><p>权重值</p><h2 id="进程目录"><a href="#进程目录" class="headerlink" title="进程目录"></a>进程目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">配置所在目录：</span><br><span class="line"><span class="built_in">cd</span> /etc/nginx/</span><br><span class="line">执行目录：</span><br><span class="line"><span class="built_in">cd</span> /usr/sbin/nginx</span><br><span class="line">模块所在目录：</span><br><span class="line"><span class="built_in">cd</span> /usr/lib64/nginx/modules</span><br><span class="line">默认站点目录：</span><br><span class="line"><span class="built_in">cd</span> /usr/share/nginx/html</span><br><span class="line">日志目录</span><br><span class="line"><span class="built_in">cd</span> var/log/nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">#运行用户</span><br><span class="line">user www-data;    </span><br><span class="line">#启动进程,通常设置成和cpu的数量相等</span><br><span class="line">worker_processes  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">#全局错误日志及PID文件</span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">#工作模式及连接数上限</span><br><span class="line">events &#123;</span><br><span class="line">    use   epoll;             #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.<span class="number">6</span>以上内核,可以大大提高nginx的性能</span><br><span class="line">    worker_connections  <span class="number">1024</span>;#单个后台worker process进程的最大并发链接数</span><br><span class="line">    # multi_accept on; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span><br><span class="line">http &#123;</span><br><span class="line">     #设定mime类型,类型由mime.<span class="built_in">type</span>文件定义</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    #设定日志格式</span><br><span class="line">    access_log    /var/log/nginx/access.log;</span><br><span class="line"></span><br><span class="line">    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero <span class="built_in">copy</span> 方式）来输出文件，对于普通应用，</span><br><span class="line">    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #连接超时时间</span><br><span class="line">    #keepalive_timeout  <span class="number">0</span>;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line">    tcp_nodelay        on;</span><br><span class="line">    </span><br><span class="line">    #开启gzip压缩</span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_disable &quot;MSIE [<span class="number">1</span>-<span class="number">6</span>]\.(?!.*SV1)&quot;;</span><br><span class="line"></span><br><span class="line">    #设定请求缓冲</span><br><span class="line">    client_header_buffer_size    <span class="number">1</span>k;</span><br><span class="line">    large_client_header_buffers  <span class="number">4</span> <span class="number">4</span>k;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">    #设定负载均衡的服务器列表</span><br><span class="line">     upstream mysvr &#123;</span><br><span class="line">        #weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">        #本机上的Squid开启<span class="number">3128</span>端口</span><br><span class="line">        server <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">1</span>:<span class="number">3128</span> weight=<span class="number">5</span>;</span><br><span class="line">        server <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">2</span>:<span class="number">80</span>  weight=<span class="number">1</span>;</span><br><span class="line">        server <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">3</span>:<span class="number">80</span>  weight=<span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   server &#123;</span><br><span class="line">       #监听<span class="number">80</span>端口</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        #定义使用www.javaqf.com访问</span><br><span class="line">        server_name  www.javaqf.com;</span><br><span class="line"></span><br><span class="line">        #设定本虚拟主机的访问日志</span><br><span class="line">        access_log  logs/www.javaqf.com.access.log  main;</span><br><span class="line"></span><br><span class="line">    #默认请求</span><br><span class="line">    location / &#123;</span><br><span class="line">          root   /root;      #定义服务器的默认网站根目录位置</span><br><span class="line">          index index.php index.html index.htm;   #定义首页索引文件的名称</span><br><span class="line"></span><br><span class="line">          fastcgi_pass  www.javaqf.com;</span><br><span class="line">         fastcgi_param  SCRIPT_FILENAME  $document_root/$fastcgi_script_name; </span><br><span class="line">          include /etc/nginx/fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    # 定义错误提示页面</span><br><span class="line">    error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;  </span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        root   /root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #静态文件，nginx自己处理</span><br><span class="line">    location ~ ^/(images|javascript|js|css|flash|media|static)/ &#123;</span><br><span class="line">        root /var/www/virtual/htdocs;</span><br><span class="line">        #过期<span class="number">30</span>天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span><br><span class="line">        expires <span class="number">30</span>d;</span><br><span class="line">    &#125;</span><br><span class="line">    #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /root;</span><br><span class="line">        fastcgi_pass <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span>;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    #设定查看Nginx状态的地址</span><br><span class="line">    location /NginxStatus &#123;</span><br><span class="line">        stub_status            on;</span><br><span class="line">        access_log              on;</span><br><span class="line">        auth_basic              &quot;NginxStatus&quot;;</span><br><span class="line">        auth_basic_user_file  conf/htpasswd;</span><br><span class="line">    &#125;</span><br><span class="line">    #禁止访问 .htxxx 文件</span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">For</span> <span class="built_in">more</span> information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">#进程数</span><br><span class="line">worker_processes auto;</span><br><span class="line">#错误日志</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">#pid号</span><br><span class="line">pid /var/log/nginx/nginx.pid;</span><br><span class="line"></span><br><span class="line">#引用其他配置文件</span><br><span class="line"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">#进程的最大线程数</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">#数据<span class="number">0</span>拷贝（ngnix不读取文件直接给到系统发送）</span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    # 保持连接超时时间</span><br><span class="line">    keepalive_timeout   <span class="number">65</span>;</span><br><span class="line">    types_hash_max_size <span class="number">4096</span>;</span><br><span class="line"></span><br><span class="line">#引用配置文件（请求头类型解析文件）</span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    #默认类型采用</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # <span class="keyword">for</span> <span class="built_in">more</span> information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">#虚拟主机 vhost</span><br><span class="line">    server &#123;</span><br><span class="line">    #监听端口号</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        listen       [::]:<span class="number">80</span>;</span><br><span class="line">        # 域名或者主机名</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        # Load configuration files <span class="keyword">for</span> the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        error_page <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">        #域名之后的地址</span><br><span class="line">        location = /<span class="number">404</span>.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">#服务器错误转向 /<span class="number">50</span>x.html</span><br><span class="line">        error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line">        #当用户访问/<span class="number">50</span>x.html指向</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># Settings <span class="keyword">for</span> a TLS enabled server.</span><br><span class="line">#</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen       <span class="number">443</span> ssl http2;</span><br><span class="line">#        listen       [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">#        server_name  _;</span><br><span class="line">#        root         /usr/share/nginx/html;</span><br><span class="line">#</span><br><span class="line">#        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">#        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">#        ssl_session_cache shared:SSL:<span class="number">1</span>m;</span><br><span class="line">#        ssl_session_timeout  <span class="number">10</span>m;</span><br><span class="line">#        ssl_ciphers HIGH:<span class="variable">!aNULL:!</span>MD5;</span><br><span class="line">#        ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#        # Load configuration files <span class="keyword">for</span> the default server block.</span><br><span class="line">#        include /etc/nginx/default.d/*.conf;</span><br><span class="line">#</span><br><span class="line">#        error_page <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">#            location = /<span class="number">40</span>x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line">#            location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ssl证书申请</title>
      <link href="/posts/961da81e/"/>
      <url>/posts/961da81e/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 网站加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssl </tag>
            
            <tag> xtl </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJs</title>
      <link href="/posts/a0c2c342/"/>
      <url>/posts/a0c2c342/</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>JavaScript运行时</p><img src="/posts/a0c2c342/image-20240130171210747.png" class="" title="image-20240130171210747"><h2 id="fs-模块-读写文件"><a href="#fs-模块-读写文件" class="headerlink" title="fs 模块-读写文件"></a>fs 模块-读写文件</h2><h3 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//写入</span></span></span><br><span class="line"><span class="language-javascript">    fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;文件路径&#x27;</span>,<span class="string">&#x27;写入内容&#x27;</span>,<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//读取</span></span></span><br><span class="line"><span class="language-javascript">     fs.<span class="title function_">readFile</span>(<span class="string">&#x27;文件路径&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>())</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="path-模块-路径模块"><a href="#path-模块-路径模块" class="headerlink" title="path 模块-路径模块"></a>path 模块-路径模块</h2><h2 id="http-模块-创建web服务"><a href="#http-模块-创建web服务" class="headerlink" title="http 模块-创建web服务"></a>http 模块-创建web服务</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScriptDOM</title>
      <link href="/posts/47c4bf12/"/>
      <url>/posts/47c4bf12/</url>
      
        <content type="html"><![CDATA[<h2 id="数组和对象尽量用const"><a href="#数组和对象尽量用const" class="headerlink" title="数组和对象尽量用const"></a>数组和对象尽量用const</h2><blockquote><p>对于引用对象如，</p><p>数组对象增加和删除是可以定义为const类型的</p><p>但是不能给他一个新值，</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const a=[1,2,3]</span><br><span class="line">a.pop()</span><br></pre></td></tr></table></figure><h2 id="获取DOM对象"><a href="#获取DOM对象" class="headerlink" title="获取DOM对象"></a>获取DOM对象</h2><p>匹配第一个 HTMLElement 对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>) <span class="comment">//获取第一个匹配的元素对象</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.a&#x27;</span>) <span class="comment">//class选择器</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//选择方式和CSS相同</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div.a&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul li&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>匹配所以的 HTMLElement 对象,返回Nodelist对象的伪数组（没有pop()等方法）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取修改元素内容"><a href="#获取修改元素内容" class="headerlink" title="获取修改元素内容"></a>获取修改元素内容</h2><h3 id="innerText-可以获取和修改，但是不解析标签-显示纯文本内容"><a href="#innerText-可以获取和修改，但是不解析标签-显示纯文本内容" class="headerlink" title="innerText 可以获取和修改，但是不解析标签,显示纯文本内容"></a>innerText 可以获取和修改，但是不解析标签,显示纯文本内容</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">innerText</span>) <span class="comment">//获取元素内容</span></span></span><br><span class="line"><span class="language-javascript">   a.<span class="property">innerText</span>=<span class="string">&#x27;111&#x27;</span> <span class="comment">//修改文字内容</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="innerHTML-可以获取和修改，可以解析标签"><a href="#innerHTML-可以获取和修改，可以解析标签" class="headerlink" title="innerHTML 可以获取和修改，可以解析标签"></a>innerHTML 可以获取和修改，可以解析标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">innerHTML</span>) <span class="comment">//获取元素内容</span></span></span><br><span class="line"><span class="language-javascript">   a.<span class="property">innerHTML</span>=<span class="string">&#x27;&lt;h1&gt;111&lt;/h1&gt;&#x27;</span> <span class="comment">//修改文字内容,可以实现h1效果</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="操作元素属性"><a href="#操作元素属性" class="headerlink" title="操作元素属性"></a>操作元素属性</h2><blockquote><p>对象.属性=值</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./aaa&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>) <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">src</span>=<span class="string">&#x27;./bbb&#x27;</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">title</span>=<span class="string">&#x27;fdfe&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="操作元素样式"><a href="#操作元素样式" class="headerlink" title="操作元素样式"></a>操作元素样式</h2><blockquote><p>对象.style.属性名=值</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        heitht:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>) <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">style</span>.<span class="property">width</span>=<span class="string">&#x27;300px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">style</span>.<span class="property">backgroundColor</span>=<span class="string">&#x27;blue&#x27;</span> <span class="comment">//有连接符的用驼峰命名</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过className操作样式"><a href="#通过className操作样式" class="headerlink" title="通过className操作样式"></a>通过className操作样式</h3><blockquote><p>对象.className=’样式’</p><p><strong>会覆盖之前的所有样式</strong>，不想覆盖的话加上原样式+新样式</p><p> a.className=’原来的样式 新样式’  //把样式给元素</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        heitht:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>) <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">className</span>=<span class="string">&#x27;box&#x27;</span>  <span class="comment">//把样式给元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过classList操作样式"><a href="#通过classList操作样式" class="headerlink" title="*通过classList操作样式"></a>*通过classList操作样式</h3><h4 id="追加样式"><a href="#追加样式" class="headerlink" title="追加样式"></a>追加样式</h4><h4 id="删除样式"><a href="#删除样式" class="headerlink" title="删除样式"></a>删除样式</h4><h4 id="切换样式-没有加上，有去除"><a href="#切换样式-没有加上，有去除" class="headerlink" title="切换样式(没有加上，有去除)"></a>切换样式(没有加上，有去除)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        heitht:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        closr:red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>) <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)  <span class="comment">//追加样式</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)  <span class="comment">//删除样式</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;active&#x27;</span>)  <span class="comment">//切换样式(没有加上，有去除)</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="查找样式"><a href="#查找样式" class="headerlink" title="查找样式"></a>查找样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> a= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>) <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">         a.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;active&#x27;</span>)  <span class="comment">//查找是否有active</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="运用伪类选择器选择指定元素"><a href="#运用伪类选择器选择指定元素" class="headerlink" title="*运用伪类选择器选择指定元素"></a>*运用伪类选择器选择指定元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> li=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.类名 li:nth-child(3)`</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> li=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.类名 li:nth-child(<span class="subst">$&#123;i&#125;</span>)`</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="操作表单元素属性"><a href="#操作表单元素属性" class="headerlink" title="操作表单元素属性"></a>操作表单元素属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;12122&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> uname=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(uname.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">          uname.<span class="property">value</span>=<span class="string">&#x27;54968&#x27;</span>  <span class="comment">//修改值</span></span></span><br><span class="line"><span class="language-javascript">          uname.<span class="property">type</span>=<span class="string">&#x27;password&#x27;</span> <span class="comment">//修改类型</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改是否复选框选中"><a href="#修改是否复选框选中" class="headerlink" title="修改是否复选框选中"></a>修改是否复选框选中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> ipt=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">checked</span>)  <span class="comment">//输出true</span></span></span><br><span class="line"><span class="language-javascript">          ipt.<span class="property">checked</span>=<span class="literal">false</span> <span class="comment">//修改为不选中</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="button-是否可以点击"><a href="#button-是否可以点击" class="headerlink" title="button 是否可以点击"></a>button 是否可以点击</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>   <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">disabled</span>)  <span class="comment">//输出false,默认不禁用</span></span></span><br><span class="line"><span class="language-javascript">          btn.<span class="property">disabled</span>=<span class="literal">true</span> <span class="comment">//是否禁用为是</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h3><blockquote><p>data-   开头</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-spm</span>=<span class="string">&quot;dfe&quot;</span>&gt;</span>   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;2&quot;</span>&gt;</span>   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>) <span class="comment">//获取自定义属性集合</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>.<span class="property">id</span>) <span class="comment">//获取自定义属性为id的</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><h3 id="间歇函数（每隔多少秒执行一次）"><a href="#间歇函数（每隔多少秒执行一次）" class="headerlink" title="间歇函数（每隔多少秒执行一次）"></a>间歇函数（每隔多少秒执行一次）</h3><p>开启定时器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;一秒一次&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//setInterval(函数,间隔时间)</span></span></span><br><span class="line"><span class="language-javascript">     <span class="built_in">setInterval</span>(ab,<span class="number">1000</span>) <span class="comment">//自动调用，写函数名字，不加括号</span></span></span><br><span class="line"><span class="language-javascript">     <span class="built_in">setInterval</span>(<span class="string">&#x27;ab()&#x27;</span>,<span class="number">1000</span>) <span class="comment">//这样写可以加括号</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关闭定时器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> n= <span class="built_in">setInterval</span>(ab,<span class="number">1000</span>) <span class="comment">//获取定时器编号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">clearInterval</span>(n)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// clearInterval(编号)</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件监听-addEventListener"><a href="#事件监听-addEventListener" class="headerlink" title="事件监听     addEventListener"></a>事件监听     addEventListener</h2><p>新版本采用    .addEventListener</p><p>旧版本采用    .onclick</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>   <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              </span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//元素对象.addEventListener(&#x27;事件类型&#x27;,要执行的函数)</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>   <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//事件源.on事件=function()&#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">     a.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         </span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">鼠标事件</span><br><span class="line">click 点击</span><br><span class="line">mouseenter 鼠标经过</span><br><span class="line">mouseleave 鼠标离开</span><br><span class="line">表单获得光标 焦点事件</span><br><span class="line">focus 获得焦点</span><br><span class="line">blur  失去焦点</span><br><span class="line">键盘事件</span><br><span class="line">Keydown 键盘按下触发</span><br><span class="line">Keyup 键盘抬起触发</span><br><span class="line">文本事件</span><br><span class="line">input 用户输入事件</span><br></pre></td></tr></table></figure><h3 id="trim-方法-去除左右两侧空格"><a href="#trim-方法-去除左右两侧空格" class="headerlink" title="trim() 方法 去除左右两侧空格"></a>trim() 方法 去除左右两侧空格</h3><blockquote><p>str.trim()</p></blockquote><h2 id="事件对象-event-e"><a href="#事件对象-event-e" class="headerlink" title="事件对象     event / e"></a>事件对象     event / e</h2><blockquote><p>存储事件信息</p><p>元素.addEventListener(‘事件’，function(e))</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">tpyt</span>=<span class="string">&#x27;text&#x27;</span>&gt;</span>   <span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> i=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//e可以获取事件对象</span></span></span><br><span class="line"><span class="language-javascript">          i.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              e.<span class="property">clientX</span> <span class="comment">//鼠标位置</span></span></span><br><span class="line"><span class="language-javascript">              e.<span class="property">clientY</span></span></span><br><span class="line"><span class="language-javascript">              e.<span class="property">key</span>  <span class="comment">//获取用户按下的键盘值</span></span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/posts/47c4bf12/image-20240118143642199.png" class="" title="image-20240118143642199"><h2 id="环境对象-this"><a href="#环境对象-this" class="headerlink" title="环境对象     this"></a>环境对象     this</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>  <span class="comment">//普通函数指向windows</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">     btn.<span class="title function_">addEventListenter</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">this</span> <span class="comment">//谁调用，this指向谁</span></span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><blockquote><p>调用函数1的时候，函数1传递值调用函数2，函数2称为回调函数</p><p>fun1(fun2,1）</p></blockquote><h2 id="获取选中的复选框的数量-ck-checked"><a href="#获取选中的复选框的数量-ck-checked" class="headerlink" title="获取选中的复选框的数量   .ck:checked"></a>获取选中的复选框的数量   .ck:checked</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> a=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.ck:cheak&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p>捕获：从父级依次向下执行事件</p><blockquote><p>btn.addEventListenter(   ‘ 事件类型 ‘   ,  函数 ，是否捕获 ）</p><p>默认为false，设置为true捕获</p><p>btn.addEventListenter(   ‘ click ‘   ,  fun()，true）</p></blockquote><p> 冒泡：依次向上级调用父级的同名事件（默认会有冒泡存在）</p><h3 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> a=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">     a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         e.<span class="title function_">stopPropagation</span>()</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>事件对象.stopPropagation()  //阻止事件传播，取消冒泡</p></blockquote><h3 id="事件解绑"><a href="#事件解绑" class="headerlink" title="事件解绑"></a>事件解绑</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">     btn.<span class="property">onclick</span>=<span class="literal">null</span> <span class="comment">//解绑</span></span></span><br><span class="line"><span class="language-javascript">     btn.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fn) <span class="comment">//第二种解绑方法  //*匿名函数无法解绑</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标经过"><a href="#鼠标经过" class="headerlink" title="鼠标经过"></a>鼠标经过</h3><blockquote><p>mouseover      mouseout         //会有冒泡效果</p><p>mouseenter         mouseleave      //没有冒泡效果（推荐）</p></blockquote><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>通过给父级添加样式，来给子集实现效果</p><p>（冒泡原理，子集会找父级的方法）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> ul=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)  <span class="comment">//父级对象 ul</span></span></span><br><span class="line"><span class="language-javascript">     ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;  <span class="comment">//给父级对象添加点击事件</span></span></span><br><span class="line"><span class="language-javascript">     e.<span class="property">target</span> <span class="comment">//获取当前点击的对象（对象类型） li</span></span></span><br><span class="line"><span class="language-javascript">     e.<span class="property">target</span>.<span class="property">tagName</span>   <span class="comment">//获取当前点击的对象的名字（字符型）</span></span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="点击改变当前样式效果实现"><a href="#点击改变当前样式效果实现" class="headerlink" title="点击改变当前样式效果实现"></a>点击改变当前样式效果实现</h3><p>2个样式，通过移除和添加切换</p><p>先移全部的样式，再给点击的那个添加样式</p><h3 id="字符串转换数字"><a href="#字符串转换数字" class="headerlink" title="字符串转换数字"></a>字符串转换数字</h3><p>在字符串前面加+</p><img src="/posts/47c4bf12/image-20240118145514835.png" class="" title="image-20240118145514835"><h2 id="阻止事件-可以用来阻止button按钮提交表单"><a href="#阻止事件-可以用来阻止button按钮提交表单" class="headerlink" title="阻止事件(可以用来阻止button按钮提交表单)"></a>阻止事件(可以用来阻止button按钮提交表单)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> form=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>)  </span></span><br><span class="line"><span class="language-javascript">     form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         e.<span class="title function_">preventDefault</span>() <span class="comment">//阻止默认行为</span></span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>)  </span></span><br><span class="line"><span class="language-javascript">     a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         e.<span class="title function_">preventDefault</span>() <span class="comment">//阻止默认行为</span></span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="其他事件"><a href="#其他事件" class="headerlink" title="其他事件"></a>其他事件</h2><h3 id="页面加载事件-load"><a href="#页面加载事件-load" class="headerlink" title="页面加载事件  load"></a>页面加载事件  load</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//等待页面加载完成，在执行函数</span></span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//等图片加载完成，在执行函数</span></span></span><br><span class="line"><span class="language-javascript">    img.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//等待html文档加载完成,不需要等待图片和样式。</span></span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="元素滚动事件-scroll"><a href="#元素滚动事件-scroll" class="headerlink" title="元素滚动事件  scroll"></a>元素滚动事件  scroll</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>  <span class="comment">//获取减去的左侧像素（可读写）</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>   <span class="comment">//获取减去的上侧像素（可读写）</span></span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="返回页面顶部"><a href="#返回页面顶部" class="headerlink" title="返回页面顶部"></a>返回页面顶部</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> backTop=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">   backTop.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>=<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(x,y) <span class="comment">//滚动页面到指定位置</span></span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面尺寸变化事件（调整浏览器大小时）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  wndow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取元素宽高"><a href="#获取元素宽高" class="headerlink" title="获取元素宽高"></a>获取元素宽高</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//不包含边框，margin，滚动条等的宽高像素</span></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)  </span></span><br><span class="line"><span class="language-javascript">     div.<span class="property">clientWidth</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="property">clientHeight</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取自己到带有定位的父级的位置"><a href="#获取自己到带有定位的父级的位置" class="headerlink" title="获取自己到带有定位的父级的位置"></a>获取自己到带有定位的父级的位置</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获取自己对于父级的位置，只读属性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//包含宽高，padding，border的宽高像素</span></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)  </span></span><br><span class="line"><span class="language-javascript">     div.<span class="property">offsetWidth</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="property">offsetHeight</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="property">offsetTop</span> <span class="comment">//获取带有定位的父元素的上方位置</span></span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">offsetLeft</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//如果盒子隐藏，得到的是0</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="顶部滚动然后显示效果"><a href="#顶部滚动然后显示效果" class="headerlink" title="顶部滚动然后显示效果"></a>顶部滚动然后显示效果</h2><p>先设置top为负数，然后滚动到一定像素后，设置top为0</p><img src="/posts/47c4bf12/image-20240118152655315.png" class="" title="image-20240118152655315"><img src="/posts/47c4bf12/image-20240118152729033.png" class="" title="image-20240118152729033"><h3 id="获取视口尺寸-滚动会改变"><a href="#获取视口尺寸-滚动会改变" class="headerlink" title="获取视口尺寸 // 滚动会改变"></a>获取视口尺寸 // 滚动会改变</h3><img src="/posts/47c4bf12/image-20240118153228455.png" class="" title="image-20240118153228455"><h3 id="获取尺寸总结"><a href="#获取尺寸总结" class="headerlink" title="获取尺寸总结"></a>获取尺寸总结</h3><img src="/posts/47c4bf12/image-20240118153238940.png" class="" title="image-20240118153238940"><h2 id="页面滑动（滚动更丝滑）"><a href="#页面滑动（滚动更丝滑）" class="headerlink" title="页面滑动（滚动更丝滑）"></a>页面滑动（滚动更丝滑）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">        scroll-behavior:smooth;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="日期对象"><a href="#日期对象" class="headerlink" title="日期对象"></a>日期对象</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>() <span class="comment">//获取当前时间</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023-12-27 08:30:00&#x27;</span>) <span class="comment">//获取指定时间</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/posts/47c4bf12/image-20240118153401005.png" class="" title="image-20240118153401005"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>() <span class="comment">//获取当前时间</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>()  <span class="comment">//获取&#x27;2013/9/9 08:11:11 &#x27;这种类型的时间</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取时间戳"><a href="#获取时间戳" class="headerlink" title="获取时间戳"></a>获取时间戳</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>() <span class="comment">//获取当前时间</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获取时间戳的三种方法(秒数)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//第三种只能获得当前时间戳</span></span></span><br><span class="line"><span class="language-javascript">    date.<span class="title function_">getTime</span>() </span></span><br><span class="line"><span class="language-javascript">    +<span class="keyword">new</span> <span class="title class_">Date</span>()    </span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获取指定时间戳</span></span></span><br><span class="line"><span class="language-javascript">    date.<span class="title function_">getTime</span>(<span class="string">&#x27;2023-12-27 08:30:00&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">    +<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023-12-27 08:30:00&#x27;</span>)  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/posts/47c4bf12/image-20240118153732476.png" class="" title="image-20240118153732476"><h2 id="DOM-节点操作（通过关系查找节点）"><a href="#DOM-节点操作（通过关系查找节点）" class="headerlink" title="DOM 节点操作（通过关系查找节点）"></a>DOM 节点操作（通过关系查找节点）</h2><h3 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h3><h4 id="父节点"><a href="#父节点" class="headerlink" title="父节点"></a>父节点</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">     one.<span class="property">parentNode</span> <span class="comment">//返回父级对象</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="子节点"><a href="#子节点" class="headerlink" title="子节点"></a>子节点</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// one.childNodes //获取所以的子节点，包含文本节点（空格，换行），注释节点</span></span></span><br><span class="line"><span class="language-javascript">     one.<span class="property">children</span> <span class="comment">//获取子集的元素节点,返回的是伪数组，第一级别的亲孩子</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">     one.<span class="property">previousElementSibling</span> <span class="comment">//获取上一个的兄弟元素节点</span></span></span><br><span class="line"><span class="language-javascript">     one.<span class="property">nextElementSibling</span> <span class="comment">//获取下一个的兄弟元素节点</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="增加节点"><a href="#增加节点" class="headerlink" title="增加节点"></a>增加节点</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>)  <span class="comment">//创建节点</span></span></span><br><span class="line"><span class="language-javascript">     one.<span class="property">innerHTML</span>=<span class="string">&#x27;这是文本&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//插入到父元素的最后</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="title function_">appendChild</span>(one)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//插入到父元素的某个元素的前面</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="title function_">insertBefore</span>(放的元素，放在那个元素前面)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//插入到最前面的方法</span></span></span><br><span class="line"><span class="language-javascript">     div.<span class="title function_">insertBefore</span>(one,div.<span class="property">children</span>[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//如果为空（默认）或者False那么只克隆标签，不克隆后代节点包含文字等其他</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> c= div.<span class="title function_">cloneNode</span>(<span class="literal">true</span>)  <span class="comment">//克隆节点</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>父元素.removeChild(要删除的元素)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//必须通过父元素删除</span></span></span><br><span class="line"><span class="language-javascript">    div.<span class="title function_">removeChild</span>(div.<span class="property">children</span>[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="移动端事件"><a href="#移动端事件" class="headerlink" title="移动端事件"></a>移动端事件</h2><img src="/posts/47c4bf12/image-20240118153822969.png" class="" title="image-20240118153822969"><h2 id="JS插件"><a href="#JS插件" class="headerlink" title="JS插件"></a>JS插件</h2><h3 id="swiper-轮播图"><a href="#swiper-轮播图" class="headerlink" title="swiper     //轮播图"></a>swiper     //轮播图</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScriptDOM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX</title>
      <link href="/posts/a5556963/"/>
      <url>/posts/a5556963/</url>
      
        <content type="html"><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><h2 id="先引用axios"><a href="#先引用axios" class="headerlink" title="先引用axios"></a>先引用axios</h2><h2 id="axios基础语法"><a href="#axios基础语法" class="headerlink" title="axios基础语法"></a>axios基础语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//服务器返回的数据</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">parames</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            参数名:值</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//查询参数</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">parames</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            参数名:值,</span></span><br><span class="line"><span class="language-javascript">            参数名:值,</span></span><br><span class="line"><span class="language-javascript">            参数名:值</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">//参数名称与服务器端要求的名称同名</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">parames</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            参数名,</span></span><br><span class="line"><span class="language-javascript">            参数名,</span></span><br><span class="line"><span class="language-javascript">            参数名</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/posts/a5556963/image-20240118230935839.png" class="" title="image-20240118230935839"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,<span class="comment">//请求方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//提交数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            参数名:值,</span></span><br><span class="line"><span class="language-javascript">            参数名:值</span></span><br><span class="line"><span class="language-javascript">       &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;网址&#x27;</span>, <span class="comment">//请求方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>, <span class="comment">//提交数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            参数名,</span></span><br><span class="line"><span class="language-javascript">            参数名</span></span><br><span class="line"><span class="language-javascript">       &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        result.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//服务器返回数据</span></span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//错误信息</span></span></span><br><span class="line"><span class="language-javascript">        error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h2><img src="/posts/a5556963/image-20240118232523325.png" class="" title="image-20240118232523325"><img src="/posts/a5556963/image-20240118232618910.png" class="" title="image-20240118232618910"><h2 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h2><img src="/posts/a5556963/image-20240118232758582.png" class="" title="image-20240118232758582"><img src="/posts/a5556963/image-20240118232820308.png" class="" title="image-20240118232820308"><h2 id="form-serialize-插件"><a href="#form-serialize-插件" class="headerlink" title="form-serialize 插件"></a>form-serialize 插件</h2><p>快速获取表单的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;.t&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;./form-serialize.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> <span class="keyword">from</span>= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.t&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> data=<span class="title function_">serialize</span>(form,&#123;<span class="attr">hase</span>:<span class="literal">true</span>,<span class="attr">empty</span>:<span class="literal">true</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">             <span class="comment">//参数名为input的nama属性值</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//hash:设置获取数据结构 //ture为js对象，false为查询字符串(就是?后面那种格式)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//empty:设置是否获取空值 //ture:获取空值，false:不获取空值</span></span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Bootstrap-插件-弹窗"><a href="#Bootstrap-插件-弹窗" class="headerlink" title="Bootstrap 插件    弹窗"></a>Bootstrap 插件    弹窗</h2><h3 id="引入Bootstrap"><a href="#引入Bootstrap" class="headerlink" title="引入Bootstrap"></a>引入Bootstrap</h3><h2 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.upload&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>,<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> b=<span class="keyword">new</span>   <span class="title class_">FormData</span>()</span></span><br><span class="line"><span class="language-javascript">        b.<span class="title function_">append</span>(<span class="string">&#x27;img&#x27;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&#x27;html...&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:b</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            result.<span class="property">data</span>.<span class="property">data</span>.<span class="property">url</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>lable for 绑定其他的表单的id来关联，然后隐藏表单，点击lable来实现效果</p><h2 id="AJAX原理-XMLHttpRequest"><a href="#AJAX原理-XMLHttpRequest" class="headerlink" title="AJAX原理 - XMLHttpRequest"></a>AJAX原理 - XMLHttpRequest</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;请求网址&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//返回json字符串</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> data=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>) <span class="comment">//转换为js对象</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">     xhr.<span class="title function_">send</span>()<span class="comment">//发起请求</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XMLHttpRequest带参"><a href="#XMLHttpRequest带参" class="headerlink" title="XMLHttpRequest带参"></a>XMLHttpRequest带参</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> qObj=&#123;</span></span><br><span class="line"><span class="language-javascript">        pname,</span></span><br><span class="line"><span class="language-javascript">        cname</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//查询参数转换查询字符串 // 参数名=值&amp;参数名=值&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> parmsObj=<span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(qObj)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> queryString=parmsObj.<span class="title function_">toString</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//xhr.open(&#x27;GET&#x27;,&#x27;请求网址?参数名=值&amp;参数名=值&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">`http://hmajax.itheima.net/api/books?<span class="subst">$&#123;queryString&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//返回json字符串</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> data=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>) <span class="comment">//转换为js对象</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">send</span>()<span class="comment">//发起请求</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XMLHttpRequest数据提交"><a href="#XMLHttpRequest数据提交" class="headerlink" title="XMLHttpRequest数据提交"></a>XMLHttpRequest数据提交</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;请求网址&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">response</span>  <span class="comment">//返回json字符串</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//请求头</span></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//提交数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> userObj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;aaa&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">password</span>:<span class="string">&#x27;777&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> userStr=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(userObj)</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">send</span>(userStr)<span class="comment">//发起请求</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//成功调用then,失败调用catch</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> p=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//异步代码</span></span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript">   p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">   &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//Primise三种状态,一但状态敲定无法再改变</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//待定</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//已兑现resolve()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//已拒绝reject()</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Promise-XML-axios"><a href="#Promise-XML-axios" class="headerlink" title="Promise+XML=axios"></a>Promise+XML=axios</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> p=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">       xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;请求网址&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">       xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">if</span>(xhr.<span class="property">status</span>&gt;=<span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span>&lt;<span class="number">300</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span></span><br><span class="line"><span class="language-javascript">           &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span></span><br><span class="line"><span class="language-javascript">           &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">       xhr.<span class="title function_">send</span>()<span class="comment">//发起请求</span></span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">   &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="模拟封装axios"><a href="#模拟封装axios" class="headerlink" title="模拟封装axios"></a>模拟封装axios</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">myAxios</span>(<span class="params">config</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(config.<span class="property">params</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> paramsObj=<span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(config.<span class="property">params</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> queryString=paramsObj.<span class="title function_">toString</span>()</span></span><br><span class="line"><span class="language-javascript">                config.<span class="property">url</span>+=<span class="string">`?<span class="subst">$&#123;queryString&#125;</span>`</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">open</span>(config.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>,config.<span class="property">url</span>)</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(xhr.<span class="property">status</span>&gt;=<span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span>&lt;<span class="number">300</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span></span><br><span class="line"><span class="language-javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(config.<span class="property">data</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> jsonStr=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(config.<span class="property">data</span>)</span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="title function_">send</span>(jsonStr)</span></span><br><span class="line"><span class="language-javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                xhr.<span class="title function_">send</span>()<span class="comment">//发起请求</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//调用</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">myAxios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;html://.../..&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Promise-链式调用"><a href="#Promise-链式调用" class="headerlink" title="Promise 链式调用"></a>Promise 链式调用</h2><blockquote><p>promise返回一个新的promise对象</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> b=a.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    c.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">        retrun <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">        retrun <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="async-await"><a href="#async-await" class="headerlink" title="async / await"></a>async / await</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> pObj=<span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> pname=pObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> cObj=<span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> cname=cObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> aObj=<span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> aname=aObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.aaa&#x27;</span>).<span class="property">innerHTML</span>=pname</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.bbb&#x27;</span>).<span class="property">innerHTML</span>=cname</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.ccc&#x27;</span>).<span class="property">innerHTML</span>=aname</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">catch</span>(error)&#123;</span></span><br><span class="line"><span class="language-javascript">            error</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="队列中先微任务，在宏任务"><a href="#队列中先微任务，在宏任务" class="headerlink" title="队列中先微任务，在宏任务"></a>队列中先微任务，在宏任务</h2><img src="/posts/a5556963/image-20240120151349070.png" class="" title="image-20240120151349070"><h2 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all"></a>Promise.all</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>,<span class="attr">parms</span>:&#123;<span class="attr">a</span>:<span class="number">11</span>&#125;&#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> b=<span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>,<span class="attr">parms</span>:&#123;<span class="attr">a</span>:<span class="number">11</span>&#125;&#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> c=<span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>,<span class="attr">parms</span>:&#123;<span class="attr">a</span>:<span class="number">11</span>&#125;&#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    cosnt p=<span class="title class_">Promise</span>.<span class="title function_">all</span>([a,b,c])</span></span><br><span class="line"><span class="language-javascript">    p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;//&#x27;</span>&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//result是一级返回</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> setPromiseList=result.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//遍历返回二级promise对象</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">return</span> <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">params</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">id</span>:item.<span class="property">id</span> <span class="comment">//一级分类ID</span></span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">          cosnt p=<span class="title class_">Promise</span>.<span class="title function_">all</span>(setPromiseList) <span class="comment">//批量访问</span></span></span><br><span class="line"><span class="language-javascript">      p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">//result为多个返回值</span></span></span><br><span class="line"><span class="language-javascript">              cosnt htmlStr=result.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                  <span class="comment">//map便利，返回htmlStr</span></span></span><br><span class="line"><span class="language-javascript">                  <span class="keyword">const</span> dataObj=item.<span class="property">data</span>.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">                  <span class="keyword">return</span> <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                  &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                  &lt;h3&gt;<span class="subst">$&#123;dataObj.name&#125;</span>&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                  &lt;ul&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                   <span class="subst">$&#123;dataObj.children.map(item=&gt;&#123;</span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">                      retrun <span class="string">`&lt;li&gt;<span class="subst">$&#123;iteml.name&#125;</span>&lt;/li&gt;`</span></span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">                  &#125;).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">   &lt;/ul&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">       &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                  `</span></span></span><br><span class="line"><span class="language-javascript">              &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="地区获取"><a href="#地区获取" class="headerlink" title="地区获取"></a>地区获取</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;province&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;城市&quot;</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;市&quot;</span>&gt;</span>市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;area&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;区&quot;</span>&gt;</span>区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//获取一级省</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://ajax-api.itheima.net/api/province&#x27;</span> &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">pname</span> =&gt;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;pname&#125;</span>&quot;&gt;<span class="subst">$&#123;pname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                )</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;省份&lt;/option&gt;`</span> + optionStr</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">////////// </span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">async</span> e =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="string">&#x27;http://ajax-api.itheima.net/api/city&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">params</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">pname</span>: e.<span class="property">target</span>.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//返回的市</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">cname</span> =&gt;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;cname&#125;</span>&quot;&gt;<span class="subst">$&#123;cname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                )</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;省份&lt;/option&gt;`</span> + optionStr</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//清空地区</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;地区&lt;/option&gt;`</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//////////</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">async</span> e =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">url</span>: <span class="string">&#x27;http://ajax-api.itheima.net/api/area&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">params</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">pname</span>: <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">value</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">cname</span>: e.<span class="property">target</span>.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//返回的市</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">aname</span> =&gt;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;aname&#125;</span>&quot;&gt;<span class="subst">$&#123;aname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                )</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;地区&lt;/option&gt;`</span> + optionStr</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    //返回的市</span><br><span class="line">     cosnt optionStr=result.data.list.map(aname=&gt;</span><br><span class="line">           `<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;aname&#125;&quot;</span>&gt;</span>$&#123;cname&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span>`).join(&#x27;&#x27;</span><br><span class="line">                                              )</span><br><span class="line">          document.querySelector(&#x27;.area&#x27;).innerHTML=`<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>地区<span class="tag">&lt;/<span class="name">option</span>&gt;</span>`+optionStr</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="综合项目"><a href="#综合项目" class="headerlink" title="综合项目"></a>综合项目</h1><h3 id="wangEditor插件"><a href="#wangEditor插件" class="headerlink" title="wangEditor插件"></a>wangEditor插件</h3><img src="/posts/a5556963/image-20240120172915145.png" class="" title="image-20240120172915145"><h2 id="token（jwt）"><a href="#token（jwt）" class="headerlink" title="token（jwt）"></a>token（jwt）</h2><img src="/posts/a5556963/image-20240120173443451.png" class="" title="image-20240120173443451"><h2 id="请求头参数"><a href="#请求头参数" class="headerlink" title="请求头参数"></a>请求头参数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">headers</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Authorization</span>:<span class="string">`Bearer <span class="subst">$&#123;<span class="variable language_">localStorage</span>.getItem(<span class="string">&#x27;token&#x27;</span>)&#125;</span>`</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="axios请求拦截器"><a href="#axios请求拦截器" class="headerlink" title="axios请求拦截器"></a>axios请求拦截器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 添加请求拦截器</span></span></span><br><span class="line"><span class="language-javascript">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 在发送请求之前做些什么</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> token=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)<span class="comment">//读取本地的token</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//有的话在头里面加上token</span></span></span><br><span class="line"><span class="language-javascript">    token &amp;&amp; (config.<span class="property">headers</span>.<span class="property">Authorization</span>=<span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> config;</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 对请求错误做些什么</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="axios-响应拦截器"><a href="#axios-响应拦截器" class="headerlink" title="axios 响应拦截器"></a>axios 响应拦截器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 添加响应拦截器</span></span></span><br><span class="line"><span class="language-javascript">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2xx 范围内的状态码都会触发该函数。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 对响应数据做点什么</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> response;</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 超出 2xx 范围的状态码都会触发该函数。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 对响应错误做点什么</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(error?.<span class="property">response</span>?.<span class="property">status</span>===<span class="number">401</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">localStorage</span>.<span class="title function_">clear</span>()</span></span><br><span class="line"><span class="language-javascript">        location.<span class="property">href</span>=<span class="string">&#x27;../login/index.html&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScriptBOM</title>
      <link href="/posts/4349c3a0/"/>
      <url>/posts/4349c3a0/</url>
      
        <content type="html"><![CDATA[<h1 id="Window-对象"><a href="#Window-对象" class="headerlink" title="Window 对象"></a>Window 对象</h1><p><img src="前端JavaScriptBOM\image-20240118154147779.png" alt="image-20240118154147779"></p><blockquote><p>window.document.querySelector()</p></blockquote><p><img src="前端JavaScriptBOM\image-20240118154349777.png" alt="image-20240118154349777"></p><h2 id="定时器-延时函数-只执行一次"><a href="#定时器-延时函数-只执行一次" class="headerlink" title="定时器    延时函数    (只执行一次)"></a>定时器    延时函数    (只执行一次)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// setTimeout(回调函数,时间)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;111&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JS执行机制"><a href="#JS执行机制" class="headerlink" title="JS执行机制"></a>JS执行机制</h2><p>先执行栈内的业务，然后再去任务队列看是否有任务加入到执行栈。多次循环这个步骤，叫做事件循环</p><p><img src="前端JavaScriptBOM\image-20240118154732231.png" alt="image-20240118154732231"></p><p><img src="前端JavaScriptBOM\image-20240118154634385.png" alt="image-20240118154634385"></p><h2 id="location-对象（获取浏览器url）"><a href="#location-对象（获取浏览器url）" class="headerlink" title="location 对象（获取浏览器url）"></a>location 对象（获取浏览器url）</h2><p><img src="前端JavaScriptBOM\image-20240118155113012.png" alt="image-20240118155113012"></p><h3 id="跳转页面"><a href="#跳转页面" class="headerlink" title="跳转页面"></a>跳转页面</h3><p><img src="前端JavaScriptBOM\image-20240118155050530.png" alt="image-20240118155050530"></p><h3 id="获取？后面的值（如表单）"><a href="#获取？后面的值（如表单）" class="headerlink" title="获取？后面的值（如表单）"></a>获取？后面的值（如表单）</h3><blockquote><p>location.search</p></blockquote><h3 id="获取路由-后面的值"><a href="#获取路由-后面的值" class="headerlink" title="获取路由#后面的值"></a>获取路由#后面的值</h3><blockquote><p>location.hash</p></blockquote><h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><p><img src="前端JavaScriptBOM\image-20240118155311132.png" alt="image-20240118155311132"></p><blockquote><p>location.reload()</p><p>location.reload(true)  //强制刷新</p></blockquote><h3 id="location属性总结"><a href="#location属性总结" class="headerlink" title="location属性总结"></a>location属性总结</h3><p><img src="前端JavaScriptBOM\image-20240118155405706.png" alt="image-20240118155405706"></p><h2 id="navigator-属性（获取浏览器信息）"><a href="#navigator-属性（获取浏览器信息）" class="headerlink" title="navigator 属性（获取浏览器信息）"></a>navigator 属性（获取浏览器信息）</h2><p><img src="前端JavaScriptBOM\image-20240118155433031.png" alt="image-20240118155433031"></p><h2 id="histroy-对象（历史记录）"><a href="#histroy-对象（历史记录）" class="headerlink" title="histroy 对象（历史记录）"></a>histroy 对象（历史记录）</h2><p><img src="前端JavaScriptBOM\image-20240118155624414.png" alt="image-20240118155624414"></p><p><img src="前端JavaScriptBOM\image-20240118155739176.png" alt="image-20240118155739176"></p><h1 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h1><h2 id="localStorage-只能存储字符串"><a href="#localStorage-只能存储字符串" class="headerlink" title="localStorage 只能存储字符串"></a>localStorage 只能存储字符串</h2><p><img src="前端JavaScriptBOM\image-20240118160131555.png" alt="image-20240118160131555"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//localStorage.setItem(&#x27;key&#x27;,&#x27;value&#x27;) 存</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;111&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//localStorage.getItem(&#x27;key&#x27;) 取</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;a&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//localStorage.removeItem(&#x27;key&#x27;) 删除</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;a&#x27;</span>) 删除</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//localStorage.setItem(&#x27;key&#x27;,&#x27;value&#x27;) 改</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//有就改，没就加</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;222&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="sessionStorage-关闭浏览器会消失"><a href="#sessionStorage-关闭浏览器会消失" class="headerlink" title="sessionStorage 关闭浏览器会消失"></a>sessionStorage 关闭浏览器会消失</h2><p><img src="前端JavaScriptBOM\image-20240118160310793.png" alt="image-20240118160310793"></p><h2 id="复杂数据类型的存储"><a href="#复杂数据类型的存储" class="headerlink" title="复杂数据类型的存储"></a>复杂数据类型的存储</h2><h3 id="对象转换JSON字符串-JSON-stringify-obj"><a href="#对象转换JSON字符串-JSON-stringify-obj" class="headerlink" title="对象转换JSON字符串        JSON.stringify(obj)"></a>对象转换JSON字符串        JSON.stringify(obj)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;sss&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;obj&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj))</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JSON字符串转换对象-JSON-parse-obj"><a href="#JSON字符串转换对象-JSON-parse-obj" class="headerlink" title="JSON字符串转换对象         JSON.parse(obj)"></a>JSON字符串转换对象         JSON.parse(obj)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">const</span> str=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;obj&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="map-方法"><a href="#map-方法" class="headerlink" title="map() 方法"></a>map() 方法</h2><p>遍历数组处理数据，返回新的数组</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    arr.<span class="title function_">map</span>(<span class="params"><span class="keyword">function</span>(ele,index)</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//ele 数组元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//index 索引号</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">     arr.<span class="title function_">map</span>(<span class="params"><span class="keyword">function</span>(ele,index)</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//console.log(ele) //ele 数组元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//console.log(index) //index 索引号</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">return</span> ele+<span class="string">&#x27;颜色&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//返回值为：</span></span></span><br><span class="line"><span class="language-javascript">     [<span class="string">&#x27;red颜色&#x27;</span>,<span class="string">&#x27;blue颜色&#x27;</span>,<span class="string">&#x27;ping颜色&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="join-方法"><a href="#join-方法" class="headerlink" title="join() 方法"></a>join() 方法</h2><p>把数组转换为字符串</p><p>小括号为空，元素之间逗号分割 </p><p>小括号为空，元素之间不分割 </p><p>小括号内是什么，元素之间以什么分割</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> arr=[]</span></span><br><span class="line"><span class="language-javascript">   arr.<span class="title function_">join</span>()</span></span><br><span class="line"><span class="language-javascript">     arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">     arr.<span class="title function_">join</span>(<span class="string">&#x27;|&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="重置表单"><a href="#重置表单" class="headerlink" title="重置表单"></a>重置表单</h2><blockquote><p>this.reset()</p></blockquote><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>表单验证，屏蔽关键词，字符串提取</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> str=<span class="string">&#x27;2168465&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/168/</span></span></span><br><span class="line"><span class="language-javascript">a.<span class="title function_">text</span>(str) <span class="comment">//返回值为true</span></span></span><br><span class="line"><span class="language-javascript">    a.<span class="title function_">exec</span>(str) <span class="comment">//找到返回数组,没找到返回空</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><h4 id="边界（开头和结尾）"><a href="#边界（开头和结尾）" class="headerlink" title="边界（开头和结尾）"></a>边界（开头和结尾）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/^1/</span> <span class="comment">//必须以&#x27;1&#x27;开头</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/^11/</span> <span class="comment">//必须以&#x27;11&#x27;开头</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/1$/</span> <span class="comment">//必须以&#x27;1&#x27;结尾    </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/^1$/</span> <span class="comment">//**精确匹配，只能是&#x27;1&#x27;，其他都是错误的比如&#x27;11&#x27;，是错误的</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="量词-出现的次数"><a href="#量词-出现的次数" class="headerlink" title="量词(出现的次数)"></a>量词(出现的次数)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/1*/</span> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/1+/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/1?/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/1&#123;n&#125;/</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="前端JavaScriptBOM\image-20240118160616925.png" alt="image-20240118160616925"></p><h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/[abc]/</span> <span class="comment">//匹配[]中的任何一个就行</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/^[a-z]&#123;6&#125;&amp;/</span> <span class="comment">//限定只能是a-z的输入并且只能输入6个</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> a=<span class="regexp">/^[a-zA-Z0-9]&#123;6-18&#125;&amp;/</span> <span class="comment">//数字，字母可以输入6-18位</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=<span class="regexp">/[^a-z]/</span> <span class="comment">//在中括号中加上^代表取反</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="预定义类"><a href="#预定义类" class="headerlink" title="预定义类"></a>预定义类</h4><p><img src="前端JavaScriptBOM\image-20240118160643902.png" alt="image-20240118160643902"></p><h4 id="是否区分大小写"><a href="#是否区分大小写" class="headerlink" title="是否区分大小写"></a>是否区分大小写</h4><p><img src="前端JavaScriptBOM\image-20240118160709665.png" alt="image-20240118160709665"></p><h4 id="替换文本（默认只替换一个）"><a href="#替换文本（默认只替换一个）" class="headerlink" title="替换文本（默认只替换一个）"></a>替换文本（默认只替换一个）</h4><p><img src="前端JavaScriptBOM\image-20240118160824428.png" alt="image-20240118160824428"></p><blockquote><p>i用于不区分大小写，g用于全局替换</p></blockquote><p><img src="前端JavaScriptBOM\image-20240118160951919.png" alt="image-20240118160951919"></p><h3 id="节流（防止用户多次点击）"><a href="#节流（防止用户多次点击）" class="headerlink" title="节流（防止用户多次点击）"></a>节流（防止用户多次点击）</h3><p>通过一个布尔值来做按钮开关</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a=<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(a)</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//点击后不允许多次点击</span></span></span><br><span class="line"><span class="language-javascript">            a=<span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//业务实现完之后才可以再次点击</span></span></span><br><span class="line"><span class="language-javascript">            a=<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="change-事件"><a href="#change-事件" class="headerlink" title="change 事件"></a>change 事件</h2><p>当输入框的值发生变化时触发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="return-false-中断事件"><a href="#return-false-中断事件" class="headerlink" title="return false 中断事件"></a>return false 中断事件</h2><h2 id="表单验证required-不允许为空"><a href="#表单验证required-不允许为空" class="headerlink" title="表单验证required //不允许为空"></a>表单验证required //不允许为空</h2><p><img src="前端JavaScriptBOM\image-20240118163310884.png" alt="image-20240118163310884"></p><h2 id="表单不留下痕迹-autocomplete-”off”"><a href="#表单不留下痕迹-autocomplete-”off”" class="headerlink" title="表单不留下痕迹  autocomplete=”off”"></a>表单不留下痕迹  autocomplete=”off”</h2><h1 id="JS-进阶"><a href="#JS-进阶" class="headerlink" title="JS 进阶"></a>JS 进阶</h1><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>函数作用域</p><p>块作用域</p><p>作用域链：变量查找机制</p><blockquote><p>优先查找当前作用域</p><p>然后依次逐级查找父级，直到全局作用域</p><p>子可以用父级作用域，父级不能用子作用域</p></blockquote><h2 id="垃圾回收机制"><a href="#垃圾回收机制" class="headerlink" title="垃圾回收机制"></a>垃圾回收机制</h2><p>堆栈？</p><p>全局：关闭页面回收</p><p>局部：不用自动回收</p><p>GC收集器算法：</p><blockquote><p>引用计数：</p><p>缺点：嵌套引用会导致内存泄漏(死锁？)</p><p>标记清除法</p></blockquote><h2 id="闭包？？？"><a href="#闭包？？？" class="headerlink" title="闭包？？？"></a>闭包？？？</h2><p>嵌套函数中的子函数使用父函数的变量</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">count</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> i=<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            i++</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        retrun <span class="title function_">fn</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> fun= <span class="title function_">count</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//实现数据的私有化，即只能通过调用函数来获取值或改变值，无法直接改变值。类型java的get，set</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//并且fun-&gt;count-&gt;i 这个变量不会被回收/有内存泄漏</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量提升-var"><a href="#变量提升-var" class="headerlink" title="变量提升 var"></a>变量提升 var</h2><p>只提示声明，不提升赋值</p><h2 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h2><p><img src="前端JavaScriptBOM\image-20240118163830653.png" alt="image-20240118163830653"></p><h2 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h2><h3 id="动态参数-arguments-伪数组"><a href="#动态参数-arguments-伪数组" class="headerlink" title="动态参数 arguments     //伪数组"></a>动态参数 arguments     //伪数组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="variable language_">arguments</span>.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[i])</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="剩余参数-…arr-允许获取多个数值-多的参数给到剩余参数，真数组-推荐使用"><a href="#剩余参数-…arr-允许获取多个数值-多的参数给到剩余参数，真数组-推荐使用" class="headerlink" title="剩余参数   …arr   //允许获取多个数值,多的参数给到剩余参数，真数组 //推荐使用"></a>剩余参数   …arr   //允许获取多个数值,多的参数给到剩余参数，真数组 //推荐使用</h3><p>（…arr 在函数中是剩余函数，其他地方是展开运算符）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">...arr</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//arr是一个数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//多个参数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">a,b,...arr</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//展开数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(...arr)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="求最大值，合并数组"><a href="#求最大值，合并数组" class="headerlink" title="求最大值，合并数组"></a>求最大值，合并数组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//合并数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr2=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[...arr1,...arr2]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="箭头函数（lambda-表达式）"><a href="#箭头函数（lambda-表达式）" class="headerlink" title="箭头函数（lambda 表达式）"></a>箭头函数（lambda 表达式）</h2><p>函数表达式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//基础语法,无参和有参</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">fn</span>= (<span class="params"></span>)=&gt;&#123;</span></span><br><span class="line"><span class="language-javascript">        consloe.<span class="title function_">log</span>(x)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">fn</span>= (<span class="params">x</span>)=&gt;&#123;</span></span><br><span class="line"><span class="language-javascript">        consloe.<span class="title function_">log</span>(x)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> <span class="title function_">fn</span>= (<span class="params">x，y</span>)=&gt;&#123;</span></span><br><span class="line"><span class="language-javascript">        consloe.<span class="title function_">log</span>(x,y)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//一个形参可以省略小括号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">fn</span>= x=&gt;&#123; </span></span><br><span class="line"><span class="language-javascript">        consloe.<span class="title function_">log</span>(x)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//一行可以省略大括号</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> <span class="title function_">fn</span>= x=&gt;consloe.<span class="title function_">log</span>(x)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//一行代码可以省略return</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">fn</span>= x=&gt;x+<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//***返回一个对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">fn</span>= (<span class="params">uname</span>)=&gt;(&#123;<span class="attr">uname</span>:uname&#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fn</span>(<span class="string">&#x27;111&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>箭头函数没有arguments ，有剩余参数   …arr</p><h3 id="箭头函数没有this-this指向父级的调用者"><a href="#箭头函数没有this-this指向父级的调用者" class="headerlink" title="箭头函数没有this//// /////this指向父级的调用者"></a>箭头函数没有this//// /////this指向父级的调用者</h3><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><h3 id="数组解构-数组元素批量给变量"><a href="#数组解构-数组元素批量给变量" class="headerlink" title="数组解构:数组元素批量给变量"></a>数组解构:数组元素批量给变量</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b,c,d]=arr</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>交换变量值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> b=<span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">    ;[b,a]=[a,b]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="js必须加分号的情况"><a href="#js必须加分号的情况" class="headerlink" title="js必须加分号的情况"></a>js必须加分号的情况</h3><blockquote><p>立即执行函数        ( function() {} )();</p><p>数组开头的情况     如上代码</p></blockquote><p><img src="前端JavaScriptBOM\image-20240118165422350.png" alt="image-20240118165422350"></p><h3 id="解构赋值参数不匹配问题"><a href="#解构赋值参数不匹配问题" class="headerlink" title="解构赋值参数不匹配问题"></a>解构赋值参数不匹配问题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b,c,d]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//多出的赋值为undefined</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//多出的值没有人接</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b,...arr]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//arr是一个真数组</span></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> [a=<span class="number">0</span>,b=<span class="number">0</span>]=[]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//防止underfined,给他赋一个默认值</span></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> [a,,b]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//空的位置可以忽略那个值</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多维数组解构"><a href="#多维数组解构" class="headerlink" title="多维数组解构"></a>多维数组解构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b,c]]=[<span class="number">1</span>,<span class="number">2</span>,[<span class="number">3</span>,<span class="number">4</span>]]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//c=[3,4]</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [a,b,[c,d]]=[<span class="number">1</span>,<span class="number">2</span>,[<span class="number">3</span>,<span class="number">4</span>]]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//多维结构，样式一一对应</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="对象解构"><a href="#对象解构" class="headerlink" title="*对象解构"></a><em>*</em>对象解构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;aaa&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123;uname,age&#125;=obj</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义的属性名必须与对象名一样</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解构对象名改名"><a href="#解构对象名改名" class="headerlink" title="解构对象名改名"></a>解构对象名改名</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;aaa&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123;<span class="attr">uname</span>:username,age&#125;=obj</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//旧：新</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数组对象解构"><a href="#数组对象解构" class="headerlink" title="数组对象解构"></a>数组对象解构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=[</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">uname</span>:<span class="string">&#x27;aaa&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [&#123;uname,age&#125;]=obj</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多级对象解构"><a href="#多级对象解构" class="headerlink" title="多级对象解构"></a>多级对象解构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=[</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;aaa&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">family</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">mother</span>:<span class="string">&#x27;sss&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">father</span>:<span class="string">&#x27;dfd&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>:<span class="number">6</span></span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123;name,<span class="attr">family</span>:&#123;mother,father&#125;,age&#125;=obj</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过解构，只获取msg中的data数据"><a href="#通过解构，只获取msg中的data数据" class="headerlink" title="通过解构，只获取msg中的data数据"></a>通过解构，只获取msg中的data数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> msg=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;code&quot;</span>:<span class="number">200</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;获取新闻成功&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;data&quot;</span>:[</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;id&quot;</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;5G商用自己&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;count&quot;</span>:<span class="number">58</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;id&quot;</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;国际媒体&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;count&quot;</span>:<span class="number">56</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">&#123;data&#125;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>(msg)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//通过解构，只获取msg中的data数据</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    cosnt arr=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> result=arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//item值,index下标</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> goodsList=[</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>:<span class="string">&#x27;6681565&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;fdf&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">price</span>:<span class="string">&#x27;5435.5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">picture</span>:<span class="string">&#x27;http://.../a.jpg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>:<span class="string">&#x27;6681565&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;fdf&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">price</span>:<span class="string">&#x27;5435.5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">picture</span>:<span class="string">&#x27;http://.../a.jpg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>:<span class="string">&#x27;6681565&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;fdf&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">price</span>:<span class="string">&#x27;5435.5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">picture</span>:<span class="string">&#x27;http://.../a.jpg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str=<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    oggdsList.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> &#123;name,price,picture&#125;=item</span></span><br><span class="line"><span class="language-javascript">        str+=<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;img src=<span class="subst">$&#123;picture&#125;</span> alt=&quot;&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;p&gt;<span class="subst">$&#123;name&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;p&gt;<span class="subst">$&#123;price&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &lt;/div</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        `</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.a&#x27;</span>).<span class="property">innerHTML</span>=str</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="通过css实现切换样式"><a href="#通过css实现切换样式" class="headerlink" title="通过css实现切换样式"></a>通过css实现切换样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    //当<span class="selector-tag">a</span>得到活动状态（点击）或者焦点的时候实现下面css</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>&#123;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="filter-方法-用来筛选，返回一个满足条件的新数组"><a href="#filter-方法-用来筛选，返回一个满足条件的新数组" class="headerlink" title="filter 方法 //用来筛选，返回一个满足条件的新数组"></a>filter 方法 //用来筛选，返回一个满足条件的新数组</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> newArr= arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> item&gt;=<span class="number">20</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//采用箭头函数的写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> newArr=arr.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span> item&gt;=<span class="number">20</span>)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    funciton <span class="title class_">Pig</span>(uname,age)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">uname</span>=uname,</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">age</span>=age</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a=<span class="keyword">new</span> <span class="title class_">Pig</span>(<span class="string">&quot;佩奇&quot;</span>,<span class="number">6</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实例，静态"><a href="#实例，静态" class="headerlink" title="实例，静态"></a>实例，静态</h2><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p>**js底层会把基本数据类型包装成复杂数据类型</p><p>  let a={ uname:’pink’,age:18}   ===    let   a=new Object({ uname:’pink’,age:18})</p><p>Object</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a=&#123; <span class="attr">uname</span>:<span class="string">&#x27;pink&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(a) <span class="comment">//返回数组[&#x27;uname&#x27;,&#x27;age&#x27;]</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">values</span>(a) <span class="comment">//[&#x27;pink&#x27;,18]</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> b=&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">assign</span>(b,a)  <span class="comment">//a拷贝给b</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Array</p><p><img src="前端JavaScriptBOM\image-20240118175304660.png" alt="image-20240118175304660"></p><p><img src="前端JavaScriptBOM\image-20240118175410586.png" alt="image-20240118175410586"></p><p><img src="前端JavaScriptBOM\image-20240118175535736.png" alt="image-20240118175535736"></p><p><img src="前端JavaScriptBOM\image-20240118175629912.png" alt="image-20240118175629912"></p><p><img src="前端JavaScriptBOM\image-20240118175702553.png" alt="image-20240118175702553"></p><h3 id="find-数组中查找第一个满足的，返回满足条件的对象-没找到返回undefined"><a href="#find-数组中查找第一个满足的，返回满足条件的对象-没找到返回undefined" class="headerlink" title="find  数组中查找第一个满足的，返回满足条件的对象,没找到返回undefined"></a>find  数组中查找第一个满足的，返回满足条件的对象,没找到返回undefined</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> arr=[</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;小米&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">price</span>:<span class="string">&#x27;5435.5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;华为&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">price</span>:<span class="string">&#x27;5435.5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//返回满足提交的数值元素</span></span></span><br><span class="line"><span class="language-javascript">      arr.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> item.<span class="property">name</span>===<span class="string">&#x27;小米&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="every-查看数组是否全部满足条件，返回布尔"><a href="#every-查看数组是否全部满足条件，返回布尔" class="headerlink" title="every 查看数组是否全部满足条件，返回布尔"></a>every 查看数组是否全部满足条件，返回布尔</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> flag=arr.<span class="title function_">every</span>(<span class="function"><span class="params">item</span>=&gt;</span> item&gt;=<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>String</p><p><img src="前端JavaScriptBOM\image-20240118180646442.png" alt="image-20240118180646442"></p><h3 id="字符串转数组-split（）-和join（）相反"><a href="#字符串转数组-split（）-和join（）相反" class="headerlink" title="字符串转数组     split（）                                 和join（）相反"></a>字符串转数组     split（）                                 和join（）相反</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> str=<span class="string">&#x27;pink,red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> arr=str.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//[&#x27;pink&#x27;,&#x27;red&#x27;]</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> str=<span class="string">&#x27;2018-5-10&#x27;</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> arr=str.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//[&#x27;2018&#x27;,&#x27;5&#x27;,&#x27;10&#x27;],</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h3> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> str=<span class="string">&#x27;只是一段字符&#x27;</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> arr=str.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//是一</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//第一个为开始下标，第二个为结束下标，</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//包含头，但是不包含尾[1,3)</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="判断字符串是否以某个字符串开头（可以包含一个数字下标，来确定开始地址）-，返回一个布尔值"><a href="#判断字符串是否以某个字符串开头（可以包含一个数字下标，来确定开始地址）-，返回一个布尔值" class="headerlink" title="判断字符串是否以某个字符串开头（可以包含一个数字下标，来确定开始地址） ，返回一个布尔值"></a>判断字符串是否以某个字符串开头（可以包含一个数字下标，来确定开始地址） ，返回一个布尔值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    cosnt str=<span class="string">&#x27;abcdefg&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    str.<span class="title function_">startsWith</span>(<span class="string">&#x27;abc&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    str.<span class="title function_">startsWith</span>(<span class="string">&#x27;abc&#x27;</span>,<span class="number">5</span>)  <span class="comment">//从下标5开始</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="判断字符串中是否包含某段字符串（可以包含一个数字下标，来确定开始地址）-，返回一个布尔值"><a href="#判断字符串中是否包含某段字符串（可以包含一个数字下标，来确定开始地址）-，返回一个布尔值" class="headerlink" title="判断字符串中是否包含某段字符串（可以包含一个数字下标，来确定开始地址） ，返回一个布尔值"></a>判断字符串中是否包含某段字符串（可以包含一个数字下标，来确定开始地址） ，返回一个布尔值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    cosnt str=<span class="string">&#x27;abcdefg&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    str.<span class="title function_">includes</span>(<span class="string">&#x27;def&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    str.<span class="title function_">includes</span>(<span class="string">&#x27;def&#x27;</span>,<span class="number">5</span>)  <span class="comment">//从下标5开始</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串实际运用"><a href="#字符串实际运用" class="headerlink" title="字符串实际运用*"></a>字符串实际运用<em>*</em></h3><p><img src="前端JavaScriptBOM\image-20240118192820177.png" alt="image-20240118192820177"></p><h3 id="Number保留小数"><a href="#Number保留小数" class="headerlink" title="Number保留小数"></a>Number保留小数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> num=<span class="number">20.123</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> a=num.<span class="title function_">toFixed</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> b=num.<span class="title function_">toFixed</span>(<span class="number">2</span>) <span class="comment">//四舍五入</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="用于给没有的字段赋初值"><a href="#用于给没有的字段赋初值" class="headerlink" title="用于给没有的字段赋初值"></a>用于给没有的字段赋初值</h3><p>对于没有的值，使用三目运算符,是否有？有给原值，没有为空字符串    a ? a : ‘’</p><h2 id="原型-prototype（构造函数的属性（本身是一个对象））"><a href="#原型-prototype（构造函数的属性（本身是一个对象））" class="headerlink" title="原型  prototype（构造函数的属性（本身是一个对象））"></a>原型  prototype（构造函数的属性（本身是一个对象））</h2><p>作用：共享方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    funtion <span class="title class_">Star</span>(uname,age)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">uname</span>=uname</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">age</span>=age</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Star</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sing</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;唱歌&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span> ldh=<span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;a&#x27;</span>,<span class="number">55</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span> zxy=<span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;b&#x27;</span>,<span class="number">45</span>)</span></span><br><span class="line"><span class="language-javascript">    ldh.<span class="title function_">sing</span>()</span></span><br><span class="line"><span class="language-javascript">    zxy.<span class="title function_">sing</span>()</span></span><br><span class="line"><span class="language-javascript">    ldh.<span class="property">sing</span>===zxy.<span class="property">sing</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="this-给数组添加一个全局通用的方法"><a href="#this-给数组添加一个全局通用的方法" class="headerlink" title="**this**给数组添加一个全局通用的方法"></a><strong><strong>**</strong></strong>this<strong><strong>**</strong></strong>给数组添加一个全局通用的方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//在原型中定义一个公用方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">max</span>=<span class="keyword">function</span>(<span class="params">arr</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(...<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//this指向arr</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//调用</span></span></span><br><span class="line"><span class="language-javascript">    arr.<span class="title function_">max</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>求和</p><p><img src="前端JavaScriptBOM\image-20240118195458106.png" alt="image-20240118195458106"></p><h2 id="constructor-构造函数"><a href="#constructor-构造函数" class="headerlink" title="constructor 构造函数"></a>constructor 构造函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Star</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">uname</span>=uname</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">let</span> a=<span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;df&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Star</span>.<span class="property"><span class="keyword">prototype</span></span> <span class="comment">//构造函数-&gt;原型对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Star</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span><span class="comment">//原型对象-&gt;构造函数</span></span></span><br><span class="line"><span class="language-javascript">    a. _ _proto_ _   <span class="comment">//对象-&gt;对象原型</span></span></span><br><span class="line"><span class="language-javascript">      a. _ _proto_ _.<span class="property">constructor</span>  <span class="comment">//对象原型-&gt;构造函数</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//原型对象 prototype  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//来自构造函数的属性        </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//指向原型</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//构造函数 constructor  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//来自原型的属性，或者new实例对象下proto的属性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//指向构造函数</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//对象原型 _ _proto_ _   </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//来自new实例对象的属性          </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//指向原型 (前后都是2个下划线)</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  Star.prototype.constructor===Star</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="前端JavaScriptBOM\image-20240118201405096.png" alt="image-20240118201405096"></p><h3 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title class_">Person</span>=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">eyes</span>=<span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">head</span>=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Woman</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>=<span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span>=<span class="title class_">Woman</span><span class="comment">//重新指回原来的构造函数</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p>对象都有proto，原型对象都有constructor</p><p><img src="前端JavaScriptBOM\image-20240118203114510.png" alt="image-20240118203114510"></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p><img src="前端JavaScriptBOM\image-20240118203738991.png" alt="image-20240118203738991"></p><p><img src="前端JavaScriptBOM\image-20240118204110960.png" alt="image-20240118204110960"></p><p><img src="前端JavaScriptBOM\image-20240118204602688.png" alt="image-20240118204602688"></p><p><img src="前端JavaScriptBOM\image-20240118204338042.png" alt="image-20240118204338042"></p><p><img src="前端JavaScriptBOM\image-20240118204203813.png" alt="image-20240118204203813"></p><h2 id="深-浅拷贝-对于引用类型"><a href="#深-浅拷贝-对于引用类型" class="headerlink" title="深/浅拷贝(对于引用类型)"></a>深/浅拷贝(对于引用类型)</h2><h3 id="浅拷贝：拷贝地址"><a href="#浅拷贝：拷贝地址" class="headerlink" title="浅拷贝：拷贝地址"></a>浅拷贝：拷贝地址</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o=&#123;...obj&#125; <span class="comment">//第一种</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">assign</span>(o.<span class="property">obj</span>) <span class="comment">//第二种，只拷贝外层，内层任然是给地址</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><h4 id="递归实现"><a href="#递归实现" class="headerlink" title="递归实现"></a>递归实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//递归一秒调用一次自己来实现时间显示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getTime</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelect</span>(<span class="string">&#x27;div&#x27;</span>).<span class="property">innerHTML</span>=<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(getTime,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">getTime</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">17</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hobby</span>:[<span class="string">&#x27;篮球&#x27;</span>,<span class="string">&#x27;足球&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o=&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">deepCopy</span>(<span class="params">newObj,oldCopy</span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> oldObj)</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//先筛选数组，在筛选对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Array</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                 newObj[k]=[]</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">deepCopy</span>(newObj[k],oldObj[k])</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> <span class="keyword">if</span>(oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Object</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                newObj[k]=&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">deepCopy</span>(newObj[k],oldObj[k])</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                newObj[k]=oldObj[k]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">deepCopy</span>(o,obj)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="插件实现-lodash"><a href="#插件实现-lodash" class="headerlink" title="插件实现 lodash"></a>插件实现 lodash</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lodash.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">17</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hobby</span>:[<span class="string">&#x27;篮球&#x27;</span>,<span class="string">&#x27;足球&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o=_.<span class="title function_">cloneDeep</span>(obj)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="json实现"><a href="#json实现" class="headerlink" title="json实现"></a>json实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">uname</span>:<span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">17</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hobby</span>:[<span class="string">&#x27;篮球&#x27;</span>,<span class="string">&#x27;足球&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//对象转换字符串，字符串在转换对象</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> o=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj))</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><h4 id="throw：抛出异常，终止程序"><a href="#throw：抛出异常，终止程序" class="headerlink" title="throw：抛出异常，终止程序"></a>throw：抛出异常，终止程序</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">x,y</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(!x || !y)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;值为空&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="try-catch…finally：捕获系统提供的错误信息，不中断程序，需要加return中断"><a href="#try-catch…finally：捕获系统提供的错误信息，不中断程序，需要加return中断" class="headerlink" title="try/catch…finally：捕获系统提供的错误信息，不中断程序，需要加return中断"></a>try/catch…finally：捕获系统提供的错误信息，不中断程序，需要加return中断</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//代码块</span></span></span><br><span class="line"><span class="language-javascript">        &#125;<span class="keyword">catch</span>(err)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// return</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//  throw new Error(&#x27;error&#x27;) </span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//加上throw就不用return</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">finally</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//一定执行</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="debugger-关键字，用于调试时，程序直接到要调试的位置"><a href="#debugger-关键字，用于调试时，程序直接到要调试的位置" class="headerlink" title="debugger:关键字，用于调试时，程序直接到要调试的位置"></a>debugger:关键字，用于调试时，程序直接到要调试的位置</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">debugger</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//代码块</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="this指向改变"><a href="#this指向改变" class="headerlink" title="this指向改变"></a>this指向改变</h2><h4 id="call-改变this指向，调用函数"><a href="#call-改变this指向，调用函数" class="headerlink" title="call()     改变this指向，调用函数"></a>call()     改变this指向，调用函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        uname=<span class="string">&#x27;dfd&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">x,y</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">//obj</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    fun.<span class="title function_">call</span>(obj,<span class="number">1</span>,<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="apply-改变this指向，调用函数"><a href="#apply-改变this指向，调用函数" class="headerlink" title="apply()    改变this指向，调用函数"></a>apply()    改变this指向，调用函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        uname=<span class="string">&#x27;dfd&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">x,y</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">//obj</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    fun.<span class="title function_">apply</span>(obj,[<span class="number">1</span>,<span class="number">2</span>]) <span class="comment">//第二个参数必须是数组</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="bind-改变this指向，但是不调用函数-返回一个被改变this指向的新函数"><a href="#bind-改变this指向，但是不调用函数-返回一个被改变this指向的新函数" class="headerlink" title="bind()    改变this指向，但是不调用函数,返回一个被改变this指向的新函数"></a>bind()    改变this指向，但是不调用函数,返回一个被改变this指向的新函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">        uname=<span class="string">&#x27;dfd&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">//obj</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> fn=fun.<span class="title function_">call</span>(obj)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="this应用"><a href="#this应用" class="headerlink" title="this应用"></a>this应用</h4><p><img src="前端JavaScriptBOM\image-20240118220612868.png" alt="image-20240118220612868"></p><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><h3 id="lodash"><a href="#lodash" class="headerlink" title="lodash"></a>lodash</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;./lodash.man.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">innerHTML</span>=i++</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//每隔500ms,重新执行一次</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,_.<span class="title function_">debounce</span>(mouseMove,<span class="number">500</span>))</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="手写"><a href="#手写" class="headerlink" title="手写*"></a>手写*</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">innerHTML</span>=i++</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn,t</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> timer</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//return 一个匿名函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//闭包????</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(timer) <span class="title function_">clertTimeout</span>(timer)</span></span><br><span class="line"><span class="language-javascript">            timer=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">fn</span>()</span></span><br><span class="line"><span class="language-javascript">            &#125;,t)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,<span class="title function_">debounce</span>(mouseMove,<span class="number">500</span>))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><h3 id="lodash-1"><a href="#lodash-1" class="headerlink" title="lodash"></a>lodash</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;./lodash.man.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">innerHTML</span>=i++</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//每隔500ms，才可以再次执行</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,_.<span class="title function_">throttle</span>(mouseMove,<span class="number">500</span>))</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="手写-1"><a href="#手写-1" class="headerlink" title="手写"></a>手写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i=<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">innerHTML</span>=i++</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn,t</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> timer=<span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(!timer) &#123;</span></span><br><span class="line"><span class="language-javascript">                timer=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">fn</span>()</span></span><br><span class="line"><span class="language-javascript">                    timer=<span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,t)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,<span class="title function_">throttle</span>(mouseMove,<span class="number">500</span>))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="视频记录上次位置"><a href="#视频记录上次位置" class="headerlink" title="视频记录上次位置"></a>视频记录上次位置</h3><p><img src="前端JavaScriptBOM\image-20240118224648255.png" alt="image-20240118224648255"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> video=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;video&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    video.<span class="property">ontimeupdate</span>=_.<span class="title function_">throttle</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//获得当前视频时间,可读写</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;currentTime&#x27;</span>,video.<span class="property">currentTime</span>)</span></span><br><span class="line"><span class="language-javascript">       </span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript">    video.<span class="property">onloadeddata</span>=<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            vodeo.<span class="property">currentTime</span>=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;currentTime&#x27;</span>) || <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScriptBOM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/posts/cc1b9611/"/>
      <url>/posts/cc1b9611/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScrip"><a href="#JavaScrip" class="headerlink" title="JavaScrip"></a>JavaScrip</h1><p>基础语法+DOM+BOM</p><p>JS外部引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./aaa.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="输入-输出语法"><a href="#输入-输出语法" class="headerlink" title="输入/输出语法"></a>输入/输出语法</h2><h3 id="文档输出内容"><a href="#文档输出内容" class="headerlink" title="文档输出内容"></a>文档输出内容</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;内容&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//可以包含标签</span></span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;h1&gt;内容&lt;/h1&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="页面警示框"><a href="#页面警示框" class="headerlink" title="页面警示框"></a>页面警示框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&quot;内容&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;内容&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>显示一个对话框，提示用户，输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">prompt</span>(<span class="string">&#x27;请输入信息&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote><p>let 不允许声明同名变量</p><p>未赋值的变量值为：undefined</p></blockquote><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>大写，不可重新赋值，必须赋初始值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> G=<span class="number">222</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;这是$&#123;变量&#125;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据类型检测"><a href="#数据类型检测" class="headerlink" title="数据类型检测"></a>数据类型检测</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num=<span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> num)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//typeof 数据类型</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><blockquote><p>除了+号，其他（-，*，/）算数运算符会转换数据为数字类型</p><p>‘6’+2=’62’</p><p>‘6’-2=4</p><p>+号作为正号，会把字符串转换为数字类型</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num= +<span class="title function_">prompt</span>(<span class="string">&#x27;输入&#x27;</span>) <span class="comment">//+可以把输入的转换为数字类型</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="显示转换"><a href="#显示转换" class="headerlink" title="显示转换"></a>显示转换</h3><blockquote><p>number(变量名)  //转换数字类型</p><p>parseInt(‘111’)  //转换数字类型,会切割只留前面的数字</p><p>不允许这样： parseInt(‘aaa111’)  </p><p>parseFloat(‘111.111’)</p></blockquote><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符 == / ==="></a>比较运算符 == / ===</h2><p>== 会转换比较值</p><p>=== 会判断值和数据类型</p><p>NaN===NaN 返回false，它不等于任何值</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="数组添加数据"><a href="#数组添加数据" class="headerlink" title="数组添加数据"></a>数组添加数据</h3><h4 id="前加"><a href="#前加" class="headerlink" title="前加"></a>前加</h4><blockquote><p>数组名.push(‘新值’)</p><p>a.push(‘111’)</p><p>可以添加多个元素</p><p>a.push(‘111’,’222’)</p><p>把一个或多个元素添加到数组末尾，返回数组的新长度</p></blockquote><h4 id="后加"><a href="#后加" class="headerlink" title="后加"></a>后加</h4><blockquote><p>添加在数组前面: a.unshift(‘2122’)</p></blockquote><h3 id="数组删除数据"><a href="#数组删除数据" class="headerlink" title="数组删除数据"></a>数组删除数据</h3><h4 id="后删除"><a href="#后删除" class="headerlink" title="后删除"></a>后删除</h4><blockquote><p>a.pop()</p><p>删除最后一个元素，返回该元素的值</p></blockquote><h4 id="前删除"><a href="#前删除" class="headerlink" title="前删除"></a>前删除</h4><blockquote><p>a.shift()</p><p>删除第一个元素，返回该元素的值</p></blockquote><h4 id="指定位置删除"><a href="#指定位置删除" class="headerlink" title="指定位置删除"></a>指定位置删除</h4><blockquote><p>a.splice(起始位置，删除几个元素)</p><p>a.splice(5,1)  //下标为5开始，删除一个</p><p>如果后参数为空，删除起始位置后面的所以元素</p></blockquote><h2 id="排序：-a-sort"><a href="#排序：-a-sort" class="headerlink" title="排序： a.sort()"></a>排序： a.sort()</h2><h2 id="函数和匿名函数"><a href="#函数和匿名函数" class="headerlink" title="函数和匿名函数"></a>函数和匿名函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;&#125;  <span class="comment">//调用可以在函数体前面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a=<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; <span class="comment">//用法： btn.onclick=function()&#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    (<span class="keyword">function</span>(<span class="params"></span>) &#123; &#125;)();</span></span><br><span class="line"><span class="language-javascript">      ;(<span class="keyword">function</span>(<span class="params"></span>) &#123; &#125;)()</span></span><br><span class="line"><span class="language-javascript">      (<span class="keyword">function</span>(<span class="params"></span>) &#123; &#125;)(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">    (<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;());</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//必须加分号，可以在前面加，也可以在后面加</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="逻辑中断"><a href="#逻辑中断" class="headerlink" title="逻辑中断"></a>逻辑中断</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x=x||0 //如果x是一个不支持的值，或者是一个没有的值，那么返回0。</span><br></pre></td></tr></table></figure><h1 id="对象-object"><a href="#对象-object" class="headerlink" title="对象 object"></a>对象 object</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">uname</span>:<span class="string">&#x27;111&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    obj.<span class="property">uname</span>  <span class="comment">//查</span></span></span><br><span class="line"><span class="language-javascript">    obj[<span class="string">&#x27;uname&#x27;</span>] <span class="comment">//查  中括号里的一定要加引号</span></span></span><br><span class="line"><span class="language-javascript">    obj.<span class="property">uname</span>=<span class="string">&#x27;222&#x27;</span> <span class="comment">//改</span></span></span><br><span class="line"><span class="language-javascript">    obj.<span class="property">like</span>=<span class="string">&#x27;足球&#x27;</span> <span class="comment">//增</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">delete</span> obj.<span class="property">age</span> <span class="comment">//删</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="对象中的方法"><a href="#对象中的方法" class="headerlink" title="对象中的方法"></a>对象中的方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> obj=&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">a</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;  <span class="comment">//方法</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">    obj.<span class="title function_">a</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="遍历对象-for-in"><a href="#遍历对象-for-in" class="headerlink" title="遍历对象 for in"></a>遍历对象 for in</h2><blockquote><p>返回的是属性名，并且是字符串类型</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> a <span class="keyword">in</span> obj)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[a])</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>for in 遍历数组的时候返回的是下标，并且是字符串类型的,</p><p>不建议用for in 遍历数组</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> a <span class="keyword">in</span> array)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(array[a])</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多值对象"><a href="#多值对象" class="headerlink" title="多值对象"></a>多值对象</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> obj=[</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">uname</span>:<span class="string">&#x27;111&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">uname</span>:<span class="string">&#x27;111&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">uname</span>:<span class="string">&#x27;111&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span> &#125; </span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//遍历</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;obj.<span class="property">lenth</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[i].<span class="property">uname</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[i].<span class="property">age</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="内置对象-Math"><a href="#内置对象-Math" class="headerlink" title="内置对象 Math"></a>内置对象 Math</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">1.1</span>)   <span class="comment">// 2 向上取整</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">1.1</span>)  <span class="comment">//1 向下取整</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">4.4</span>)  <span class="comment">//4 四舍五入</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)  <span class="comment">//找最大值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)  <span class="comment">//找最小值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">3</span>)  <span class="comment">//绝对值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Math</span>.<span class="title function_">random</span>() <span class="comment">//返回随机数 0-1 的随机小数，包含0不包含1 </span></span></span><br><span class="line"><span class="language-javascript">    arr[</span></span><br><span class="line"><span class="language-javascript">       <span class="title class_">Math</span>.<span class="title function_">floor</span>(</span></span><br><span class="line"><span class="language-javascript">           <span class="title class_">Math</span>.<span class="title function_">random</span>() * arr.<span class="property">length</span></span></span><br><span class="line"><span class="language-javascript">       )</span></span><br><span class="line"><span class="language-javascript">  ]<span class="comment">//获取数组中的随机一个值</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读&lt;你是这世界写给我的情书&gt;</title>
      <link href="/posts/14bac2f4/"/>
      <url>/posts/14bac2f4/</url>
      
        <content type="html"><![CDATA[<p>边读边写感想</p><p>2024/3/4/18：15</p><p><img src="./读-你是这世界写给我的情书/image-20240304181238714.png" alt="image-20240304181238714"></p><p><img src="./读-你是这世界写给我的情书/image-20240304181255296.png" alt="image-20240304181255296"></p><p>文字的魅力就在于短短几行，可以把遗憾写的淋漓尽致。</p><p><img src="./读-你是这世界写给我的情书/image-20240304181614935.png" alt="image-20240304181614935"></p><p>好想要个妹妹呀！</p><p><img src="./读-你是这世界写给我的情书/image-20240304181906261.png" alt="image-20240304181906261"></p><p>因为你要过马路，所以我就希望全世界都没有车呀。</p><p><img src="./读-你是这世界写给我的情书/image-20240304182537132.png" alt="image-20240304182537132"></p><p>心都化了</p><p><img src="./读-你是这世界写给我的情书/image-20240304183026360.png" alt="image-20240304183026360"></p><p>好可爱的母亲</p><p><img src="./读-你是这世界写给我的情书/image-20240304183838300.png" alt="image-20240304183838300"></p><p>有时候突然就发现自己有保护重要之人的责任。</p><p>3-26</p><p>妹妹就是天使</p><p><img src="./读-你是这世界写给我的情书/image-20240326215831952.png" alt="image-20240326215831952"></p><p><img src="./读-你是这世界写给我的情书/image-20240326220049818.png" alt="image-20240326220049818"></p><p><img src="./读-你是这世界写给我的情书/image-20240326220326642.png" alt="image-20240326220326642"></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudFlare导致网址[重定向的次数过多]</title>
      <link href="/posts/362735d1/"/>
      <url>/posts/362735d1/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon modern"><p>这篇文章来自摘抄，源文附在页尾，重定向问题还是有些复杂，先挖个坑。</p></div><p>在 CloudFlare 的 SSL/TLS 菜单里将「SSL/TLS 加密模式」设置为完全（Strict）即可。</p><img src="/posts/362735d1/image-20240227192529430.png" class="" title="image-20240227192529430"><h2 id="CloudFlare-造成重定向的次数过多的原因"><a href="#CloudFlare-造成重定向的次数过多的原因" class="headerlink" title="CloudFlare 造成重定向的次数过多的原因"></a>CloudFlare 造成重定向的次数过多的原因</h2><p>当网站开启了 CloudFlare 服务，用户访问我们的网站时，其实访问的离用户比较近的 Cloudflare 服务器，Cloudflare 再代理用户请求我们的源服务器，以达到加速和保护源服务器的目的。Cloudflare 代理用户请求我们源服务器获取网页资源的过程叫回源。</p><p>Cloudflare 造成循环重定向的错误就出在了回源的过程中，造成这种错误的原因就是 http 和 https 之间的重定向。</p><p>Cloudflare Crypto 的 SSL 中有 4 个选项 (如下)，其中 Off 就是不启用 SSL，通过 HTTP 协议访问网站。另外 3 种是通过 HTTPS 协议访问网站。</p><h2 id="Cloudflare-CDN-配置"><a href="#Cloudflare-CDN-配置" class="headerlink" title="Cloudflare CDN 配置"></a>Cloudflare CDN 配置</h2><p>Flexible：当我们的源网站没有配置 HTTPS 支持时，启用这个选项，Cloudflare 会在回源的时候通过 HTTP 协议访问我们的网站。<br>Full：当我们的源网站支持 HTTPS，但是 HTTPS 证书和域名不匹配或者是自签名证书时，Cloudflare 会通过 HTTPS 协议访问源网站，但不会验证证书，也就是说，即使我们的源网站提供的 HTTPS 证书不受浏览器信任，Cloudflare 也会通过 HTTPS 回源网站。<br>Full (strict)：当我们的源网站支持 HTTP ，并且证书有效时 (未过期且受信任)。Cloudflare 会通过 HTTPS 协议访问源网站，并在每个请求过程中验证证书。<br>了解了上面各个设置的功能，我们来看一下 Cloudflare 的循环重定向问题是怎么出现的，在 Cloudflare 中开启了 SSL 后，访问网站时出现循环重定向需满足下面两个条件：</p><p>SSL 中设置了 Flexible，CDN 以 HTTP 协议回源网站。<br>源网站支持 HTTPS，并且设置了通过 HTTP 协议访问时，自动跳转到 HTTPS 协议。<br>到这里，可能就有朋友发现问题了，我们访问 Cloudflare 的 CDN 服务器的时候，是通过 HTTPS 访问的，CDN 访问源网站的时候，是通过 HTTP 访问的，源网站上 HTTP 又自动跳转了 HTTPS，完美的一个循环重定向。重定向的次数多了，浏览器就撂挑子报出了 ERR_TOO_MANY_REDIRECTS 的错误。</p><h2 id="CloudFlare-造成重定向的次数过多问题的解决办法"><a href="#CloudFlare-造成重定向的次数过多问题的解决办法" class="headerlink" title="CloudFlare 造成重定向的次数过多问题的解决办法"></a>CloudFlare 造成重定向的次数过多问题的解决办法</h2><p>知道了循环重定向的原因，我们也就知道了怎么解决这个问题，通过测试，下面的两种设置方法都可以解决 Cloudflare 循环重定向的问题。</p><p>SSL 中选择 Full (strict) 或者 Full (strict)，让 CDN 回源的时候使用 HTTPS 的方式回源，没有 HTTP 什么事了，就不会跳来跳去了<br>源网站不设置 HTTPS 支持或者 不设置 HTTP 跳转 HTTPS，让 Cloudflare 回源的时候使用 HTTP 方式获取资源。<br>修改了 CloudFlare 设置后，可能需要过几分钟或清理浏览器缓存后才能生效。</p><p>除了 Cloudflare，使用其他 CDN 提供商的时候，也可能会出现这个问题，如果设置了 CDN 后，遇到了 Chrome 报重定向次数过多的问题，可以通过上面的思路查找问题。如果你在使用其他 CDN 的时候也遇到了类似的问题，欢迎在评论中提出，让更多的朋友看到。</p><p>来源：<a href="https://www.shenghuahuancai.com/posts/使用CloudFlare导致网站重定向的次数过多解决方案/">使用 CloudFlare 导致网站「重定向的次数过多」解决方案 | 生化环材 (shenghuahuancai.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 解决问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudFlare </tag>
            
            <tag> 重定向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7开放及查看端口</title>
      <link href="/posts/53ca99bd/"/>
      <url>/posts/53ca99bd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-开放端口"><a href="#1-开放端口" class="headerlink" title="1.开放端口"></a>1.开放端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5672/tcp --permanent   # 开放5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=5672/tcp --permanent  #关闭5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload   # 配置立即生效</span><br></pre></td></tr></table></figure><h2 id="2-查看防火墙所有开放的端口"><a href="#2-查看防火墙所有开放的端口" class="headerlink" title="2.查看防火墙所有开放的端口"></a>2.查看防火墙所有开放的端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h2 id="3-关闭防火墙"><a href="#3-关闭防火墙" class="headerlink" title="3.关闭防火墙"></a>3.关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h2 id="4-查看防火墙状态"><a href="#4-查看防火墙状态" class="headerlink" title="4.查看防火墙状态"></a>4.查看防火墙状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><h2 id="5-查看监听的端口"><a href="#5-查看监听的端口" class="headerlink" title="5.查看监听的端口"></a>5.查看监听的端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt</span><br></pre></td></tr></table></figure><p>PS:centos7默认没有 netstat 命令，需要安装 net-tools 工具，yum install -y net-tools</p><h2 id="6-检查端口被哪个进程占用"><a href="#6-检查端口被哪个进程占用" class="headerlink" title="6.检查端口被哪个进程占用"></a>6.检查端口被哪个进程占用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt |grep 5672</span><br></pre></td></tr></table></figure><h2 id="7-查看进程的详细信息"><a href="#7-查看进程的详细信息" class="headerlink" title="7.查看进程的详细信息"></a>7.查看进程的详细信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps 6832</span><br></pre></td></tr></table></figure><h2 id="8-中止进程"><a href="#8-中止进程" class="headerlink" title="8.中止进程"></a>8.中止进程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 6832</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos7 </tag>
            
            <tag> 端口 </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+butterfly安装</title>
      <link href="/posts/53ca99bd/"/>
      <url>/posts/53ca99bd/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>官网下载git，然后安装</p><p><a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>官网如下</p><p><a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p><h2 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">node</span> -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="查看hexo信息"><a href="#查看hexo信息" class="headerlink" title="查看hexo信息"></a>查看hexo信息</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> -v</span><br></pre></td></tr></table></figure><h3 id="选择一个文件夹运行下面命令"><a href="#选择一个文件夹运行下面命令" class="headerlink" title="选择一个文件夹运行下面命令"></a>选择一个文件夹运行下面命令</h3><blockquote><p>输入hexo init初始化(耐心等待…) 初始化后文件目录下会多出如下图文件和文件夹</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> init</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install</span><br></pre></td></tr></table></figure><h3 id="输入命令-hexo-generate可以缩写hexo-g-生成HTML页面"><a href="#输入命令-hexo-generate可以缩写hexo-g-生成HTML页面" class="headerlink" title="输入命令 hexo generate可以缩写hexo g 生成HTML页面"></a>输入命令 <code>hexo generate</code>可以缩写<code>hexo g</code> 生成HTML页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>会多出public文件夹如下图，public文件夹内是hexo生成的html文件还有css、js、json</p><h3 id="使用命令-hexo-server-可缩写hexo-s启动服务"><a href="#使用命令-hexo-server-可缩写hexo-s启动服务" class="headerlink" title="使用命令 hexo server 可缩写hexo s启动服务"></a>使用命令 <code>hexo server</code> 可缩写<code>hexo s</code>启动服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>npm方式目录太深了，后改用git方式安装，git不通最后用的gitee</p><p>通过 npm 安装不会在<code>themes</code>里生成主题文件夹，而是在<code>node_modules</code>里生成，找<code>hexo-theme-butterfly</code>文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//npm方式</span><br><span class="line">npm install hexo-theme-butterfly</span><br><span class="line">//git方式</span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line">//gitee方式</span><br><span class="line">git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改 Hexo 根目录下的 _config.yml文件，应用主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><h3 id="安装渲染插件"><a href="#安装渲染插件" class="headerlink" title="安装渲染插件"></a>安装渲染插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>复制一份主题的配置文件<code>_config.yml</code>到根目录下面命名为<code>_config.butterfly.yml</code>方便后续管理。</p><h2 id="部署项目到Github远程仓库"><a href="#部署项目到Github远程仓库" class="headerlink" title="部署项目到Github远程仓库"></a>部署项目到Github远程仓库</h2><h3 id="登录Github新建一个仓库，仓库名必须为你的Github用户名-github-io-例如-我的用户名是-aaa-那么格式因该为：aaa-github-io"><a href="#登录Github新建一个仓库，仓库名必须为你的Github用户名-github-io-例如-我的用户名是-aaa-那么格式因该为：aaa-github-io" class="headerlink" title="登录Github新建一个仓库，仓库名必须为你的Github用户名.github.io  例如: 我的用户名是:aaa 那么格式因该为：aaa.github.io"></a>登录Github新建一个仓库，仓库名必须为你的<code>Github用户名.github.io</code>  例如: 我的用户名是:<code>aaa</code> 那么格式因该为：<code>aaa.github.io</code></h3><h3 id="回到Git-Bash中，配置Github账户信息（用户名和邮箱都替换成你自己Github上的）："><a href="#回到Git-Bash中，配置Github账户信息（用户名和邮箱都替换成你自己Github上的）：" class="headerlink" title="回到Git Bash中，配置Github账户信息（用户名和邮箱都替换成你自己Github上的）："></a>回到Git Bash中，配置Github账户信息（<code>用户名</code>和<code>邮箱</code>都替换成你自己Github上的）：</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="在Git-Bash中输入：ssh-keygen-t-rsa-C-quot-你的Github邮箱-quot-生成ssh"><a href="#在Git-Bash中输入：ssh-keygen-t-rsa-C-quot-你的Github邮箱-quot-生成ssh" class="headerlink" title="在Git Bash中输入：ssh-keygen -t rsa -C &quot;你的Github邮箱&quot; 生成ssh"></a>在Git Bash中输入：<code>ssh-keygen -t rsa -C &quot;你的Github邮箱&quot;</code> 生成ssh</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-<span class="attribute">keygen</span> -t rsa -C <span class="string">&quot;你的Github邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="然后按Git-Bash给出的路径-C-Users-用户文件夹-ssh-找到id-rsa-pub文件-并复制其中的内容"><a href="#然后按Git-Bash给出的路径-C-Users-用户文件夹-ssh-找到id-rsa-pub文件-并复制其中的内容" class="headerlink" title="然后按Git Bash给出的路径(C:\Users\用户文件夹\.ssh)找到id_rsa.pub文件 并复制其中的内容"></a>然后按Git Bash给出的路径<code>(C:\Users\用户文件夹\.ssh)</code>找到<code>id_rsa.pub</code>文件 并复制其中的内容</h3><h3 id="进到新建的Github仓库-点击右上角setting进入设置找到Deploykeys选择-Add-Deploy-keys-Title随便填写-Key的内容填刚才id-rsa-pub文件中复制的内容"><a href="#进到新建的Github仓库-点击右上角setting进入设置找到Deploykeys选择-Add-Deploy-keys-Title随便填写-Key的内容填刚才id-rsa-pub文件中复制的内容" class="headerlink" title="进到新建的Github仓库 点击右上角setting进入设置找到Deploykeys选择 Add Deploy keys Title随便填写 Key的内容填刚才id_rsa.pub文件中复制的内容"></a>进到新建的Github仓库 点击右上角<code>setting</code>进入设置找到<code>Deploykeys</code>选择 <code>Add Deploy keys</code> <code>Title</code>随便填写 <code>Key</code>的内容填刚才<code>id_rsa.pub</code>文件中复制的内容</h3><h3 id="查看连接是否成功"><a href="#查看连接是否成功" class="headerlink" title="查看连接是否成功"></a>查看连接是否成功</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure><p>返回值：Hi xxx!You’re successfully authenticated… 成功。</p><h3 id="检查全局Git"><a href="#检查全局Git" class="headerlink" title="检查全局Git"></a>检查全局Git</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> config --list</span><br></pre></td></tr></table></figure><h3 id="用记事本打开的Hexo项目文件夹下单-config-yml文件，拉到最底部找到deploy-填写如下内容-注意-冒号后面有个空格"><a href="#用记事本打开的Hexo项目文件夹下单-config-yml文件，拉到最底部找到deploy-填写如下内容-注意-冒号后面有个空格" class="headerlink" title="用记事本打开的Hexo项目文件夹下单_config.yml文件，拉到最底部找到deploy:填写如下内容(注意:冒号后面有个空格)"></a>用记事本打开的Hexo项目文件夹下单<code>_config.yml</code>文件，拉到最底部找到<code>deploy:</code>填写如下内容(注意:冒号后面有个空格)</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: &#x27;git&#x27;</span><br><span class="line">    repo: https://github.com/你的用户名/你的用户名.github.io.<span class="attribute">git</span></span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h3 id="13-回到Gitbash中，进入你的Hexo目录，分别执行以下命令"><a href="#13-回到Gitbash中，进入你的Hexo目录，分别执行以下命令" class="headerlink" title="13. 回到Gitbash中，进入你的Hexo目录，分别执行以下命令"></a>13. 回到Gitbash中，进入你的Hexo目录，分别执行以下命令</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install hexo-deployer-git --save  <span class="comment">#安装部署插件</span></span><br><span class="line">hexo clean                            <span class="comment">#清除缓存       可缩写hexo c</span></span><br><span class="line">hexo generate                         <span class="comment">#生成静态文件    可缩写hexo g</span></span><br><span class="line">hexo deploy                           <span class="comment">#部署/推送到Github   可缩写hexo d</span></span><br></pre></td></tr></table></figure><h3 id="14-在浏览器中输入http-你的Github用户名-github-io-就可以看到你的个人博客"><a href="#14-在浏览器中输入http-你的Github用户名-github-io-就可以看到你的个人博客" class="headerlink" title="14. 在浏览器中输入http://你的Github用户名.github.io 就可以看到你的个人博客"></a>14. 在浏览器中输入<code>http://你的Github用户名.github.io</code> 就可以看到你的个人博客</h3><h3 id="三、绑定域名"><a href="#三、绑定域名" class="headerlink" title="三、绑定域名"></a>三、绑定域名</h3><p>本机<code>ping</code>一下你的GitHub仓库地址<code>github用户表.github.io</code>,查看返回的IP地址。添加域名解析：一条为a的，主机记录填写@ ，地址填写刚刚返回的ip地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping github用户表.github.io</span><br></pre></td></tr></table></figure><p>在添加一条CNAME地址，主机记录填写WWW，地址填写github仓库地址:<code>github用户表.github.io</code></p><h3 id="18-登陆Github官网打开自己的Pages仓库，点击右上角的settings进入仓库设置-往下滑找到Github-Pages-在Custom-domain-输入域名"><a href="#18-登陆Github官网打开自己的Pages仓库，点击右上角的settings进入仓库设置-往下滑找到Github-Pages-在Custom-domain-输入域名" class="headerlink" title="18. 登陆Github官网打开自己的Pages仓库，点击右上角的settings进入仓库设置, 往下滑找到Github Pages 在Custom domain 输入域名"></a>18. 登陆Github<a href="https://link.zhihu.com/?target=https%3A//github.com/">官网</a>打开自己的<code>Pages</code>仓库，点击右上角的<code>settings</code>进入仓库设置, 往下滑找到<code>Github Pages</code> 在Custom domain 输入域名</h3><h3 id="20-完了之后在地址栏输入即可打开你的个人博客了"><a href="#20-完了之后在地址栏输入即可打开你的个人博客了" class="headerlink" title="20. 完了之后在地址栏输入即可打开你的个人博客了"></a>20. 完了之后在地址栏输入即可打开你的个人博客了</h3><p>新建页面</p><p>hexo new page 名称</p><p>新建文章</p><p>hexo new “名称”</p><p><a href="https://fontawesome.com/search">图标 (fontawesome.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端笔记</title>
      <link href="/posts/7c8703ee/"/>
      <url>/posts/7c8703ee/</url>
      
        <content type="html"><![CDATA[<h2 id="前端笔记"><a href="#前端笔记" class="headerlink" title="前端笔记"></a>前端笔记</h2><p>常用的属性</p><div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>nth</td><td>伪元素选择</td></tr><tr><td>flex</td><td>弹性布局</td></tr><tr><td></td><td>居中</td></tr><tr><td></td><td>去除a下划线</td></tr><tr><td></td><td>去除li小圆点</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td></tr></tbody></table></div><p>flex布局<br>text -<br>just-<br>line-<br>图片下面DIV会有缝隙，图片设置为块级元素解决。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插件</title>
      <link href="/posts/5a3fb175/"/>
      <url>/posts/5a3fb175/</url>
      
        <content type="html"><![CDATA[<p>看到图片中有很多，我不禁在想是官方的还是集成的，又或者是其他什么的呢？每一个都有一段故事吧。总之姑且不去想这些着重于自己想要实现的部分吧。<br>详细的语法见github项目源或者百度吧！</p><h2 id="第三方资源本地化"><a href="#第三方资源本地化" class="headerlink" title="第三方资源本地化"></a>第三方资源本地化</h2><p>安装好了之后修改配置文件<code>third_party_provider: local</code>,位置在<code>_config.butterfly.yml</code>末尾的位置，表示第三方 js 的 cdn 配置为本地<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-extjs</span><br></pre></td></tr></table></figure><br>js那个太慢了，有时候还访问不了，所以想把资源下载到本地。发现有这么个插件，所以使用。<br>在安装的时候会报错，大多是版本问题。目前好像没啥大的影响。然后安装后<code>hexo s</code>，报错，发现是少了一些东西。<code>hexo-butterfly-extjs/plugins.yml</code>中有安装的所以东西，按照报错少的东西名称去<code>npm install</code>安装就好了。大部分插件安装的位置在<code>node_modules</code><br>还有一种方法是下载文件到本地，然后在引用。配置文件尾部有一个 <code>option:</code>在哪里配置本地文件地址。</p><h2 id="图片-hexo-asset-img"><a href="#图片-hexo-asset-img" class="headerlink" title="图片 hexo-asset-img"></a>图片 <code>hexo-asset-img</code></h2><a href="/posts/34c7f5d/" title="hexo图片显示问题">用法见这里</a><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><a href="/posts/54667693/" title="标签外挂">用法见这里</a><h2 id="分栏-hexo-butterfly-article-double-row"><a href="#分栏-hexo-butterfly-article-double-row" class="headerlink" title="分栏 hexo-butterfly-article-double-row"></a>分栏 <code>hexo-butterfly-article-double-row</code></h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><br>在<code>_config.yml</code>最后添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 新加的双栏效果</span><br><span class="line">butterfly_article_double_row:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>不太满意想要微调，复制github上的源码到自定义文件中。<br><img src="/posts/5a3fb175/3.png" class="" title="alt text"><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#recent-posts&#123;</span><br><span class="line">margin-top:-1rem;  /*头部抵消间隔*/</span><br><span class="line">align-content:flex-start;</span><br><span class="line">display: flex;</span><br><span class="line">    flex-wrap: wrap; /*规定灵活的项目在必要的时候拆行或拆列。*/</span><br><span class="line">    justify-content: space-between; /*。*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item &#123;</span><br><span class="line">  /*max-height:324px;*/  /*文章容器最大高度*/</span><br><span class="line">  margin-top: 1rem; /*最小间距*/</span><br><span class="line">  display: inline-block;</span><br><span class="line">  height:auto; /*高度自动*/</span><br><span class="line">  width:49%;/*文章容器容器宽度*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item .post_cover &#123;</span><br><span class="line">  width: 100%; /*图片封面宽度*/</span><br><span class="line">    height: 200px;/*图片封面高度*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item .post_cover img.post_bg &#123;</span><br><span class="line">  width: 100%;/*图片宽度*/</span><br><span class="line">  height: 100%;/*图片高度*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#recent-posts &gt; .recent-post-item &gt;.recent-post-info &gt; .content &#123;</span><br><span class="line">display:none;/*隐藏文章详情*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item &#123;</span><br><span class="line"></span><br><span class="line">  -webkit-flex-direction: column; /*容器内部纵向排列*/</span><br><span class="line">  -ms-flex-direction: column; /*容器内部纵向排列*/</span><br><span class="line">  flex-direction: column; /*容器内部纵向排列*/</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item .left_radius &#123;</span><br><span class="line">    border-radius: 8px 8px 0 0;/*圆角修改*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item .right_radius &#123;</span><br><span class="line">    border-radius: 8px 8px 0 0;/*圆角修改*/</span><br><span class="line">&#125;</span><br><span class="line">.recent-post-item&#123;</span><br><span class="line">height:auto !important;/*容器高度自动*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.recent-post-info &#123;</span><br><span class="line">  </span><br><span class="line">  padding: 0 40px;/*容器内部文字左右间距*/</span><br><span class="line">  margin-top: 1em;/*容器内部文字上间距*/</span><br><span class="line">  width: 100%!important;/*容器宽度*/</span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item &gt; .recent-post-info &gt; .article-title &#123;</span><br><span class="line">    -webkit-line-clamp: 1;/*控制标题的行数*/</span><br><span class="line">    margin-top: 0.3rem; /*控制标题的上间距*/</span><br><span class="line">margin-bottom: 0.3rem;/*控制标题的下间距*/</span><br><span class="line">    color: var(--text-highlight-color);</span><br><span class="line">    font-size: 1.2em; /*控制标题的字体大小*/</span><br><span class="line">    line-height: 1.4;/*控制标题的行高*/</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">#recent-posts &gt; .recent-post-item &gt;.recent-post-info &gt; .article-meta-wrap &#123;</span><br><span class="line">margin-bottom: 1rem;/*控制标题meta信息的底部间距*/</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width: 768px) &#123;</span><br><span class="line">#recent-posts &gt; .recent-post-item &#123;</span><br><span class="line"> width:100%;/*控制手机自适应*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="页面网址数字固定化-hexo-abbrlink"><a href="#页面网址数字固定化-hexo-abbrlink" class="headerlink" title="页面网址数字固定化 hexo-abbrlink"></a>页面网址数字固定化 <code>hexo-abbrlink</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>修改配置文件<code>_config.yml</code><br><img src="/posts/5a3fb175/image1.png" class="" title="alt text"><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink/ </span><br></pre></td></tr></table></figure><br>在<code>_config.yml</code>最后添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># abbrlink config 新加的页面网址数字固定化</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32      #support crc16(default) and crc32</span><br><span class="line">  rep: hex        #support dec(default) and hex</span><br><span class="line">  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) </span><br><span class="line">  # Generate categories from directory-tree</span><br><span class="line">  # depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br><span class="line">  auto_category:</span><br><span class="line">     enable: true  #true(default)</span><br><span class="line">     depth:        #3(default)</span><br><span class="line">     over_write: false </span><br><span class="line">  auto_title: false #enable auto title, it can auto fill the title by path</span><br><span class="line">  auto_date: false #enable auto date, it can auto fill the date by time today</span><br><span class="line">  force: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink. This only updates abbrlink rather than other front variables.</span><br></pre></td></tr></table></figure></p><h2 id="hexo-swiper-文章置顶轮播图插件"><a href="#hexo-swiper-文章置顶轮播图插件" class="headerlink" title="hexo-swiper 文章置顶轮播图插件"></a>hexo-swiper 文章置顶轮播图插件</h2><p>安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-swiper-bar --save</span><br></pre></td></tr></table></figure></p><p>在<code>_config.yml</code>最后添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">swiper:</span><br><span class="line">  enable: true</span><br><span class="line">  priority: 2</span><br><span class="line">  enable_page: /</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  temple_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;height: auto;width: 100%&quot;&gt;&lt;div class=&quot;blog-slider swiper-container-fade swiper-container-horizontal&quot; id=&quot;swiper_container&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure><br>如果显示有问题，看看上面添加的代码的缩进是否有问题（我反正是出了这个问题）</p><p>想要轮播的文章在文章头部添加：<br>权重/内容/图片<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">swiper_index: 1</span><br><span class="line">swiper_desc: 标签外挂语法+效果</span><br><span class="line">swiper_cover: /images/cover/1.jpg</span><br></pre></td></tr></table></figure></p><h2 id="页面加密"><a href="#页面加密" class="headerlink" title="页面加密"></a>页面加密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>将 “password” 字段添加到文章信息头<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2016-03-30 21:18:02</span><br><span class="line">password: hello</span><br></pre></td></tr></table></figure></p><h3 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h3><p>文章信息头<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 作为日记加密</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure><br>源文地址<br><a href="https://gitcode.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">https://gitcode.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p><h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><p><a href="https://fontawesome.com/search">图标 (fontawesome.com)</a></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>注意字体是否有版权问题。<br><a href="https://www.fonts.net.cn/">字体天下</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo+Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>包管理npm/yarn/scoop</title>
      <link href="/posts/bd3124f3/"/>
      <url>/posts/bd3124f3/</url>
      
        <content type="html"><![CDATA[<h2 id="常用包管理工具"><a href="#常用包管理工具" class="headerlink" title="常用包管理工具"></a>常用包管理工具</h2><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p>首先需要安装<strong>Node.js</strong>，<strong>npm</strong>是Node.js的官方包管理工具，用于在 Node.js 环境中安装、管理和共享代码包。能够管理模块的版本、依赖关系等。</p><p>包管理分为3种方式：全局，用户，项目文件夹。</p><p>全局管理在后面加上<code>-g</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm -v             <span class="comment"># 查看版本</span></span><br><span class="line">npm install        <span class="comment"># npm将下载package.json中列出的满足版本要求的 dependencies 和 devDependencies</span></span><br><span class="line">npm install xxx    <span class="comment"># 包安装</span></span><br><span class="line">npm uninstall xxx  <span class="comment"># 卸载</span></span><br><span class="line">npm list  <span class="comment"># 查看已安装的包</span></span><br><span class="line">npm update    <span class="comment"># 更新全部包</span></span><br><span class="line">npm update xxx  <span class="comment"># 更新指定包</span></span><br><span class="line">npm init <span class="comment"># 建立一个package.json文件，需要填写项目的相关信息</span></span><br><span class="line">npm search <span class="comment"># 包搜索</span></span><br><span class="line">npm search xxx    <span class="comment"># 可以带关键字搜索（如搜索：s）</span></span><br><span class="line"><span class="comment">##########################################################</span></span><br><span class="line">npm run <span class="comment"># 运行定义在 package.json 文件中的脚本</span></span><br><span class="line">npm publish<span class="comment"># 用于发布包到 npm 上</span></span><br><span class="line">npm config<span class="comment"># 用于配置 npm</span></span><br><span class="line">npm config list  <span class="comment"># 列出配置项</span></span><br></pre></td></tr></table></figure><p>命令更详细可见：<a href="https://nodejs.cn/npm/about-npm/">关于 npm - npm 中文文档 (nodejs.cn)</a></p><ol><li><p>修改镜像源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org  <span class="comment"># 设置镜像源为淘宝</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com  <span class="comment"># 还原默认镜像源</span></span><br></pre></td></tr></table></figure><p>可以查看修改的配置信息在<code>C:\Users\17671\.npmrc</code>文件中</p></li><li><p>修改全局位置</p></li></ol><p>​    全局默认位置在：<code>C:\Users\用户名\AppData\Roaming\npm</code>下，修改为node.js安装目录下方便管理</p><img src="/posts/bd3124f3/image-20240627161025910.png" class="" title="image-20240627161025910"><p>​    在Node.js中新建2个文件夹，如图</p><img src="/posts/bd3124f3/image-20240627161512211.png" class="" title="image-20240627161512211"><p>​    输入以下命令修改设置（指向刚刚新建的文件夹位置）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;C:\Program Files\nodejs\node_global&quot;</span>  <span class="comment">#全局安装目录</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;C:\Program Files\nodejs\node_cache&quot;</span>  <span class="comment">#缓存目录</span></span><br></pre></td></tr></table></figure><p>​    添加一个系统环境变量变量名：<code>NODE_PATH</code> 值：<code>C:\Program Files\nodejs\node_global\node_modules</code></p><ol><li>本地用户安装位置：</li></ol><img src="/posts/bd3124f3/image-20240627152738707.png" class="" title="image-20240627152738707"><ol><li>如果项目文件夹包含package.json文件，那么包会安装在项目目录中node_modules文件夹下</li></ol><p>​    项目文件夹安装位置：</p><img src="/posts/bd3124f3/image-20240627155617668.png" class="" title="image-20240627155617668"><ol><li>package.json文件中列出了安装的包</li></ol><img src="/posts/bd3124f3/image-20240627165605628.png" class="" title="image-20240627165605628"><ol><li>项目中使用模块</li></ol><img src="/posts/bd3124f3/image-20240627165828130.png" class="" title="image-20240627165828130"><h2 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yarn -v<span class="comment"># 查看版本</span></span><br><span class="line">yarn init <span class="comment"># 初始化一个新项目</span></span><br><span class="line">yarn add xxx <span class="comment"># 添加依赖包</span></span><br><span class="line">yarn upgrade <span class="comment"># 升级依赖包</span></span><br><span class="line">yarn remove <span class="comment"># 移除依赖包</span></span><br><span class="line">yarn         <span class="comment"># 安装项目的全部依赖或者 yarn install</span></span><br></pre></td></tr></table></figure><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><h2 id="scoop"><a href="#scoop" class="headerlink" title="scoop"></a>scoop</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scoop serch xxx</span><br><span class="line">scoop install xxx</span><br><span class="line">scoop uninstall xxx</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_43440602/article/details/128975932">https://blog.csdn.net/qq_43440602/article/details/128975932</a></p>]]></content>
      
      
      <categories>
          
          <category> 包管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> yarn </tag>
            
            <tag> scoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blender笔记</title>
      <link href="/posts/90fd357f/"/>
      <url>/posts/90fd357f/</url>
      
        <content type="html"><![CDATA[<h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p><img src="blender/image-20240217105730894.png" alt="image-20240217105730894"></p><div class="table-container"><table><thead><tr><th>快捷键</th><th>效果</th></tr></thead><tbody><tr><td>x</td><td>删除</td></tr><tr><td>s</td><td>缩放</td></tr><tr><td>ctrl+a</td><td>应用</td></tr><tr><td>shift+d</td><td>复制</td></tr><tr><td>shift+右键</td><td>游标位置</td></tr><tr><td>/</td><td>隔离模式</td></tr><tr><td>~</td><td>视图切换</td></tr><tr><td>alt+r</td><td>复位旋转</td></tr><tr><td>m</td><td>新建组</td></tr><tr><td>编辑模式下: e</td><td>挤出</td></tr><tr><td>ctrl+l</td><td>材质关联</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blender </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cuda和cudnn安装与python环境配置</title>
      <link href="/posts/13c3edd8/"/>
      <url>/posts/13c3edd8/</url>
      
        <content type="html"><![CDATA[<h2 id="帮助-gt-系统信息，查看最高支持的版本"><a href="#帮助-gt-系统信息，查看最高支持的版本" class="headerlink" title="帮助-&gt;系统信息，查看最高支持的版本"></a>帮助-&gt;系统信息，查看最高支持的版本</h2><img src="/posts/13c3edd8/image-20240127015532602.png" class="" title="image-20240127015532602"><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p><a href="https://blog.csdn.net/weixin_44177494/article/details/120444922">NVIDIA CUDA各版本下载链接(包括最新12、11版本和以往10.2版本）_cuda12下载-CSDN博客</a></p><p><a href="https://developer.nvidia.com/rdp/cudnn-archive">cuDNN Archive | NVIDIA Developer</a></p><img src="/posts/13c3edd8/image-20240127020251906.png" class="" title="image-20240127020251906"><h2 id="下载anaconda"><a href="#下载anaconda" class="headerlink" title="下载anaconda"></a>下载anaconda</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">Index of /anaconda/archive/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><h2 id="配置清华源"><a href="#配置清华源" class="headerlink" title="配置清华源"></a>配置清华源</h2><p>找到用户文件夹<code>C:\Users\&lt;用户名&gt;</code>下的这个文件修改镜像源</p><img src="/posts/13c3edd8/image-20240127015808788.png" class="" title="image-20240127015808788"><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">anaconda | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  deepmodeling: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cuda+cudnn </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 层叠样式表</title>
      <link href="/posts/2e2f9c65/"/>
      <url>/posts/2e2f9c65/</url>
      
        <content type="html"><![CDATA[<h2 id="css-引入方式"><a href="#css-引入方式" class="headerlink" title="css 引入方式"></a>css 引入方式</h2><img src="/posts/2e2f9c65/7.png" class="" title="Alt text"><p>内嵌式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br>外联式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./名称.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>行内式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;这里写css样式&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 样式之间分号分割 --&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><blockquote><ol><li>标签选择器</li><li>类选择器</li><li>id选择器</li><li>通配符选择器</li></ol></blockquote><h4 id="标签选择器：直接给标签"><a href="#标签选择器：直接给标签" class="headerlink" title="标签选择器：直接给标签"></a>标签选择器：直接给标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    /*具体样式*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类选择器：点-自定义名称"><a href="#类选择器：点-自定义名称" class="headerlink" title="类选择器：点+自定义名称"></a>类选择器：点+自定义名称</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名&#123;</span><br><span class="line">    css属性名:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数字，字母，，中划线命名，不能数字，中划线开头</li><li>一个标签可以有多个类名，空格隔开</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;类一 类二&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="id-选择器：-自定义名称"><a href="#id-选择器：-自定义名称" class="headerlink" title="id 选择器：#+自定义名称"></a>id 选择器：#+自定义名称</h4><blockquote><p>一般配合JS<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#类名&#123;</span><br><span class="line">    css属性名:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;id名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>数字，字母，下划线，中划线命名，不能数字，中划线开头</li><li>一个标签只能有一个id属性值</li><li>一个id选择器只能选中一个标签</li></ul></blockquote><h4 id="通配符选择器："><a href="#通配符选择器：" class="headerlink" title="通配符选择器： *"></a>通配符选择器： *</h4><blockquote><p>一般用于清空默认样式：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">*&#123;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">margin</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">padding</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br>作用：给页面所以标签设置样式<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    css属性名:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="字体和文本样式"><a href="#字体和文本样式" class="headerlink" title="字体和文本样式"></a>字体和文本样式</h2><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p><code>font</code> 属性</p><img src="/posts/2e2f9c65/8.png" class="" title="Alt text"><p>谷歌默认==16px==大小</p><h4 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h4><div class="table-container"><table><thead><tr><th>文本样式</th><th>属性名</th></tr></thead><tbody><tr><td>文本缩进</td><td>text-indent</td></tr><tr><td>文本水平对齐方式</td><td>text-align</td></tr><tr><td>文本修饰</td><td>text-decoration</td></tr></tbody></table></div><p>单位： px,em</p><blockquote><p>em: 一个em为一个文字大小</p></blockquote><p>下划线:<code>text-decoration:underline</code></p><blockquote><p>开发时，使用<code>text-decoration:none</code>去除<code>&lt;a&gt;</code>标签的下划线</p></blockquote><p>行高：<code>line-height</code></p><blockquote><p>取值:</p><ol><li>数字+px</li><li>倍数(直接填数字，表示字体大小的多少倍)</li></ol></blockquote><h2 id="标签居中"><a href="#标签居中" class="headerlink" title="标签居中"></a>标签居中</h2><blockquote><p><code>&lt;div&gt;,&lt;p&gt;,&lt;h&gt;</code><br>标签水平居中:  <code>margin: 0 auto;</code></p></blockquote><h2 id="选择器-1"><a href="#选择器-1" class="headerlink" title="选择器"></a>选择器</h2><h3 id="1-后代选择器：-空格"><a href="#1-后代选择器：-空格" class="headerlink" title="1. 后代选择器： 空格"></a>1. 后代选择器： <code>空格</code></h3><p>父级别的下的<strong>所有子和孙子集</strong>(包含孙子等等下子集)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-子代选择器：-gt"><a href="#2-子代选择器：-gt" class="headerlink" title="2. 子代选择器： &gt;"></a>2. 子代选择器： <code>&gt;</code></h3><p>父级别的下的<strong>直接</strong>子集</p><h3 id="3-并集选择器："><a href="#3-并集选择器：" class="headerlink" title="3. 并集选择器： ,"></a>3. 并集选择器： <code>,</code></h3><p>多个选择器同一种效果<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span>,<span class="selector-tag">b</span>&#123;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="4-交集选择器-选择器和选择器的直接连接"><a href="#4-交集选择器-选择器和选择器的直接连接" class="headerlink" title="4. 交集选择器 选择器和选择器的直接连接"></a>4. 交集选择器 <code>选择器和选择器的直接连接</code></h3><p>中间什么都不加<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">div</span><span class="selector-class">.a</span>&#123;&#125;</span></span><br><span class="line"><span class="language-css">   divdiv&#123;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="5-伪类选择器-选择器-hover"><a href="#5-伪类选择器-选择器-hover" class="headerlink" title="5. 伪类选择器  选择器:hover"></a>5. 伪类选择器  <code>选择器:hover</code></h3><p>悬停状态样式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器:hover&#123;</span><br><span class="line">    样式;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Emmet-语法"><a href="#Emmet-语法" class="headerlink" title="Emmet 语法"></a>Emmet 语法</h2><img src="/posts/2e2f9c65/9.png" class="" title="Alt text"><h2 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">属性值：</span><br><span class="line">background-image:url(&#x27;图片路径&#x27;);</span><br></pre></td></tr></table></figure><h4 id="平铺方式"><a href="#平铺方式" class="headerlink" title="平铺方式"></a>平铺方式</h4><p>属性名：<br>background-repeat:<br>取值|效果<br>—|—<br>repeat|（默认）水平和垂直都平铺<br>no-repeat|不平铺<br>repeat-x|沿着水平（X轴）平铺<br>repeat-Y|沿着垂直（Y轴）平铺</p><h4 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h4><p>属性名:取值;</p><ol><li><p><code>background-position:水平 垂直;</code></p><blockquote><p>水平+垂直居中<br><code>background-position:center;</code></p></blockquote></li><li><p><code>background-position:100px 100px;</code></p><blockquote><p>值可以取负</p></blockquote></li></ol><img src="/posts/2e2f9c65/3.png" class="" title="Alt text"><h2 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h2><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>,<span class="tag">&lt;<span class="name">p</span>&gt;</span>,<span class="tag">&lt;<span class="name">h</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>,<span class="tag">&lt;<span class="name">li</span>&gt;</span>,<span class="tag">&lt;<span class="name">dl</span>&gt;</span>,<span class="tag">&lt;<span class="name">dt</span>&gt;</span>,<span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">from</span>&gt;</span>,<span class="tag">&lt;<span class="name">header</span>&gt;</span>...</span><br></pre></td></tr></table></figure><ol><li>独占一行</li><li>可以设置宽高</li><li>宽度默认为父级宽度</li></ol><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>,<span class="tag">&lt;<span class="name">span</span>&gt;</span>,<span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>,<span class="tag">&lt;<span class="name">i</span>&gt;</span>,<span class="tag">&lt;<span class="name">s</span>&gt;</span>,<span class="tag">&lt;<span class="name">strong</span>&gt;</span>,<span class="tag">&lt;<span class="name">ins</span>&gt;</span>，<span class="tag">&lt;<span class="name">em</span>&gt;</span>,<span class="tag">&lt;<span class="name">del</span>&gt;</span>...</span><br></pre></td></tr></table></figure><ol><li>一行可以显示多个</li><li>不可以设置宽高</li><li>宽高默认有内容撑开</li></ol><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">img</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span>,<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>,<span class="tag">&lt;<span class="name">button</span>&gt;</span>,<span class="tag">&lt;<span class="name">select</span>&gt;</span>...</span><br></pre></td></tr></table></figure><ol><li>一行可以显示多个</li><li>可以设置宽高</li></ol><h3 id="元素显示模式切换"><a href="#元素显示模式切换" class="headerlink" title="元素显示模式切换"></a>元素显示模式切换</h3><div class="table-container"><table><thead><tr><th>属性</th><th>效果</th><th>使用频率</th></tr></thead><tbody><tr><td>display:block</td><td>转换为块级模式</td><td>较多</td></tr><tr><td>display：inline-block</td><td>转换为行内块元素</td><td>较多</td></tr><tr><td>display:inline</td><td>转换为行内元素</td><td>较少</td></tr></tbody></table></div><h3 id="html嵌套规范注意点"><a href="#html嵌套规范注意点" class="headerlink" title="html嵌套规范注意点"></a>html嵌套规范注意点</h3><blockquote><p>块级元素一般作为大容器，可以嵌套：文本，块级元素，行内元素，行内块元素等等…<br>但是：==p标签不要嵌套div、p、h 等块级元素==<br>a可以嵌套任意元素<br>但是：==a不让嵌套a标签==</p></blockquote><h2 id="CSS三大特性"><a href="#CSS三大特性" class="headerlink" title="CSS三大特性"></a>CSS三大特性</h2><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><img src="/posts/2e2f9c65/4.png" class="" title="Alt text"><h3 id="权重叠加"><a href="#权重叠加" class="headerlink" title="权重叠加"></a>权重叠加</h3><p>复合选择器的权重</p><img src="/posts/2e2f9c65/5.png" class="" title="Alt text"><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><div class="table-container"><table><thead><tr><th>盒子</th><th>组成</th></tr></thead><tbody><tr><td>内容区域</td><td>content</td></tr><tr><td>内边距区域</td><td>padding</td></tr><tr><td>边框区域</td><td>border</td></tr><tr><td>外边距区域</td><td>margin</td></tr></tbody></table></div><blockquote><p>内容区域=宽+高<br>边框：粗细，实线，颜色<br>border:10px solid red;<br>deshed 虚线， dotted 点线<br>快捷键：bd+tab</p></blockquote><h3 id="盒子内减"><a href="#盒子内减" class="headerlink" title="盒子内减"></a>盒子内减</h3><blockquote><p>原本的盒子，内边距和边框不在宽高中，但是设置下面的属性，那么内边距+边框+内容=宽高。</p></blockquote><p>盒子自动计算多余大小，在内容中减去<br><code>box-sizing:border-box;</code></p><h3 id="去除默认内外边距"><a href="#去除默认内外边距" class="headerlink" title="去除默认内外边距"></a>去除默认内外边距</h3><p>body 默认margin:8px<br>p 默认有上下margin<br>ul 默认有上下margin,padding-left</p><h3 id="去列表前符号"><a href="#去列表前符号" class="headerlink" title="去列表前符号"></a>去列表前符号</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list-style:none;</span><br></pre></td></tr></table></figure><h3 id="外边距合并"><a href="#外边距合并" class="headerlink" title="外边距合并"></a>外边距合并</h3><p>垂直布局的块元素，上下margin外边距会合并<br>取margin外边距的最大值</p><h3 id="行内标签的行高"><a href="#行内标签的行高" class="headerlink" title="行内标签的行高"></a>行内标签的行高</h3><p>行内标签的内/外边距上下不生效<br>通过改变行高生效： line-height:100px;</p><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><p>通过标签关系找特定标签</p><img src="/posts/2e2f9c65/1.png" class="" title="Alt text"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择器:nth-child(n)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">div:nth-child(n)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/posts/2e2f9c65/10.png" class="" title="Alt text"><blockquote><p>N的取值范围可以是常规数字。可以是常规公式</p></blockquote><p>用法，去除最后一张图片的右边距，实现每张图之间有边距</p><h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><div class="table-container"><table><thead><tr><th>伪元素</th><th>作用</th></tr></thead><tbody><tr><td>::before</td><td>在父元素的最前添加一个伪元素</td></tr><tr><td>::after</td><td>在父元素的最后面添加一个伪元素</td></tr></tbody></table></div><blockquote><p>必须设置content属性才可以生效<br>伪元素默认是行内元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">div::before&#123;</span><br><span class="line">    <span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line">    content:&#x27;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><blockquote><p>行内块和行内标签如果<code>代码换行</code>会显示间隙<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上面代码没有间隙 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上面代码有间隙 --&gt;</span></span><br></pre></td></tr></table></figure><br><code>float</code>浮动<br>脱离标准流</p></blockquote><!-- CSS书写顺序：浏览器执行效率更高 --><ol><li>浮动</li><li>盒子模型：margin border padding</li><li>文字样式</li></ol><h3 id="去除浮动"><a href="#去除浮动" class="headerlink" title="去除浮动"></a>去除浮动</h3><ol><li>给父级加高度</li><li><code>clear:both</code></li><li>单伪元素清除 <img src="/posts/2e2f9c65/11.png" class="" title="Alt text"></li><li>双伪元素清除<img src="/posts/2e2f9c65/12.png" class="" title="Alt text"></li><li>给父级添加: overflow:hidden;</li></ol><h3 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h3><img src="/posts/2e2f9c65/13.png" class="" title="Alt text"><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p><code>position</code></p><img src="/posts/2e2f9c65/15.png" class="" title="Alt text"><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>基于自己原来位置定位</p><h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>如果父级有定位相对于父级的位置<br>否则对body定位</p><p><code>position:absolute;</code></p><blockquote><p>脱离标准流，不占位<br>改变标签的显示模式的特点：具备行内块特点（一行，可以宽高）</p></blockquote><p>给父级一个相对定位，子给绝对定位实现一张图在父级范围内移动</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.a &#123;</span><br><span class="line">    position:relative;</span><br><span class="line">&#125;</span><br><span class="line">.a .b&#123;</span><br><span class="line">    position:absolute;</span><br><span class="line">    right:-10px;</span><br><span class="line">    top:10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="浏览器的绝对居中"><a href="#浏览器的绝对居中" class="headerlink" title="浏览器的绝对居中"></a>浏览器的绝对居中</h3><p>绝对定位的盒子不能使用margin auto居中<br>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    .a &#123;</span></span><br><span class="line"><span class="language-xml">    position:absolute;</span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 水平居中 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    left:50%;</span></span><br><span class="line"><span class="language-xml">    margin-left:宽度的一半;</span></span><br><span class="line"><span class="language-xml">     <span class="comment">&lt;!-- 垂直居中 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    top:50%;</span></span><br><span class="line"><span class="language-xml">    margin-top:高度的一半;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 位移，用来替换margin-left，margin-top --&gt;</span></span></span><br><span class="line"><span class="language-xml">    transform:transform(-50%,-50%)</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="底部遮罩效果"><a href="#底部遮罩效果" class="headerlink" title="底部遮罩效果"></a>底部遮罩效果</h4><img src="/posts/2e2f9c65/16.png" class="" title="Alt text"><h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.a &#123;</span><br><span class="line">    position:fixed;</span><br><span class="line">    left：0;</span><br><span class="line">    top:0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>脱离标准流，不占位置</li><li>行内块（要设置宽高）</li><li>以浏览器为参考，固定在浏览器中</li></ol><h3 id="元素的层级关系"><a href="#元素的层级关系" class="headerlink" title="元素的层级关系"></a>元素的层级关系</h3><p>标准流&lt;浮动&lt;定位<br>书写在下面的会压在上层</p><h2 id="装饰"><a href="#装饰" class="headerlink" title="装饰"></a>装饰</h2><h3 id="垂直方向对齐"><a href="#垂直方向对齐" class="headerlink" title="垂直方向对齐"></a>垂直方向对齐</h3><p>对齐居中<br><code>vertical-align:middle;</code><br>顶部对齐<br><code>vertical-align:top;</code></p><p>浏览器把行内和行内块标签当文字处理，默认基线对齐</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html基础语法</title>
      <link href="/posts/74b0ec72/"/>
      <url>/posts/74b0ec72/</url>
      
        <content type="html"><![CDATA[<h2 id="vs-code-快捷键"><a href="#vs-code-快捷键" class="headerlink" title="vs code 快捷键"></a>vs code 快捷键</h2><pre><code>注释  ctrl +/  选择同一行的相同内容 ctrl + d  &amp; ctrl +d   多选后 tab 可以多行向后缩进    shift+tab 向前缩进</code></pre><h2 id="css标签"><a href="#css标签" class="headerlink" title="css标签"></a>css标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> 换行<span class="tag">&lt;<span class="name">hr</span>&gt;</span>一行细线条<span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><pre><code>当前路径：&quot;./文件名&quot;  下级路径：&quot;文件夹名称/文件名称&quot;   上一级路径：&quot;../&quot;  上上级路径：  &quot; ../../ &quot;</code></pre><h2 id="音频-视频"><a href="#音频-视频" class="headerlink" title="音频/视频"></a>音频/视频</h2><p>标签<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>属性名|功能<br>-|-<br>controls|显示播放的控件<br>autoplay|自动播放（部分浏览器不支持）<br>loop|循环播放</p><h2 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h2><p>属性名    </p><pre><code>target       </code></pre><p>取值   </p><pre><code>_self 默认值，覆盖当前网页的跳转   _blank 新窗口跳转  </code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有-无序列表"><a href="#有-无序列表" class="headerlink" title="有/无序列表"></a>有/无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">有序</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">无序</span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><p>dd默认显示缩进效果<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="表格合并"><a href="#表格合并" class="headerlink" title="表格合并"></a>表格合并</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表格标题：  <span class="tag">&lt;<span class="name">caption</span>&gt;</span> <span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">表格整体标题，居中显示 </span><br><span class="line"></span><br><span class="line">表头单元格：   <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">表格第一行，文字加粗居中显示  </span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>表格</th><th>结构</th></tr></thead><tbody><tr><td>头:</td><td><code>&lt;thead&gt;&lt;/thead&gt;</code></td></tr><tr><td>身体：</td><td><code>&lt;tbody&gt;&lt;/tbody&gt;</code></td></tr><tr><td>脚：</td><td><code>&lt;tfoot&gt;&lt;/tfoot&gt;</code></td></tr></tbody></table></div><p>左右合并：  rowspan =” “<br>上下合并：  colspan=” “ </p><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><blockquote><p>autocomplete 关闭历史输入记录</p></blockquote><h3 id="input系列"><a href="#input系列" class="headerlink" title="input系列"></a>input系列</h3><h4 id="文本框"><a href="#文本框" class="headerlink" title="文本框"></a>文本框</h4><img src="/posts/74b0ec72/2.png" class="" title="Alt text"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文本框</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">上传文件</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>input提示属性:</p><blockquote><p><code>placeholder</code></p></blockquote><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>效果：</p><input type="text" placeholder="请输入用户名"><h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><p>同名属性为一组,实现单选效果</p><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br></pre></td></tr></table></figure></p><p>效果</p><p><input type="radio" name="sex">男</p><p><input type="radio" name="sex">女</p><p>默认选中添加： <code>checked</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>&gt;</span></span><br></pre></td></tr></table></figure><p><input type="radio" name="sex">男</p><p><input type="radio" name="sex" checked>女</p><h4 id="文本上传"><a href="#文本上传" class="headerlink" title="文本上传"></a>文本上传</h4><p>多文本上传:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure><input type="file" multiple><h4 id="input-按钮"><a href="#input-按钮" class="headerlink" title="input 按钮"></a>input 按钮</h4><p>value属性可以给按钮提供文本</p><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br></pre></td></tr></table></figure><br>效果</p><from><input type="submit" ><input type="reset" ><input type="button" value="按钮"></from><h3 id="button-按钮标签"><a href="#button-按钮标签" class="headerlink" title="button 按钮标签"></a>button 按钮标签</h3><h4 id="重置属性"><a href="#重置属性" class="headerlink" title="重置属性"></a>重置属性</h4><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> &gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> &gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> &gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><br>效果</p><form><button>无功能</button><button type="submit" >提交</button><button type="reset" >重置</button><button type="button" >普通按钮</button></form><h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><p>默认选中为:<code>selected</code></p><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>显示</p><select >    <option>选项一</option>    <option selected>选项二</option>    <option>选项三</option></select><h3 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h3><blockquote><p>cols:宽度<br>rows:行数<br>实际开发采用CSS控制，不用这2个属性控制</p></blockquote><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span>  <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><br>显示</p><textarea cols="15" rows="5"></textarea><h3 id="lable-标签"><a href="#lable-标签" class="headerlink" title="lable 标签"></a>lable 标签</h3><p>lable 标签包含其他标签，实现成为一个整体，可以实现选择块中任意部分都能选中。<br>例如下面选中文字也可以实现单选</p><p>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><br>显示</p><form>    <label>        <input type="radio" name="sex">男    </label>    <label>        <input type="radio" name="sex">女</label></form><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML5-新版本"><a href="#HTML5-新版本" class="headerlink" title="HTML5 新版本"></a>HTML5 新版本</h2><p>手机端常用标签<br>标签名|语义<br>-|-<br>header| 网页头部<br>nav |网页导航<br>footer |网页底部<br>aside |网页侧边栏<br>section|网页区块<br>article|网页文章</p><h2 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h2><img src="/posts/74b0ec72/6.png" class="" title="字符实体"><p>空格<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快捷键</title>
      <link href="/posts/576c43d4/"/>
      <url>/posts/576c43d4/</url>
      
        <content type="html"><![CDATA[<p>常用的快捷键</p><h2 id="清除本地DNS缓存"><a href="#清除本地DNS缓存" class="headerlink" title="清除本地DNS缓存"></a>清除本地DNS缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/flushdns</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>副词</title>
      <link href="/posts/43d22e81/"/>
      <url>/posts/43d22e81/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 副词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标签外挂</title>
      <link href="/posts/54667693/"/>
      <url>/posts/54667693/</url>
      
        <content type="html"><![CDATA[<p>描述：在<code>Butterfly</code>主题中，还自带一些额外的组件提供更多功能和UI方面的强化。<br>它们并不是标准的<code>markdown</code>格式，所以被称为<code>标签外挂（Tag Plugins）</code>。<br>每个模块分为<code>显示效果</code>和<code>代码</code>两个部分。</p><p><strong>需要安装插件</strong><a href="https://akilar.top/posts/615e2dec/">点这里，本篇文章大部分内容都来自这里</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></table></figure><h2 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h2><h3 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h3><p>效果：<mark class="hl-label default">文字</mark> ，<mark class="hl-label blue">文字</mark> ，<mark class="hl-label pink">文字</mark> ，<mark class="hl-label red">文字</mark> ，<mark class="hl-label purple">文字</mark> ，<mark class="hl-label orange">文字</mark> ，<mark class="hl-label green">文字</mark> 。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 样式 --&gt;</span><br><span class="line">&#123;% label text color %&#125;</span><br><span class="line">&lt;!-- 效果 --&gt;</span><br><span class="line">&#123;% label 文字 %&#125;</span><br><span class="line">&#123;% label 文字 blue %&#125;</span><br><span class="line">&#123;% label 文字 pink %&#125;</span><br><span class="line">&#123;% label 文字 red %&#125;</span><br><span class="line">&#123;% label 文字 purple %&#125;</span><br><span class="line">&#123;% label 文字 orange %&#125;</span><br><span class="line">&#123;% label 文字 green %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Hexo引用自己的文章"><a href="#Hexo引用自己的文章" class="headerlink" title="Hexo引用自己的文章"></a>Hexo引用自己的文章</h2><p>是文字名，不是标题名（名称.md）<br>没有文章标题的话，显示文章的title<br><code>&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link 标签外挂  %&#125;</span><br><span class="line">&#123;% post_link 标签外挂 我引用了一篇文章 %&#125;</span><br></pre></td></tr></table></figure><a href="/posts/54667693/" title="标签外挂">标签外挂</a><a href="/posts/54667693/" title="标签外挂">我引用了一篇文章</a><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><h3 id="显示效果-1"><a href="#显示效果-1" class="headerlink" title="显示效果"></a>显示效果</h3><div class="note no-icon modern"><p>默认 提示块标签</p></div><div class="note default no-icon modern"><p>default 提示块标签</p></div><div class="note primary no-icon modern"><p>primary 提示块标签</p></div><div class="note success no-icon modern"><p>success 提示块标签</p></div><div class="note info no-icon modern"><p>info 提示块标籤</p></div><div class="note warning no-icon modern"><p>warning 提示块标签</p></div><div class="note danger no-icon modern"><p>danger 提示块标签</p></div><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon modern %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon modern %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon modern %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon modern %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon modern %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon modern %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon modern %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h2 id="行内图片"><a href="#行内图片" class="headerlink" title="行内图片"></a>行内图片</h2><p>语法<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure></p><p>对于<code>文章页面</code>中的图片<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage image.png %&#125; 一段话。</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>这是 <img no-lazy class="inline" src="image.png" style="height:1.5em"/> 一段话。</p><p>对于<code>标签页面</code>路径为<code>标签名文件夹/图片文件夹/图片</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage ./index/image.jpg %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="单张图片"><a href="#单张图片" class="headerlink" title="单张图片"></a>单张图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><p><code>文章页</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image image.png %&#125;</span><br></pre></td></tr></table></figure><br><div class="img-wrap"><div class="img-bg"><img class="img" src="image.png"/></div></div></p><p><code>标签页</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image ./index/image.jpg %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Gallery-相册图库"><a href="#Gallery-相册图库" class="headerlink" title="Gallery 相册图库"></a>Gallery 相册图库</h2><details class="toggle" ><summary class="toggle-button" style="">如果显示有问题</summary><div class="toggle-content"><p>修改项目根目录\themes\butterfly\scripts\tag\gallery.js<br><img src="image-20240228124147504.png" alt="image-20240228124147504"><br>  修改这一行为<code>const imgUrl = urlFor(img)</code>=&gt;<code>const imgUrl = img</code>  </p></div></details><h3 id="显示效果-2"><a href="#显示效果-2" class="headerlink" title="显示效果"></a>显示效果</h3><div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='image.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/%E9%93%BE%E6%8E%A5%E7%9B%B8%E5%86%8C%E5%9C%B0%E5%9D%80'></a>  </figcaption>  </figure>  </div><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup &#x27;壁纸&#x27; &#x27;收藏的一些壁纸&#x27; &#x27;/链接相册地址&#x27; image.png %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="Gallery-相册"><a href="#Gallery-相册" class="headerlink" title="Gallery 相册"></a>Gallery 相册</h2><p>我使用时候有一点点问题，有时候图片数量会导致页面不停抖动</p><h3 id="显示效果-3"><a href="#显示效果-3" class="headerlink" title="显示效果"></a>显示效果</h3><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"image.png","alt":"img"},{"url":"image.png","alt":"img"},{"url":"image.png","alt":"img"},{"url":"image.png","alt":"img"}]</div>      <div class="gallery-items">      </div>    </div><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h2 id="选项卡（Tabs）"><a href="#选项卡（Tabs）" class="headerlink" title="选项卡（Tabs）"></a>选项卡（Tabs）</h2><h3 id="显示效果-4"><a href="#显示效果-4" class="headerlink" title="显示效果"></a>显示效果</h3><div class="tabs" id="标签一"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="标签一-1">第一个Tab</button><button type="button" class="tab " data-href="标签一-2">第二个Tab</button><button type="button" class="tab " data-href="标签一-3">第三个Tab</button></ul><div class="tab-contents"><div class="tab-item-content active" id="标签一-1"><p>这是第一块</p></div><div class="tab-item-content" id="标签一-2"><p>这是第二块</p></div><div class="tab-item-content" id="标签一-3"><p>这是第三块</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 标签一 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line">这是第一块</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 第二个Tab --&gt;</span><br><span class="line">这是第二块</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 第三个Tab --&gt;</span><br><span class="line">这是第三块</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><h2 id="折叠栏（Toggle）"><a href="#折叠栏（Toggle）" class="headerlink" title="折叠栏（Toggle）"></a>折叠栏（Toggle）</h2><p>两种<br><details class="toggle" ><summary class="toggle-button" style="">第一种</summary><div class="toggle-content"><h3 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h3><p>不带颜色</p><p><details class="toggle" ><summary class="toggle-button" style="">这是一个下拉隐藏</summary><div class="toggle-content"><p>这里隐藏了文字</p></div></details><br>带颜色<br><details class="toggle" style="border: 1px solid pink"><summary class="toggle-button" style="background-color: pink;">这是一个下拉隐藏</summary><div class="toggle-content"><p>这里隐藏了文字</p></div></details>&lt;/p&gt;</p><p><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle 这是一个下拉隐藏 %&#125;</span><br><span class="line">这里隐藏了文字</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% hideToggle 这是一个下拉隐藏,pink%&#125;</span><br><span class="line">这里隐藏了文字</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure></p></div></details><details class="folding-tag" ><summary> 第二种 </summary>              <div class='content'>              <p>显示效果</p><p><details class="folding-tag" ><summary> 这是一个折叠框 </summary>              <div class='content'>              <p>这是内容</p>              </div>            </details><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 可以有图片 %&#125;</span><br><span class="line">![img](image.png)</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line">- haha</span><br><span class="line">- hehe</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><h2 id="时间轴（timeline）"><a href="#时间轴（timeline）" class="headerlink" title="时间轴（timeline）"></a>时间轴（timeline）</h2><p>不带颜色<br><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div></p><p>带颜色<br><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>一</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-03</p></div></div><div class='timeline-item-content'><p>二</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-03</p></div></div><div class='timeline-item-content'><p>三</p></div></div></div></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% timeline 2022,pink %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">一</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 01-03 --&gt;</span><br><span class="line">二</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 01-03 --&gt;</span><br><span class="line">三</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><h2 id="文章页不渲染html"><a href="#文章页不渲染html" class="headerlink" title="文章页不渲染html"></a>文章页不渲染html</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div class=&quot;&quot;&gt;你的一些代码...&lt;/div&gt;</span><br><span class="line">&lt;script&gt;你的一些代码...&lt;/script&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><p>在文章头添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">sticky: 1 </span><br><span class="line">#置顶</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="卡片链接样式"><a href="#卡片链接样式" class="headerlink" title="卡片链接样式"></a>卡片链接样式</h2><h3 id="显示效果-5"><a href="#显示效果-5" class="headerlink" title="显示效果"></a>显示效果</h3><div class="flink"><div class="flink-name">引用</div><div class="flink-desc">更详细的说明和用法请查看引用</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://blog.aqcoder.cn/posts/5dd3/#flink" title="枫叶" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="null" onerror='this.onerror=null;this.src="/images/flink_error.png"' alt="枫叶" />              </div>              <div class="flink-item-name">枫叶</div>               <div class="flink-item-desc" title="更清晰的标签外挂详解">更清晰的标签外挂详解</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89" title="Butterfly" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="null" onerror='this.onerror=null;this.src="/images/flink_error.png"' alt="Butterfly" />              </div>              <div class="flink-item-name">Butterfly</div>               <div class="flink-item-desc" title="官方的文档">官方的文档</div>            </a>          </div></div></div><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% flink %&#125;</span><br><span class="line"></span><br><span class="line">- class_name: 引用</span><br><span class="line">  class_desc: 更详细的说明和用法请查看引用</span><br><span class="line">  link_list:</span><br><span class="line"></span><br><span class="line">  - name: 枫叶</span><br><span class="line">    link: https://blog.aqcoder.cn/posts/5dd3/#flink</span><br><span class="line">    avatar: </span><br><span class="line">    descr: 更清晰的标签外挂详解</span><br><span class="line"></span><br><span class="line">  - name: Butterfly</span><br><span class="line">    link: https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89</span><br><span class="line">    avatar: </span><br><span class="line">    descr: 官方的文档</span><br><span class="line">&#123;% endflink %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo+Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签外挂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git大小写不敏感问题</title>
      <link href="/posts/cc951152/"/>
      <url>/posts/cc951152/</url>
      
        <content type="html"><![CDATA[<h2 id="git大小写不敏感问题"><a href="#git大小写不敏感问题" class="headerlink" title="git大小写不敏感问题"></a>git大小写不敏感问题</h2><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>建立了一个CNAME文件，最开始是小写部署到git上发现生效不了，需要大写，改成大写后再次上传后发现没有用，还是小写。显示这个文件最后修改日期是之前的。百度方法</p><h2 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h2><p>下面三种只用执行一种</p><h3 id="终端修改"><a href="#终端修改" class="headerlink" title="终端修改"></a>终端修改</h3><p>修改git配置,<code>ignorecase 表示 忽略大小写， true 和 false 分别表示为 开启 与 关闭</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.ignorecase false</span><br></pre></td></tr></table></figure><h3 id="全局添加"><a href="#全局添加" class="headerlink" title="全局添加"></a>全局添加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.ignorecase false</span><br></pre></td></tr></table></figure><h4 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h4><p>修改 C:\Users\你的用户名\.gitconfig ，在里面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">    ignorecase = false</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>还是没有用，最后解决方法是：</p><p>删除本地的CNAME，重新部署，让git上的那个小写也被删除。然后再在本地重新新建一个大写的文件，重新部署。</p>]]></content>
      
      
      <categories>
          
          <category> 解决问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 大小写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="/posts/5c98fe12/"/>
      <url>/posts/5c98fe12/</url>
      
        <content type="html"><![CDATA[<p>Markdown的基础语法简单描述，忘记了就看一看吧。</p><p>来源：<a href="https://markdown.com.cn/">Markdown 官方教程</a></p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><div class="table-container"><table><thead><tr><th>元素</th><th>Markdown 语法</th></tr></thead><tbody><tr><td>标题（Heading）</td><td><code># H1</code><br><code>## H2</code><br><code>### H3</code></td></tr><tr><td>粗体（Bold）</td><td><code>**bold text**</code></td></tr><tr><td>斜体（Italic）</td><td><code>*italicized text*</code></td></tr><tr><td>引用块（Blockquote）</td><td><code>&gt; blockquote</code></td></tr><tr><td>有序列表（Ordered List）</td><td><code>1. First item</code><br><code>2. Second item</code><br><code>3. Third item</code></td></tr><tr><td>无序列表（Unordered List）</td><td><code>- First item</code><br><code>- Second item</code><br><code>- Third item</code></td></tr><tr><td>代码（Code）</td><td><code>`code` </code></td></tr><tr><td>分隔线（Horizontal Rule）</td><td><code>---</code></td></tr><tr><td>链接（Link）</td><td><code>[title](https://www.example.com)</code></td></tr><tr><td>图片（Image）</td><td><code>![alt text](image.jpg)</code></td></tr></tbody></table></div><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><div class="table-container"><table><thead><tr><th>元素</th><th>Markdown 语法</th></tr></thead><tbody><tr><td>表格（Table）</td><td>表格部分渲染有问题,本文最下方单独列出</td></tr><tr><td>代码块（Fenced Code Block）</td><td><code>```   &#123;     &quot;firstName&quot;: &quot;John&quot;,     &quot;lastName&quot;: &quot;Smith&quot;,     &quot;age&quot;: 25   &#125;   ``` </code></td></tr><tr><td>脚注（Footnote</td><td>Here’s a sentence with a footnote. <code>[^1]</code> <br><code>[^1]</code>: This is the footnote.</td></tr><tr><td>标题编号（Heading ID）</td><td><code>### My Great Heading &#123;#custom-id&#125;</code></td></tr><tr><td>定义列表（Definition List）</td><td><code>term</code><br><code>: definition</code></td></tr><tr><td>删除线（Strikethrough）</td><td><code>~~The world is flat.~~</code></td></tr><tr><td>任务列表（Task List）</td><td><code>- [x] Write the press release</code><br><code>- [ ] Update the website</code>   <br><code>- [ ] Contact the media</code></td></tr></tbody></table></div><p>下面是一个表格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table></div><p>对齐方式：左/中/右</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">Syntax</th><th style="text-align:center">Description</th><th style="text-align:right">Test Text</th></tr></thead><tbody><tr><td style="text-align:left">Header</td><td style="text-align:center">Title</td><td style="text-align:right">Here’s this</td></tr><tr><td style="text-align:left">Paragraph</td><td style="text-align:center">Text</td><td style="text-align:right">And more</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git提示warning:LF...</title>
      <link href="/posts/fe07822e/"/>
      <url>/posts/fe07822e/</url>
      
        <content type="html"><![CDATA[<p>git提示warning:LF will be replaced by CRLF’</p><h2 id="换行符‘-n’和回车符‘-r’"><a href="#换行符‘-n’和回车符‘-r’" class="headerlink" title="换行符‘\n’和回车符‘\r’"></a>换行符‘\n’和回车符‘\r’</h2><ul><li>回车符就是回到一行的开头，用符号r表示，十进制ASCII代码是13，十六进制代码为0x0D，回车（return）；</li><li>换行符就是另起一行，用n符号表示，ASCII代码是10，十六制为0x0A， 换行（newline）。</li></ul><p>所以我们平时编写文件的回车符应该确切来说叫做回车换行符。</p><h2 id="应用情况"><a href="#应用情况" class="headerlink" title="应用情况"></a>应用情况</h2><ul><li>Dos和Windows平台： 使用回车（CR）和换行（LF）两个字符来结束一行，回车+换行(CR+LF)，即“\r\n”；</li><li>Mac 和 Linux平台：只使用换行（LF）一个字符来结束一行，即“\n”；</li><li>最早Mac每行结尾是回车CR 即’\r’，后mac os x 也投奔了 unix。</li></ul><p>许多 Windows 上的编辑器会悄悄把行尾的换行（LF）字符转换成回车（CR）和换行（LF），或在用户按下 Enter 键时，插入回车（CR）和换行（LF）两个字符。</p><h2 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h2><ul><li>一个直接后果是，Unix/Mac系统下的文件在Windows里打开的话，所有文字会变成一行；</li><li>而Windows里的文件在Unix/Mac下打开的话，在每行的结尾可能会多出一个^M符号。</li><li>Linux保存的文件在windows上用记事本看的话会出现黑点。</li></ul><p>这些问题都可以通过一定方式进行转换统一，例如，在linux下，命令unix2dos 是把linux文件格式转换成windows文件格式，命令dos2unix 是把windows格式转换成linux文件格式。</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="情况一："><a href="#情况一：" class="headerlink" title="情况一："></a>情况一：</h3><p>Git 可以在你提交时自动地把回车（CR）和换行（LF）转换成换行（LF），而在检出代码时把换行（LF）转换成回车（CR）和换行（LF）。 你可以用<code>git config --global core.autocrlf true</code> 来打开此项功能。 如果是在 Windows 系统上，把它设置成 true，这样在检出代码时，换行会被转换成回车和换行：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#提交时转换为LF，检出时转换为CRLF</span></span><br><span class="line">$ git config --<span class="keyword">global</span> core.autocrlf <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="情况二："><a href="#情况二：" class="headerlink" title="情况二："></a>情况二：</h3><p>如果使用以换行（LF）作为行结束符的 Linux 或 Mac，你不需要 Git 在检出文件时进行自动的转换。然而当一个以回车（CR）和换行（LF）作为行结束符的文件不小心被引入时，你肯定想让 Git 修正。 所以，你可以把 core.autocrlf 设置成 input 来告诉 Git 在提交时把回车和换行转换成换行，检出时不转换：（这样在 Windows 上的检出文件中会保留回车和换行，而在 Mac 和 Linux 上，以及版本库中会保留换行。）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#提交时转换为LF，检出时不转换</span></span><br><span class="line">$ git config --<span class="keyword">global</span> core.autocrlf input</span><br></pre></td></tr></table></figure><h3 id="情况三："><a href="#情况三：" class="headerlink" title="情况三："></a>情况三：</h3><p>如果你是 Windows 程序员，且正在开发仅运行在 Windows 上的项目，可以设置 false 取消此功能，把回车保留在版本库中：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#提交检出均不转换</span></span><br><span class="line">$ git config --<span class="keyword">global</span> core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="你也可以在文件提交时进行safecrlf检查"><a href="#你也可以在文件提交时进行safecrlf检查" class="headerlink" title="你也可以在文件提交时进行safecrlf检查"></a>你也可以在文件提交时进行safecrlf检查</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#拒绝提交包含混合换行符的文件</span></span><br><span class="line">git config --<span class="keyword">global</span> core.safecrlf <span class="literal">true</span>   </span><br><span class="line"></span><br><span class="line"><span class="meta">#允许提交包含混合换行符的文件</span></span><br><span class="line">git config --<span class="keyword">global</span> core.safecrlf <span class="literal">false</span>   </span><br><span class="line"></span><br><span class="line"><span class="meta">#提交包含混合换行符的文件时给出警告</span></span><br><span class="line">git config --<span class="keyword">global</span> core.safecrlf warn</span><br></pre></td></tr></table></figure><h3 id="通俗解释"><a href="#通俗解释" class="headerlink" title="通俗解释"></a>通俗解释</h3><hr><ul><li>git 的 Windows 客户端基本都会默认设置 core.autocrlf=true，设置core.autocrlf=true, 只要保持工作区都是纯 CRLF 文件，编辑器用 CRLF 换行，就不会出现警告了；</li><li>Linux 最好不要设置 core.autocrlf，因为这个配置算是为 Windows 平台定制；</li><li>Windows 上设置 core.autocrlf=false，仓库里也没有配置 .gitattributes，很容易引入 CRLF 或者混合换行符（Mixed Line Endings，一个文件里既有 LF 又有CRLF）到版本库，这样就可能产生各种奇怪的问题。</li></ul><p>来源：<a href="https://www.jianshu.com/p/450cd21b36a4">关于git提示“warning: LF will be replaced by CRLF”终极解答 - 简书 (jianshu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 解决问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 报错 </tag>
            
            <tag> LF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo图片显示问题</title>
      <link href="/posts/34c7f5d/"/>
      <url>/posts/34c7f5d/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon modern"><p>目的：为了同时满足Typora和网站都显示图片采用插件。</p></div><p>本地采用Typora编辑，图片路径为<code>./文件夹/图片</code>，<code>文件夹/图片</code>才可以显示，而对于网站可以采用<code>图片</code>，<code>./图片</code>的方式显示。</p><h2 id="不同格式图片引用方法"><a href="#不同格式图片引用方法" class="headerlink" title="不同格式图片引用方法"></a>不同格式图片引用方法</h2><h3 id="md格式"><a href="#md格式" class="headerlink" title="md格式"></a>md格式</h3><ol><li>对于<code>文章页</code></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image</span>](<span class="link">image.png</span>)</span><br><span class="line">![<span class="string">image</span>](<span class="link">./image.png</span>)</span><br></pre></td></tr></table></figure><p>安装插件后（为了符合Typora的显示），这一种格式同时满足Typora和网站都显示图片<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image</span>](<span class="link">文章名文件夹/image.png</span>)</span><br></pre></td></tr></table></figure><br> 对于<code>标签页</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image</span>](<span class="link">./index/image.png</span>)</span><br></pre></td></tr></table></figure><h3 id="标签外挂格式"><a href="#标签外挂格式" class="headerlink" title="标签外挂格式"></a>标签外挂格式</h3><ol><li>对于<code>文章页</code>的标签外挂图片，都统一采用相对路径</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image image.png %&#125;</span><br></pre></td></tr></table></figure><ol><li>对于<code>标签页</code>的标签外挂图片</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image ./index/image.jpg %&#125;</span><br></pre></td></tr></table></figure><h2 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h2><p>修改配置文件<code>_config.yml</code>文件, 将 post_asset_folder 设置为true, 这样每次<strong>new 生成一个文章时都会在当前目录下生成一个同名的文件夹</strong></p><img src="/posts/34c7f5d/image-20240211224925166.png" class="" title="image-20240211224925166"><img src="/posts/34c7f5d/image-20240211231118860.png" class="" title="image-20240211231118860"><h2 id="设置typora"><a href="#设置typora" class="headerlink" title="设置typora"></a>设置typora</h2><p>这样配置插入图片会在当前目录<strong>生成一个同名的文件夹</strong>，并且图片路径会是<code>文件夹/图片名.jpg</code></p><img src="/posts/34c7f5d/image-20240211230403971.png" class="" title="image-20240211230403971"><img src="/posts/34c7f5d/image-20240211231349143.png" class="" title="image-20240211231349143"><p>所以生成文件可以采用<code>hexo new &quot;标签&quot;</code>，也可以直接在Typora中新建。因为都可以生成图片文件夹。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure><p>[插件项目地址]<a href="https://github.com/yiyungent/hexo-asset-img">https://github.com/yiyungent/hexo-asset-img</a></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>这样本地Typora可以查看图片，部署后图片也是生效的。</p>]]></content>
      
      
      <categories>
          
          <category> 解决问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机二级考试安装</title>
      <link href="/posts/6fd5f7da/"/>
      <url>/posts/6fd5f7da/</url>
      
        <content type="html"><![CDATA[<p>安装包来源于网络，本页面只提供教程，教程具有一定时效性和系统环境差异。</p><h2 id="下载并解压压缩包"><a href="#下载并解压压缩包" class="headerlink" title="下载并解压压缩包"></a>下载并解压压缩包</h2><p>*如果出现如下问题。点击右下角的Windows安全中心。进入Windows安全中心，按照图片操作。然后在点击重试。</p><p><img src="image-20240210183050756.png" alt="image-20240210183050756"></p><p><img src="image-20240210183309837.png" alt="image-20240210183309837"></p><p><img src="image-20240210183351030.png" alt="image-20240210183351030"></p><p>*压缩包内有破解文件，解压后会被杀毒软件识别然后直接删除掉。（遇到不信任的文件一定不要运行）</p><h2 id="压缩包内容如下"><a href="#压缩包内容如下" class="headerlink" title="压缩包内容如下"></a>压缩包内容如下</h2><p><img src="image-20240210174322210.png" alt="image-20240210174322210"></p><h2 id="打开-二级C语言-24年3月-exe-文件，点击下一步"><a href="#打开-二级C语言-24年3月-exe-文件，点击下一步" class="headerlink" title="打开 二级C语言 24年3月.exe  文件，点击下一步"></a>打开 二级C语言 24年3月.exe  文件，点击下一步</h2><p>*没展示的页面默认无修改，直接下一步</p><p><img src="image-20240210174811564.png" alt="image-20240210174811564"></p><h2 id="选择想要安装的目录"><a href="#选择想要安装的目录" class="headerlink" title="选择想要安装的目录"></a>选择想要安装的目录</h2><p>*路径中不要带中文，后面会用到这个路径，请记住它</p><p><img src="image-20240210174831692.png" alt="image-20240210174831692"></p><h2 id="等待安装完成。"><a href="#等待安装完成。" class="headerlink" title="等待安装完成。"></a>等待安装完成。</h2><p><img src="image-20240210175047568.png" alt="image-20240210175047568"></p><h2 id="按照-使用说明-txt-文件进行操作"><a href="#按照-使用说明-txt-文件进行操作" class="headerlink" title="按照 使用说明.txt  文件进行操作"></a>按照 使用说明.txt  文件进行操作</h2><p>*使用说明.txt:将 dnlib.dll、UnblockRegdll_WYKB.exe 两个文件放入无忧考吧安装目录，提前退出（无忧考吧主程序）并运行UnblockRegdll_WYKB.exe文件，点击Patch，双击打开无忧考吧主程序，点击离线激活，按照UnblockRegdll_WYKB.exe内的说明获得激活码。</p><h3 id="复制解压后文件中的如下2个文件到软件的安装目录中"><a href="#复制解压后文件中的如下2个文件到软件的安装目录中" class="headerlink" title="复制解压后文件中的如下2个文件到软件的安装目录中"></a>复制解压后文件中的如下2个文件到软件的安装目录中</h3><p><img src="image-20240210175458081.png" alt="image-20240210175458081"></p><p><img src="image-20240210180518731.png" alt="image-20240210180518731"></p><h3 id="运行-UnblockRegdll-WYKB-exe-文件，点击Patch按钮，等待一会。"><a href="#运行-UnblockRegdll-WYKB-exe-文件，点击Patch按钮，等待一会。" class="headerlink" title="运行 UnblockRegdll_WYKB.exe 文件，点击Patch按钮，等待一会。"></a>运行 UnblockRegdll_WYKB.exe 文件，点击Patch按钮，等待一会。</h3><p><img src="image-20240210184905746.png" alt="image-20240210184905746"></p><h3 id="运行主程序"><a href="#运行主程序" class="headerlink" title="运行主程序"></a>运行主程序</h3><p>*在桌面有图标，如下图，运行它即可</p><p><img src="image-20240210185048493.png" alt="image-20240210185048493"></p><h3 id="运行后如下图，复制产品ID"><a href="#运行后如下图，复制产品ID" class="headerlink" title="运行后如下图，复制产品ID"></a>运行后如下图，复制产品ID</h3><p><img src="image-20240210185241935.png" alt="image-20240210185241935"></p><h3 id="粘贴到下图位置"><a href="#粘贴到下图位置" class="headerlink" title="粘贴到下图位置"></a>粘贴到下图位置</h3><p><img src="image-20240210185408441.png" alt="image-20240210185408441"></p><h3 id="点击keygen，框内会生成激活码"><a href="#点击keygen，框内会生成激活码" class="headerlink" title="点击keygen，框内会生成激活码"></a>点击keygen，框内会生成激活码</h3><p><img src="image-20240210185559787.png" alt="image-20240210185559787"></p><h3 id="复制激活码，到下图位置，点击激活产品。激活后如下"><a href="#复制激活码，到下图位置，点击激活产品。激活后如下" class="headerlink" title="复制激活码，到下图位置，点击激活产品。激活后如下"></a>复制激活码，到下图位置，点击激活产品。激活后如下</h3><p><img src="image-20240210185721526.png" alt="image-20240210185721526"></p><p><img src="image-20240210185815146.png" alt="image-20240210185815146"></p><p>为了安全，破解完成后，删除刚刚复制到主程序中的2个文件，dnlib.dll和UnblockRegdll_WYKB.exe，当然一开始的解压文件也可以删除了。只留下一个压缩包用于备份就可以了。</p><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><p>随便选择一个模块，如综合练习，选择一套题目，点击开始练习</p><p><img src="image-20240210185905444.png" alt="image-20240210185905444"></p><h3 id="做题界面如下-题目分为4个项目，我选择程序填空作为演示。点击程序填空，打开考生文件夹。"><a href="#做题界面如下-题目分为4个项目，我选择程序填空作为演示。点击程序填空，打开考生文件夹。" class="headerlink" title="做题界面如下,题目分为4个项目，我选择程序填空作为演示。点击程序填空，打开考生文件夹。"></a>做题界面如下,题目分为4个项目，我选择程序填空作为演示。点击程序填空，打开考生文件夹。</h3><p>1.选择题2.程序填空3.程序修改4.程序设计</p><p><img src="image-20240210190331811.png" alt="image-20240210190331811"></p><h3 id="考试文件夹目录如下"><a href="#考试文件夹目录如下" class="headerlink" title="考试文件夹目录如下"></a>考试文件夹目录如下</h3><p><img src="image-20240210190254660.png" alt="image-20240210190254660"></p><h3 id="进入modi1，可以看到MODI1-C文件，这个就是题目源文件，"><a href="#进入modi1，可以看到MODI1-C文件，这个就是题目源文件，" class="headerlink" title="进入modi1，可以看到MODI1.C文件，这个就是题目源文件，"></a>进入modi1，可以看到MODI1.C文件，这个就是题目源文件，</h3><p><img src="image-20240210190837181.png" alt="image-20240210190837181"></p><h3 id="因为我安装了vc-2010，我只需要打开modi1-sln-文件"><a href="#因为我安装了vc-2010，我只需要打开modi1-sln-文件" class="headerlink" title="因为我安装了vc++2010，我只需要打开modi1.sln 文件"></a>因为我安装了vc++2010，我只需要打开modi1.sln 文件</h3><p><img src="image-20240210192336747.png" alt="image-20240210192336747"></p><h3 id="打开后如下，只需要按照题目修改绿色区域的错误。"><a href="#打开后如下，只需要按照题目修改绿色区域的错误。" class="headerlink" title="打开后如下，只需要按照题目修改绿色区域的错误。"></a>打开后如下，只需要按照题目修改绿色区域的错误。</h3><p>运行一下，看一下报错来修改语法错误，在按照题意修改逻辑错误。做法仁者见仁。只要能运行且满足题意。</p><p><img src="image-20240210191822087.png" alt="image-20240210191822087"></p><p><img src="image-20240210192835001.png" alt="image-20240210192835001"></p><h3 id="保存关闭，选择右上角交卷。有显示成绩，说明成功。其他功能自己可以去尝试。"><a href="#保存关闭，选择右上角交卷。有显示成绩，说明成功。其他功能自己可以去尝试。" class="headerlink" title="保存关闭，选择右上角交卷。有显示成绩，说明成功。其他功能自己可以去尝试。"></a>保存关闭，选择右上角交卷。有显示成绩，说明成功。其他功能自己可以去尝试。</h3><p><img src="image-20240210193057402.png" alt="image-20240210193057402"></p><h2 id="引用一篇vc-2010下载地址"><a href="#引用一篇vc-2010下载地址" class="headerlink" title="引用一篇vc++2010下载地址"></a>引用一篇vc++2010下载地址</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/m0_54780048/article/details/121660644</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机二级考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm镜像源</title>
      <link href="/posts/ffafaa5d/"/>
      <url>/posts/ffafaa5d/</url>
      
        <content type="html"><![CDATA[<h2 id="npm镜像源切换指令"><a href="#npm镜像源切换指令" class="headerlink" title="npm镜像源切换指令"></a>npm镜像源切换指令</h2><p>最新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>之前的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm set registry https://registry.npm.taobao.org/ </span><br></pre></td></tr></table></figure><h2 id="配置为淘宝源"><a href="#配置为淘宝源" class="headerlink" title="配置为淘宝源"></a>配置为淘宝源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><h2 id="还原默认镜像"><a href="#还原默认镜像" class="headerlink" title="还原默认镜像"></a>还原默认镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><h2 id="查看当前源"><a href="#查看当前源" class="headerlink" title="查看当前源"></a>查看当前源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm get registry</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> 镜像 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
